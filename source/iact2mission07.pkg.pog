package iAct2Mission07;

uses Debug,
     Set,
     List,
     String,
     Global,
     Sim,
     Group,
     Object,
     State,
     Task,
     Text,
     iSim,
     iBody,
     iHabitat,
     iShip,
     Subsim,
     iDockport,
     iLagrangePoint,
     iAI,
     iBackToBase,
     iComms,
     iConversation,
     iEscort,
     MapEnumerations,
     iFaction,
     iFormation,
     iMapEntity,
     iMissionTracker,
     iObjectives,
     iPilotSetup,
     iScore,
     iScriptedOrders,
     INIFile,
     iUtilities,
     CargoTypes,
     iCargoScript,
     iCargo,
     Math,
     iShipCreation,
     iWingmen;

provides Main,
         MissionHandler,
         Stub;

prototype Main();
prototype Stub();
prototype local_function_6( hstate state_ );
prototype local_function_10();
prototype task local_function_0();
prototype hgroup local_function_1();
prototype task local_function_2( hgroup group_, hstate state_ );
prototype task local_function_11( hsim param_0_, hstate state_ );
prototype hgroup local_function_3();
prototype task local_function_4( hgroup group_0_, hship ship_0_, hstate state_ );
prototype task local_function_5( hship ship_, hsim param_1_, hstate state_ );
prototype hgroup local_function_7();
prototype task local_function_8( hgroup group_, hisim param_1_, hstate state_ );
prototype task local_function_9( hstate state_ );
prototype task MissionHandler();

Main()
{
	Task.Detach( start local_function_0() );
}

Stub()
{
	Global.SetBool( "g_act2_ambassador_rescued", true );
}

local_function_6( hstate state_ )
{
	hsim waypoint;
	hship playerShip = iShip.FindPlayerShip();
	
	waypoint = iUtilities.CreateWaypointRelativeTo( iSim.FindByNameInSystem( "Brotherhood Exile Ark", "map:/geog/badlands/santa_romera" ), 0.0, 100000.0, 5000.0 );
	Object.AddHandleProperty( playerShip, "restart_waypoint", waypoint );
	Object.AddHandleProperty( playerShip, "current_mission_state", state_ );
	iScore.SetRestartPoint();
}

local_function_10()
{
	iObjectives.Remove( "a2_m07_objectives_lure" );
	iObjectives.Remove( "a2_m07_objectives_redezvous" );
}

task local_function_0()
{
	htask local_0;
	int local_1;
	
	while ( iComms.IsInConversation() )
	{
		Task.Sleep( Task.Current(), 0.50 );
	}
	
	if ( !iUtilities.SkipMission( "Ambassador Encounter??" ) )
	{
		Task.Detach( local_0 = start MissionHandler() );
		return;
	}
	
	Stub();
	return;
}

hgroup local_function_1()
{
	hgroup group = Group.Create();
	hship shipLightminer;
	hfaction independent = iFaction.Find( "Independent" );
	hfaction player = iFaction.Find( "Player" );
	
	iFaction.SetFeeling( independent, player, 1.0 );
	iFaction.SetFeeling( player, independent, 1.0 );
	
	if ( independent == false )
	{
		debug Debug.Error( "iAct2Mission07: Unable to find Freelancer faction\n" );
	}
	
	shipLightminer = iShip.Create( "ini:/sims/ships/utility/lightminer", "a2_m07_name_muppet" );
	iSim.SetFaction( shipLightminer, independent );
	iPilotSetup.Generic( shipLightminer );
	Group.AddSim( group, shipLightminer );
	debug Debug.PrintString( "Mission 2-07: created freelancer posse\n" );
	return group;
}

task local_function_2( hgroup group_, hstate state_ )
{
	bool local_0 = false;
	int convoResponse;
	int local_2;
	string local_3;
	hship groupLeader = iShip.Cast( Group.Leader( group_ ) );
	hship playerShip;
	hfaction player = iFaction.Find( "Player" );
	hfaction independent = iFaction.Find( "Independent" );
	
	debug Debug.PrintString( "Mission 2-07: started freelancer dialogue monitor\n" );
	
	schedule
	{
		every 5.0:
		{
			debug Debug.PrintString( "Mission 2-07: Still in freelance dialogue monitor\n" );
			playerShip = iShip.FindPlayerShip();
			
			if ( Sim.Cast( groupLeader ) && (local_0 == 0) )
			{
				if ( Sim.DistanceBetween( playerShip, groupLeader ) <= 700.0 )
				{
					if ( (State.Progress( state_ ) == 0) || (State.Progress( state_ ) == 1) )
					{
						debug Debug.PrintString( "Mission 2-07: Starting freelancer dialogue session\n" );
						local_0 = true;
						iConversation.Begin();
						iConversation.AddResponse( "a2_m07_text_player_c1_option_1_yes", "a2_m07_dialogue_player_c1_option_1_yes" );
						
						if ( State.Progress( state_ ) == 0 )
						{
							iConversation.AddResponse( "a2_m07_text_player_c1_option_2_no", "a2_m07_dialogue_player_c1_option_2_no" );
						}
						else
						{
							iConversation.AddResponse( "a2_m07_text_player_c1_option_2_just_looking", "a2_m07_dialogue_player_c1_option_2_just_looking" );
						}
						
						if ( State.Progress( state_ ) == 0 )
						{
							convoResponse = iConversation.Ask( groupLeader, "Tadsar", "a2_m07_dialogue_freelancers_c1_your_new_in_the_area" );
						}
						else
						{
							convoResponse = iConversation.Ask( groupLeader, "Tadsar", "a2_m07_dialogue_freelancers_c1_back_again" );
						}
						
						switch ( convoResponse )
						{
							case 1:
								debug Debug.PrintString( "Mission 2-07: Player took freelancer option one - no\n" );
								iConversation.Say( groupLeader, "Tadsar", "a2_m07_dialogue_freelancers_c1_response_1_youll_probably" );
								iConversation.End();
								State.SetProgress( state_, 2 );
								local_0 = false;
								return;
							
							case 2:
								debug Debug.PrintString( "Mission 2-07: Player took freelancer option two - just looking\n" );
								iConversation.Say( groupLeader, "Tadsar", "a2_m07_dialogue_freelancers_c1_response_2_fine" );
								iConversation.End();
								State.SetProgress( state_, 1 );
								local_0 = false;
								Task.Sleep( Task.Current(), 10.0 );
								break;
						}
					}
				}
			}
		}
	}
	
	debug Debug.PrintString( "Mission 2-07: end of freelancer dialogue monitor\n" );
}

task local_function_11( hsim param_0_, hstate state_ )
{
	bool local_0 = false;
	int local_1;
	hgroup group;
	hship playerShip = iShip.FindPlayerShip();
	hship groupLeader;
	
	debug Debug.PrintString( "Mission 2-07: Started actual freelance handler\n" );
	
	schedule
	{
		every 5.0:
		{
			debug Debug.PrintString( "Mission 2-07: Freelance handler cycle.\n" );
			
			if ( iUtilities.PlayerInRange( param_0_ ) && (local_0 == 0) )
			{
				local_0 = true;
				
				atomic
				{
					group = local_function_1();
					groupLeader = iShip.Cast( Group.Leader( group ) );
					Sim.PlaceRelativeTo( groupLeader, param_0_, 0.0, 0.0, 0.0 );
					Sim.PointAt( groupLeader, playerShip );
					iFormation.LineAbreast( group, 70.0, true );
				}
				
				start local_function_2( group, state_ );
			}
			else if ( !iUtilities.PlayerInRange( param_0_ ) && (local_0 == 1) )
			{
				local_0 = false;
				Group.Destroy( group, true );
				debug Debug.PrintString( "Mission 2-07: Nuking freelancers - no one wants them anymore\n" );
			}
		}
	}
	
	debug Debug.PrintString( "Mission 2-07: Ending freelancer hander\n" );
}

hgroup local_function_3()
{
	hgroup group = Group.Create();
	hship ship;
	hfaction marauders = iFaction.Find( "Marauders" );
	
	if ( marauders == false )
	{
		debug Debug.Error( "iAct2Mission07: Unable to find marauder faction\n" );
	}
	
	ship = iShip.Create( "ini:/sims/ships/marauder/marauder_cutter_hard", "a2_m07_name_deaths" );
	iSim.SetFaction( ship, marauders );
	iPilotSetup.Generic( ship );
	Group.AddSim( group, ship );
	ship = iShip.Create( "ini:/sims/ships/marauder/marauder_cutter", "a2_m07_name_flaming" );
	iSim.SetFaction( ship, marauders );
	iPilotSetup.Generic( ship );
	Group.AddSim( group, ship );
	ship = iShip.Create( "ini:/sims/ships/marauder/marauder_cutter", iShipCreation.ShipName( "Marauders", -1 ) );
	iSim.SetFaction( ship, marauders );
	iPilotSetup.Generic( ship );
	Group.AddSim( group, ship );
	debug Debug.PrintString( "Mission 2-07: Done made marauder vessels, y'all.\n" );
	return group;
}

task local_function_4( hgroup group_0_, hship ship_0_, hstate state_ )
{
	hship ship_1;
	hship shipMailPod;
	hgroup group_1 = Group.Create();
	hgroup group_2 = iWingmen.Group();
	list localList = iWingmen.TrueWingmanList();
	
	debug Debug.PrintString( "Mission 2-07: Attack handler started\n" );
	iShip.DisruptLDSDrive( ship_0_, 30.0 );
	Task.Sleep( Task.Current(), 1.0 );
	Sim.PlaceNear( Group.Leader( group_0_ ), ship_0_, Global.Float( "g_player_sensor_range" ) / 2.0 );
	iEscort.Goose( group_0_, 50.0, 8000.0, true );
	iAI.GiveAttackOrder( group_0_, group_2 );
	iConversation.OneLiner( none, "name_clay", "a2_m07_dialogue_clay_heads_up_kid" );
	
	schedule
	{
		every 4.0:
		{
			debug Debug.PrintString( "Mission 2-07: Attack handler schedule running\n" );
			
			debug atomic
			{
				Debug.PrintString( "marauder count " );
				Debug.PrintInt( Group.SimCount( group_0_ ) );
				Debug.PrintString( "\n" );
			}
			
			if ( State.Progress( state_ ) == 100 )
			{
				return;
			}
			
			if ( (Group.SimCount( group_0_ ) == 0) && (State.Progress( state_ ) != 100) )
			{
				if ( iWingmen.Count() > 0 )
				{
					ship_1 = iShip.Cast( List.GetNth( localList, 0 ) );
					iConversation.OneLiner( none, "name_clay", "a2_m07_dialogue_clay_nice_one" );
					iConversation.OneLiner( ship_1, "", "a2_m07_dialogue_wingman_thanks_for_the_help" );
					shipMailPod = iShip.Create( "ini:/sims/ships/utility/mail_pod", "name_cargo_pod" );
					Sim.PlaceNear( shipMailPod, ship_1, 0.0 );
					Object.SetIntProperty( shipMailPod, "cargo", 195 );
					group_1 = iWingmen.PurgeToGroup();
					Task.Detach( start iScriptedOrders.LagrangeHandler( group_1, "Random" ) );
					debug Debug.PrintString( "Mission 2-07: maraudas dead we done good\n" );
				}
				else
				{
					iConversation.OneLiner( none, "name_clay", "a2_m07_dialogue_clay_nice_one_shame" );
					debug Debug.PrintString( "Mission 2-07: maraudas dead but our mates snuffed it.\n" );
				}
				
				iObjectives.SetState( "a2_m07_objectives_lure", OS_Succeeded );
				State.SetProgress( state_, 6 );
				debug Debug.PrintString( "Mission 2-07: Attack handler ends\n" );
				return;
			}
		}
	}
}

task local_function_5( hship ship_, hsim param_1_, hstate state_ )
{
	hgroup group;
	bool local_1 = false;
	
	iComms.Shout( none, "name_clay", "a2_m07_dialogue_clay_lets_move_kid" );
	debug Debug.PrintString( "Mission 2-07: Marauda handler starts\n" );
	
	schedule
	{
		every 5.0:
		{
			debug Debug.PrintString( "Mission 2-07: Maruader handler schedule runs\n" );
			
			if ( (Sim.DistanceBetween( ship_, param_1_ ) > 3000.0) && !local_1 )
			{
				local_1 = true;
				group = local_function_3();
				start local_function_4( group, ship_, state_ );
			}
		}
	}
	
	debug Debug.PrintString( "Mission 2-07: Marauda handler ends\n" );
}

hgroup local_function_7()
{
	hgroup group = Group.Create();
	hship shipYacht;
	hfaction m_C_A_ = iFaction.Find( "M.C.A." );
	
	if ( m_C_A_ == false )
	{
		debug Debug.Error( "iAct2Mission07: Unable to find MCA faction\n" );
	}
	
	shipYacht = iShip.Create( "ini:/sims/ships/corporate/yacht", "a2_m07_name_ambassador" );
	iSim.SetFaction( shipYacht, m_C_A_ );
	iPilotSetup.GenericCargoPod( shipYacht );
	iSim.SetIndestructable( shipYacht, true );
	Group.AddSim( group, shipYacht );
	shipYacht = iShip.Create( "ini:/sims/ships/corporate/interceptor", "a2_m07_name_jester" );
	iSim.SetFaction( shipYacht, m_C_A_ );
	iPilotSetup.Generic( shipYacht );
	Group.AddSim( group, shipYacht );
	debug Debug.PrintString( "Mission 2-07: W'hoo! made the ambasador!\n" );
	return group;
}

task local_function_8( hgroup group_, hisim param_1_, hstate state_ )
{
	bool local_0 = false;
	int convoResponse;
	int local_2;
	string local_3;
	hsim waypoint;
	hship groupLeader = iShip.Cast( Group.Leader( group_ ) );
	hship ship = iShip.Cast( Group.NthSim( group_, 1 ) );
	hship playerShip;
	hfaction player = iFaction.Find( "Player" );
	hfaction m_C_A_ = iFaction.Find( "M.C.A." );
	
	debug Debug.PrintString( "Mission 2-07: Starting ambasador dialogue monitor\n" );
	
	schedule
	{
		every 5.0:
		{
			debug Debug.PrintString( "Mission 2-07: Running ambasador dialogue monitor\n" );
			playerShip = iShip.FindPlayerShip();
			
			if ( (Sim.Cast( groupLeader ) != false) && (local_0 == 0) )
			{
				if ( ((Sim.DistanceBetween( playerShip, groupLeader ) <= 700.0) && (State.Progress( state_ ) == 2)) || (State.Progress( state_ ) == 3) )
				{
					debug Debug.PrintString( "Mission 2-07: Starting conversation with ambasador.\n" );
					local_0 = true;
					iConversation.Begin();
					iConversation.AddResponse( "a2_m07_text_player_c2_option_1_cal_help", "a2_m07_dialogue_player_c2_option_1_cal_help" );
					iConversation.AddResponse( "a2_m07_text_player_c2_option_2_just_passing_through", "a2_m07_dialogue_player_c2_option_2_just_passing_through" );
					
					if ( State.Progress( state_ ) == 2 )
					{
						convoResponse = iConversation.Ask( groupLeader, "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_c2_who_are_you" );
					}
					else
					{
						convoResponse = iConversation.Ask( groupLeader, "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_c2_ah_your_back" );
					}
					
					switch ( convoResponse )
					{
						case 1:
							debug Debug.PrintString( "Mission 2-07: Player issued ambassador with response one\n" );
							iConversation.Say( groupLeader, "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_c2_response_1_ah_a_common" );
							iConversation.Say( none, "name_cal", "a2_m07_dialogue_player_c2_response_1_we_can_help" );
							iConversation.Say( groupLeader, "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_c2_response_1_hm_that_might" );
							iConversation.End();
							iObjectives.SetState( "a2_m07_objectives_redezvous", OS_Succeeded );
							iObjectives.Add( "a2_m07_objectives_lure" );
							iAI.GiveFormateOrder( groupLeader, playerShip, 40.0, 0.0, 0.0 );
							State.SetProgress( state_, 4 );
							local_0 = false;
							iBackToBase.Inhibit();
							Task.Sleep( Task.Current(), 10.0 );
							break;
						
						case 2:
							debug Debug.PrintString( "Mission 2-07: Player issued ambassador with response two\n" );
							iConversation.OneLiner( groupLeader, "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_c2_response_2_hm_ok_then" );
							State.SetProgress( state_, 3 );
							local_0 = false;
							break;
					}
				}
				else if ( (State.Progress( state_ ) == 4) && (Sim.DistanceBetween( groupLeader, param_1_ ) > 8000.0) )
				{
					debug Debug.PrintString( "Mission 2-07: Ambasador following player initiates conversation\n" );
					local_0 = true;
					iAI.PurgeOrders( groupLeader );
					iConversation.OneLiner( Sim.Cast( groupLeader ), "a2_m07_name_ambassador", "a2_m07_dialogue_ambassador_ok_this_should_do" );
					iSim.SetFaction( playerShip, m_C_A_ );
					iAI.GiveApproachOrder( groupLeader, iMapEntity.FindByNameInSystem( "Lucrecia's Base", Global.String( "g_player_base_system" ) ) );
					iAI.GiveFormateOrder( ship, playerShip, 60.0, 0.0, 0.0 );
					iWingmen.Initialise();
					iWingmen.AddWingman( ship );
					State.SetProgress( state_, 5 );
					waypoint = iUtilities.CreateWaypointNear( playerShip, 0.0 );
					Task.Detach( start local_function_5( playerShip, waypoint, state_ ) );
				}
			}
		}
	}
	
	debug Debug.PrintString( "Mission 2-07: Ending ambasador dialogue handler\n" );
}

task local_function_9( hstate state_ )
{
	bool local_0 = false;
	int local_1;
	hgroup group;
	hship playerShip = iShip.FindPlayerShip();
	int local_4;
	hisim brotherhoodExileArk = iSim.FindByNameInSystem( "Brotherhood Exile Ark", "map:/geog/badlands/santa_romera" );
	
	if ( !brotherhoodExileArk )
	{
		debug Debug.Error( "blimey guv - 2-07 can't find the brotherhood exile ark!" );
	}
	
	debug Debug.PrintString( "Mission 2-07: Ambassador handler has been started.\n" );
	
	schedule
	{
		every 5.0:
		{
			debug Debug.PrintString( "Mission 2-07: Ambasador handler shedule is running\n" );
			
			if ( iSim.ActiveWorld() == "map:/geog/badlands/santa_romera" )
			{
				if ( iUtilities.PlayerInRange( brotherhoodExileArk ) && (local_0 == 0) )
				{
					local_function_6( state_ );
					debug Debug.PrintString( "Mission 2-07: Player in range of activation point\n" );
					local_0 = true;
					group = local_function_7();
					Sim.PlaceRelativeTo( Group.Leader( group ), brotherhoodExileArk, 1000.0, 1000.0, 1000.0 );
					iFormation.LineAbreast( group, 50.0, true );
					
					if ( State.Progress( state_ ) == 4 )
					{
						State.SetProgress( state_, 3 );
					}
					
					start local_function_8( group, brotherhoodExileArk, state_ );
				}
				else if ( !iUtilities.PlayerInRange( brotherhoodExileArk ) && (local_0 == 1) )
				{
					debug Debug.PrintString( "Mission 2-07: Player in range of activation point\n" );
					
					if ( !iUtilities.PlayerInRangeOfGroup( group ) )
					{
						local_0 = false;
						Group.Destroy( group, true );
					}
				}
			}
		}
	}
	
	debug Debug.PrintString( "Mission 2-07: Ambassador handler starts\n" );
}

task MissionHandler()
{
	int local_0;
	hisim libertyLPoint = iSim.FindByNameInSystem( "Liberty L-Point", "map:/geog/badlands/santa_romera" );
	hship playerShip = iShip.FindPlayerShip();
	bool local_3 = false;
	hstate taskState = State.Find( Task.Current() );
	htask currentTask = Task.Current();
	
	debug Debug.PrintString( "Mission 2-07: Mission Handler started\n" );
	iMissionTracker.AddMission( Task.Current(), 2, 7 );
	Text.Add( "csv:/text/act_2/act2_mission07" );
	Text.Add( "csv:/text/act_2/act2_mission07_addendum" );
	taskState = State.Find( currentTask );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 2 );
	}
	
	local_function_6( taskState );
	
	debug
	{
		if ( libertyLPoint == false )
		{
			Debug.Error( "Unable to find L-point!" );
		}
	}
	
	if ( (State.Progress( taskState ) == 2) || (State.Progress( taskState ) == 3) )
	{
		iObjectives.Add( "a2_m07_objectives_redezvous" );
	}
	
	if ( (State.Progress( taskState ) == 4) || (State.Progress( taskState ) == 5) )
	{
		State.SetProgress( taskState, 3 );
	}
	
	if ( (State.Progress( taskState ) == 2) || (State.Progress( taskState ) == 3) )
	{
		start local_function_9( taskState );
	}
	
	schedule
	{
		every 3.0:
		{
			debug Debug.PrintString( "Mission 2-07: mission handler schedule running\n" );
			
			if ( (State.Progress( taskState ) == 6) || (State.Progress( taskState ) == 100) )
			{
				if ( State.Progress( taskState ) == 6 )
				{
					Global.SetBool( "g_act2_ambassador_rescued", true );
				}
				else
				{
					atomic
					{
						Global.SetBool( "g_skip_locked", false );
					}
					
					Task.Detach( start local_function_0() );
					local_function_10();
					iScore.GotoRestartPoint();
				}
				
				iSim.SetFaction( playerShip, iFaction.Find( "Player" ) );
				iBackToBase.Allow();
				iWingmen.Purge();
				iUtilities.RemoveMissionRestart();
				State.Destroy( Task.Current() );
				debug Debug.PrintString( "Mission 2-07: ending mission handler. Mission concluded\n" );
				iMissionTracker.RemoveMission( Task.Current() );
				return;
			}
		}
	}
}

