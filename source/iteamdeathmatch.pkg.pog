package iteamdeathmatch;

uses Debug,
     GUI,
     Set,
     List,
     String,
     Global,
     Sim,
     Group,
     INIFile,
     Input,
     Math,
     Object,
     Task,
     Text,
     iSim,
     iBody,
     iHabitat,
     iShip,
     Subsim,
     iDockport,
     iLagrangePoint,
     iAI,
     MapEnumerations,
     iFaction,
     iBotPak,
     iConversation,
     iDirector,
     iFactionScript,
     iGUI,
     iGame,
     iHUD,
     iMPUtils,
     iMap,
     iMapEntity,
     iMultiplay;

provides ServerMain,
         ServerExit,
         ServerPlayerEnter,
         ServerPlayerLeave,
         PlayerDeath,
         ServerOnUserMessage,
         ServerOnEndGame,
         ServerOnUpdateScores,
         ClientMain,
         ClientExit,
         ClientPlayerEnter,
         ClientPlayerLeave,
         ClientPlayerSay,
         ClientPlayerTeamSay,
         ClientPlayerKilled,
         ClientOpponentKilled,
         ClientOnUserMessage,
         ClientEndGame,
         ClientRespawn,
         ClientGUI,
         ClientDoUndock,
         ClientScores,
         ClientDoScores,
         ClientTauntReturn,
         ClientDefaultTaunt1,
         ClientDefaultTaunt2,
         ClientDefaultTaunt3,
         ClientDefaultTaunt4,
         WeaponAmmoPowerUp,
         HealthPowerUp,
         SpeedPowerUp,
         SpeedPowerDown,
         CaptureTheFlagScreen,
         OnSelectRedTeam,
         OnSelectBlueTeam,
         ScoreScreenQuitButton,
         ScoreScreenBackButton,
         OnQuit,
         BotDeath;

prototype local_function_3( hship ship_ );
prototype local_function_4( hship ship_ );
prototype local_function_5( hship ship_ );
prototype local_function_11( hship ship_0_, hship ship_1_ );
prototype WeaponAmmoPowerUp( hsim param_0_, hsim param_1_ );
prototype SpeedPowerUp( hsim param_0_, hsim param_1_ );
prototype SpeedPowerDown( hsim param_0_, hsim param_1_ );
prototype HealthPowerUp( hsim param_0_, hsim param_1_ );
prototype OnQuit();
prototype CaptureTheFlagScreen();
prototype OnSelectRedTeam();
prototype OnSelectBlueTeam();
prototype hwindow local_function_1( int param_0_, int param_1_, int param_2_, hwindow window_0_, string param_4_, string param_5_ );
prototype hwindow local_function_18( hfaction faction_, string param_1_, int param_2_, int param_3_, hwindow window_0_ );
prototype ScoreScreenBackButton();
prototype ScoreScreenQuitButton();
prototype local_function_2( hwindow window_, string param_1_ );
prototype local_function_16();
prototype task local_function_0();
prototype ServerOnUserMessage( hsim param_0_, int param_1_, string param_2_ );
prototype ServerPlayerLeave( hsim param_0_ );
prototype ServerPlayerEnter( hsim param_0_ );
prototype task local_function_6( hsim param_0_, string param_1_ );
prototype PlayerDeath( hsim param_0_ );
prototype task local_function_9( hsim param_0_, float param_1_, float param_2_ );
prototype task local_function_8();
prototype ServerOnUpdateScores();
prototype ServerOnEndGame();
prototype ServerExit();
prototype ServerMain();
prototype task local_function_13( hsim param_0_, string param_1_ );
prototype task local_function_17( hsim param_0_, float param_1_, float param_2_ );
prototype local_function_10();
prototype task local_function_15( float param_0_ );
prototype task local_function_12( hship ship_ );
prototype local_function_7( hgroup group_, hship ship_0_ );
prototype task BotDeath( hsim param_0_ );
prototype ClientDoUndock();
prototype ClientDoScores();
prototype ClientScores();
prototype ClientOnUserMessage( hsim param_0_, int param_1_, string param_2_ );
prototype ClientDefaultTaunt1();
prototype ClientDefaultTaunt2();
prototype ClientDefaultTaunt3();
prototype ClientDefaultTaunt4();
prototype ClientPlayerSay();
prototype ClientPlayerTeamSay();
prototype ClientTauntReturn( string param_0_ );
prototype task local_function_14( hisim param_0_, hship ship_ );
prototype ClientPlayerKilled();
prototype ClientOpponentKilled();
prototype ClientEndGame( string param_0_, bool param_1_ );
prototype ClientGUI();
prototype ClientRespawn( hship ship_ );
prototype ClientPlayerEnter( hobject param_0_ );
prototype ClientPlayerLeave();
prototype task local_function_19();
prototype ClientExit();
prototype ClientMain();

local_function_3( hship ship_ )
{
	if ( Object.PropertyExists( ship_, "player" ) )
	{
		iMultiplay.ServerSetPlayerFragsCount( ship_, iMultiplay.ServerPlayerFragCount( ship_ ) + 1 );
		return;
	}
	
	if ( !Object.PropertyExists( ship_, "frag_count" ) )
	{
		return;
	}
	
	Object.SetIntProperty( ship_, "frag_count", Object.IntProperty( ship_, "frag_count" ) + 1 );
}

local_function_4( hship ship_ )
{
	if ( Object.PropertyExists( ship_, "player" ) )
	{
		iMultiplay.ServerSetPlayerFragsCount( ship_, iMultiplay.ServerPlayerFragCount( ship_ ) - 1 );
		return;
	}
	
	if ( !Object.PropertyExists( ship_, "frag_count" ) )
	{
		return;
	}
	
	Object.SetIntProperty( ship_, "frag_count", Object.IntProperty( ship_, "frag_count" ) - 1 );
}

local_function_5( hship ship_ )
{
	if ( Object.PropertyExists( ship_, "player" ) )
	{
		iMultiplay.ServerSetPlayerDiedCount( ship_, iMultiplay.ServerPlayerDiedCount( ship_ ) + 1 );
		return;
	}
	
	Object.SetIntProperty( ship_, "bot_deaths", Object.IntProperty( ship_, "bot_deaths" ) + 1 );
}

local_function_11( hship ship_0_, hship ship_1_ )
{
	Object.SetStringProperty( ship_1_, "death_script", "iteamdeathmatch.BotDeath" );
	Object.AddIntProperty( ship_1_, "frag_count", Object.IntProperty( ship_0_, "frag_count" ) );
	Object.AddIntProperty( ship_1_, "bot_deaths", Object.IntProperty( ship_0_, "bot_deaths" ) );
}

WeaponAmmoPowerUp( hsim param_0_, hsim param_1_ )
{
	iMPUtils.WeaponAmmoPowerUp( param_0_, param_1_ );
}

SpeedPowerUp( hsim param_0_, hsim param_1_ )
{
	iMPUtils.SpeedPowerUp( param_0_, param_1_ );
}

SpeedPowerDown( hsim param_0_, hsim param_1_ )
{
	iMPUtils.SpeedPowerDown( param_0_, param_1_ );
}

HealthPowerUp( hsim param_0_, hsim param_1_ )
{
	iMPUtils.HealthPowerUp( param_0_, param_1_ );
}

OnQuit()
{
	GUI.PopScreen();
	GUI.PopScreen();
}

CaptureTheFlagScreen()
{
	hwindow window_0;
	hwindow window_1;
	int local_2;
	hwindow window_2;
	hwindow window_3;
	list localList;
	
	GUI.SetBackgroundImage( "texture:/images/backgrounds/multiplay_ctf_background", false );
	GUI.SetDefaultFont( Global.String( "GUI_title_font" ) );
	window_0 = iGUI.CreateMenuButton( "iTeamDeathMatch.OnSelectRedTeam", "Join Red Team", localList );
	window_1 = iGUI.CreateMenuButton( "iTeamDeathMatch.OnSelectBlueTeam", "Join Blue Team", localList );
	window_2 = iGUI.CreateMenuButton( "iTeamDeathMatch.OnQuit", "Quit", localList );
	window_3 = iGUI.CreateMenu( localList );
	start local_function_0();
}

OnSelectRedTeam()
{
	hfaction faction;
	hisim playerShip = iSim.Cast( iShip.FindPlayerShip() );
	
	faction = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	iSim.SetFaction( playerShip, faction );
	iMultiplay.ClientSendUserMessage( playerShip, 1, Text.Field( "mp_flag_team_a", FT_Text ) );
}

OnSelectBlueTeam()
{
	hfaction faction;
	hisim playerShip = iSim.Cast( iShip.FindPlayerShip() );
	
	faction = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	iSim.SetFaction( iShip.FindPlayerShip(), faction );
	iMultiplay.ClientSendUserMessage( playerShip, 1, Text.Field( "mp_flag_team_b", FT_Text ) );
}

hwindow local_function_1( int param_0_, int param_1_, int param_2_, hwindow window_0_, string param_4_, string param_5_ )
{
	hwindow window_1 = iGUI.CreateAndInitialiseStaticWindow( param_0_, 0, param_1_, param_2_, window_0_, param_4_, param_5_ );
	
	GUI.SetWindowTextFormatting( window_1, false, 0 );
	GUI.SetWindowStateColours( window_1, Global.Float( "GUI_neutral_red" ), Global.Float( "GUI_neutral_green" ), Global.Float( "GUI_neutral_blue" ), Global.Float( "GUI_listbox_focused_red" ), Global.Float( "GUI_listbox_focused_green" ), Global.Float( "GUI_listbox_focused_blue" ), Global.Float( "GUI_selected_red" ), Global.Float( "GUI_selected_green" ), Global.Float( "GUI_selected_blue" ) );
	return window_1;
}

hwindow local_function_18( hfaction faction_, string param_1_, int param_2_, int param_3_, hwindow window_0_ )
{
	hwindow window_1;
	int local_1;
	hwindow window_2;
	hwindow window_3;
	hwindow window_4;
	int gUITabTextOffset = Global.Int( "GUI_tab_text_offset" );
	int local_6 = GUI.WindowCanvasWidth( window_0_ );
	int local_7 = ( local_6 / 3 );
	int local_8 = ( (local_6 / 3) + 100 );
	int local_9 = local_6;
	int constant_0 = 13;
	int local_11;
	int local_12;
	int local_13;
	int local_14;
	int local_15;
	int local_16;
	int gUIListboxEntryheight = Global.Int( "GUI_listbox_entryheight" );
	int constant_1 = 5;
	string local_19 = Global.String( "type_font" );
	string local_20 = Global.String( "type_font" );
	
	window_1 = GUI.CreateWindow( 0, 0, local_6, Global.Int( "GUI_listbox_entryheight" ), none );
	local_12 = constant_0;
	local_11 = ( local_7 - (local_12 + 5) );
	local_14 = ( local_7 + (gUITabTextOffset - 2) );
	local_13 = ( local_8 - (local_14 + 5) );
	local_16 = ( local_8 + (gUITabTextOffset - 2) );
	local_15 = ( local_9 - (local_16 + 5) );
	window_2 = local_function_1( local_12, local_11, gUIListboxEntryheight, window_1, local_19, param_1_ );
	
	if ( iFaction.Name( faction_ ) == Text.Field( "mp_flag_team_a", FT_Text ) )
	{
		GUI.SetWindowStateColours( window_2, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0 );
	}
	else if ( iFaction.Name( faction_ ) == Text.Field( "mp_flag_team_b", FT_Text ) )
	{
		GUI.SetWindowStateColours( window_2, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0 );
	}
	else
	{
		GUI.SetWindowStateColours( window_2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 );
	}
	
	window_3 = local_function_1( local_14, local_13, gUIListboxEntryheight, window_1, local_20, String.FromInt( param_2_ ) );
	window_4 = local_function_1( local_16, local_15, gUIListboxEntryheight, window_1, local_20, String.FromInt( param_3_ ) );
	GUI.AddListBoxEntry( window_0_, window_1 );
	return window_1;
}

ScoreScreenBackButton()
{
	if ( iMultiplay.IsGameEnded() )
	{
		iMultiplay.ClientSetRequestedToCycle( false );
		GUI.PopScreen();
		GUI.PushScreen( "icPDAOverlayManager" );
		GUI.OverlayScreen( "icNetworkScreen" );
		return;
	}
	
	GUI.RemoveOverlaysAfter( "icSpaceFlightScreenOverlay" );
}

ScoreScreenQuitButton()
{
	ScoreScreenBackButton();
}

local_function_2( hwindow window_, string param_1_ )
{
	string name = iFaction.Name( iSim.Faction( iShip.FindPlayerShip() ) );
	
	if ( param_1_ == name )
	{
		GUI.SetWindowStateColours( window_, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0 );
		return;
	}
	
	GUI.SetWindowStateColours( window_, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0 );
}

local_function_16()
{
	int local_0;
	int local_1;
	int local_2;
	int local_3;
	int local_4;
	int local_5;
	int clientEndGameInfoCount;
	string local_7;
	int local_8;
	int local_9;
	int local_10;
	string local_11;
	string local_12;
	int local_13;
	int local_14;
	int local_15;
	hisim local_16;
	list localList_0;
	string local_18 = Global.String( "type_font" );
	list localList_1;
	list localList_2;
	string local_21;
	list localList_3;
	list localList_4;
	list localList_5;
	hwindow window_0;
	hwindow window_1;
	int local_27;
	hwindow window_2;
	hwindow window_3;
	int constant_0 = 200;
	int constant_1 = 100;
	int constant_2 = 60;
	int constant_3 = 60;
	int constant_4 = 60;
	int local_35 = 10;
	int constant_5 = 5;
	string local_37;
	int ii;
	hwindow gUI;
	string name;
	string local_41;
	
	GUI.StopAllMovies();
	
	if ( iMultiplay.IsGameEnded() )
	{
		iDirector.Begin();
		iDirector.SetFocus( iShip.FindPlayerShip() );
		iDirector.SetCamera( CAM_DistantDrop );
	}
	
	iGUI.SetGUIGlobals();
	GUI.SetDefaultFont( Global.String( "GUI_title_font" ) );
	GUI.SetDefaultColour( 1.0, 1.0, 1.0 );
	local_37 = Global.String( "WinningTeamName" );
	
	if ( iMultiplay.IsGameEnded() )
	{
		if ( local_37 == Text.Field( "mp_flag_team_a", FT_Text ) )
		{
			name = Text.Field( "mp_flag_team_a_wins", FT_Text );
		}
		else if ( local_37 == Text.Field( "mp_flag_team_b", FT_Text ) )
		{
			name = Text.Field( "mp_flag_team_b_wins", FT_Text );
		}
		else
		{
			name = Text.Field( "mp_flag_team_draw", FT_Text );
		}
	}
	else
	{
		name = iFaction.Name( iSim.Faction( iShip.FindPlayerShip() ) );
		
		if ( name == Text.Field( "mp_flag_team_a", FT_Text ) )
		{
			local_41 = "<HTML><BODY><P><IMG src=\"images/sfx/alpha_small.lbm\" width=128 height=128 align=top></P></BODY></HTML>";
		}
		else
		{
			local_41 = "<HTML><BODY><P><IMG src=\"images/sfx/beta_small.lbm\" width=128 height=128 align=top></P></BODY></HTML>";
		}
	}
	
	clientEndGameInfoCount = iMultiplay.ClientEndGameInfoCount();
	
	if ( iMultiplay.IsGameEnded() )
	{
		localList_5 = iGUI.CreateGreyBoxStyleScreen( name, "iTeamDeathMatch.ScoreScreenBackButton", "iTeamDeathMatch.ScoreScreenQuitButton" );
	}
	else
	{
		localList_5 = iGUI.CreateHTMLGreyBoxStyleScreen( local_41, 128, 128, "iTeamDeathMatch.ScoreScreenBackButton", "iTeamDeathMatch.ScoreScreenQuitButton" );
	}
	
	gUI = GUI.Cast( List.Head( localList_5 ) );
	localList_0 = iMultiplay.ClientPlayerList();
	
	for ( ii = 0; ii < clientEndGameInfoCount; ++ii )
	{
		local_11 = Text.Field( iMultiplay.ClientEndGameInfoName( ii ), FT_Text );
		local_12 = iMultiplay.ClientEndGameInfoTeam( ii );
		local_13 = iMultiplay.ClientEndGameInfoFrags( ii );
		local_15 = iMultiplay.ClientEndGameInfoDied( ii );
		local_16 = iSim.Cast( List.GetNth( localList_0, ii ) );
		window_0 = local_function_1( 0, constant_0, 20, gUI, local_18, local_11 );
		local_function_2( window_0, local_12 );
		window_1 = local_function_1( 0, constant_1, 20, gUI, local_18, local_12 );
		local_function_2( window_1, local_12 );
		window_2 = local_function_1( 0, constant_3, 20, gUI, local_18, String.FromInt( local_13 ) );
		local_function_2( window_2, local_12 );
		window_3 = local_function_1( 0, constant_4, 20, gUI, local_18, String.FromInt( local_15 ) );
		local_function_2( window_3, local_12 );
		List.AddTail( localList_1, window_0 );
		List.AddTail( localList_3, window_2 );
		List.AddTail( localList_2, window_1 );
		List.AddTail( localList_4, window_3 );
	}
	
	iGUI.CreateWindowListInSplitter( gUI, localList_1, local_35, 70, Text.Field( "mp_game_player", FT_Text ) );
	local_35 = ( local_35 + (constant_0 + (10 + constant_5)) );
	iGUI.CreateWindowListInSplitter( gUI, localList_2, local_35, 70, Text.Field( "mp_game_team", FT_Text ) );
	local_35 = ( local_35 + (constant_1 + (10 + constant_5)) );
	iGUI.CreateWindowListInSplitter( gUI, localList_3, local_35, 70, Text.Field( "mp_game_frags", FT_Text ) );
	local_35 = ( local_35 + (constant_3 + (10 + constant_5)) );
	iGUI.CreateWindowListInSplitter( gUI, localList_4, local_35, 70, Text.Field( "mp_game_died", FT_Text ) );
	
	if ( iMultiplay.IsGameEnded() )
	{
		GUI.SetControlFocusCancelFunction( "iTeamDeathMatch.ScoreScreenBackButton" );
	}
}

task local_function_0()
{
	int itemCount;
	int ii;
	hship ship;
	hfaction faction;
	string local_4;
	string local_5;
	int local_6;
	int local_7;
	int local_8;
	hwindow window_0;
	list localList_0;
	int local_11;
	int local_12 = GUI.FrameHeight();
	int local_13;
	hwindow window_1;
	list localList_1;
	hwindow window_2;
	
	local_11 = ( GUI.FrameWidth() - 220 );
	window_2 = iGUI.CreateWideShadyBar();
	window_1 = GUI.CreateListBox( 0, 100, 200, 150, window_2, false, false );
	
	while ( Global.Int( "GameState" ) != 2 )
	{
		schedule
		{
			every 1.0:
			{
				if ( Global.Int( "GameState" ) != 2 )
				{
					List.RemoveAll( localList_0 );
					GUI.RemoveListBoxEntries( window_1 );
					localList_1 = iMultiplay.ClientPlayerList();
					itemCount = List.ItemCount( localList_1 );
					
					for ( ii = 0; ii < itemCount; ++ii )
					{
						ship = iShip.Cast( List.GetNth( localList_1, ii ) );
						window_0 = GUI.CreateStaticWindow( 10, 10, 190, 32, none );
						GUI.SetWindowTitle( window_0, Object.StringProperty( ship, "name" ) );
						faction = iSim.Faction( ship );
						
						if ( iFaction.Name( faction ) == Text.Field( "mp_flag_team_a", FT_Text ) )
						{
							GUI.SetWindowStateColours( window_0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0 );
						}
						else if ( iFaction.Name( faction ) == Text.Field( "mp_flag_team_b", FT_Text ) )
						{
							GUI.SetWindowStateColours( window_0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0 );
						}
						else
						{
							GUI.SetWindowStateColours( window_0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 );
							List.AddHead( localList_0, ship );
						}
						
						GUI.AddListBoxEntry( window_1, window_0 );
					}
					
					if ( List.IsEmpty( localList_0 ) )
					{
						Global.SetInt( "GameState", 2 );
						GUI.PopScreen();
					}
				}
			}
		}
	}
	
	GUI.DeleteWindow( window_1 );
	GUI.DeleteWindow( window_2 );
}

ServerOnUserMessage( hsim param_0_, int param_1_, string param_2_ )
{
	string local_0;
	hfaction faction_0;
	hship ship;
	hgroup mpRespawnGroup = Group.Cast( Global.Handle( "mp_respawn_group" ) );
	hisim local_4;
	hgroup gBotsBHandle;
	hgroup gBotsAHandle;
	hfaction faction_1;
	int botIndex;
	
	switch ( param_1_ )
	{
		case 1:
			faction_0 = iFaction.Find( param_2_ );
			iSim.SetFaction( iSim.Cast( param_0_ ), faction_0 );
			iMultiplay.ServerSetPlayerTeam( param_0_, param_2_ );
			iMPUtils.SpawnPlayer( param_0_, mpRespawnGroup );
			
			if ( param_2_ == Text.Field( "mp_flag_team_b", FT_Text ) )
			{
				local_0 = "mp_flag_joined_team_b";
			}
			else
			{
				local_0 = "mp_flag_joined_team_a";
			}
			
			iMultiplay.ServerSendUserMessage( param_0_, 1, param_2_ );
			iMultiplay.ServerBroadcastMessage( param_0_, local_0, BMT_Event );
			
			if ( iMultiplay.UseAIBots() && (iMultiplay.AIBotsCount() > 0) )
			{
				if ( param_2_ == Text.Field( "mp_flag_team_a", FT_Text ) )
				{
					gBotsAHandle = Group.Cast( Global.Handle( "g_bots_a_handle" ) );
					gBotsBHandle = Group.Cast( Global.Handle( "g_bots_b_handle" ) );
					faction_1 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
				}
				else
				{
					gBotsAHandle = Group.Cast( Global.Handle( "g_bots_b_handle" ) );
					gBotsBHandle = Group.Cast( Global.Handle( "g_bots_a_handle" ) );
					faction_1 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
				}
				
				local_4 = iSim.Cast( Group.NthSim( gBotsAHandle, 0 ) );
				Group.RemoveSim( gBotsAHandle, local_4 );
				Group.AddSim( gBotsBHandle, local_4 );
				iSim.SetFaction( local_4, faction_1 );
				botIndex = Object.IntProperty( local_4, "bot_index" );
				botIndex = ( botIndex + (iMultiplay.AIBotsCount() / 2) );
				Object.SetIntProperty( local_4, "bot_index", botIndex );
				iMPUtils.SpawnPlayer( local_4, Group.Cast( Global.Handle( "mp_respawn_group" ) ) );
				iMultiplay.ServerSendUserMessage( local_4, 1, iFaction.Name( iSim.Faction( local_4 ) ) );
			}
			
			return;
		
		case 15:
			ship = iShip.Cast( param_0_ );
			iShip.UndockSelf( ship );
			iMultiplay.ServerSendUserMessage( ship, 15, "" );
			return;
		
		case 16:
			iMultiplay.SendScores( param_0_ );
			return;
		
		case 99:
			iMPUtils.ServerDoDebug( iSim.Cast( param_0_ ), param_2_ );
			return;
		
		default:
			return;
	}
}

ServerPlayerLeave( hsim param_0_ )
{
	string name = Object.StringProperty( param_0_, "name" );
	
	name = String.Join( name, "+ : +" );
	name = String.Join( name, "mp_frag_player_left" );
	iMultiplay.ServerBroadcastMessage( param_0_, name, BMT_Info );
	iMultiplay.ServerSetPlayerTeam( param_0_, "" );
}

ServerPlayerEnter( hsim param_0_ )
{
	hfaction faction;
	string local_1;
	string local_2;
	int currentTeamSelector;
	eSimType simType;
	int local_5;
	hgroup mpRespawnGroup = Group.Cast( Global.Handle( "mp_respawn_group" ) );
	hgroup gBotsAHandle;
	hisim local_8;
	bool local_9;
	
	if ( iMultiplay.ServerPlayerDiedCount( param_0_ ) == 0 )
	{
		local_9 = true;
	}
	else
	{
		local_9 = false;
	}
	
	simType = iSim.Type( iSim.Cast( param_0_ ) );
	Object.AddIntProperty( param_0_, "frag_count", 0 );
	Object.SetStringProperty( param_0_, "death_script", "iTeamDeathMatch.PlayerDeath" );
	Object.AddBoolProperty( param_0_, "player", true );
	
	if ( (simType == T_CargoPod) || (simType == T_None) )
	{
		return;
	}
	
	local_1 = iMultiplay.ServerPlayerTeam( param_0_ );
	
	if ( local_1 == "none" )
	{
		currentTeamSelector = Global.Int( "CurrentTeamSelector" );
		
		if ( currentTeamSelector == 0 )
		{
			local_1 = Text.Field( "mp_flag_team_a", FT_Text );
			Global.SetInt( "CurrentTeamSelector", 1 );
		}
		else
		{
			local_1 = Text.Field( "mp_flag_team_b", FT_Text );
			Global.SetInt( "CurrentTeamSelector", 0 );
		}
		
		faction = iFaction.Find( local_1 );
		iSim.SetFaction( iSim.Cast( param_0_ ), faction );
		iMultiplay.ServerSetPlayerTeam( param_0_, local_1 );
		iMultiplay.ServerSendUserMessage( param_0_, 1, local_1 );
		
		if ( local_1 == Text.Field( "mp_flag_team_b", FT_Text ) )
		{
			local_2 = "mp_flag_joined_team_b";
		}
		else
		{
			local_2 = "mp_flag_joined_team_a";
		}
		
		iMultiplay.ServerBroadcastMessage( param_0_, local_2, BMT_Event );
	}
	else
	{
		faction = iFaction.Find( local_1 );
		iSim.SetFaction( iSim.Cast( param_0_ ), faction );
		iMultiplay.ServerSendUserMessage( param_0_, 1, local_1 );
	}
	
	iMPUtils.SpawnPlayer( param_0_, mpRespawnGroup );
	iMultiplay.SetShipLimits( iShip.Cast( param_0_ ) );
	iMultiplay.LinkShipWeapons( iShip.Cast( param_0_ ) );
	
	if ( local_9 && (iMultiplay.UseAIBots() && (iMultiplay.AIBotsCount() > 0)) )
	{
		if ( local_1 == Text.Field( "mp_flag_team_a", FT_Text ) )
		{
			gBotsAHandle = Group.Cast( Global.Handle( "g_bots_a_handle" ) );
		}
		else
		{
			gBotsAHandle = Group.Cast( Global.Handle( "g_bots_b_handle" ) );
		}
		
		local_8 = iSim.Cast( Group.NthSim( gBotsAHandle, 0 ) );
		Group.RemoveSim( gBotsAHandle, local_8 );
		Sim.Destroy( local_8 );
	}
}

task local_function_6( hsim param_0_, string param_1_ )
{
	Task.Sleep( Task.Current(), 2.0 );
	iMultiplay.ServerBroadcastMessage( param_0_, param_1_, BMT_Event );
}

PlayerDeath( hsim param_0_ )
{
	string local_0;
	int random;
	string local_2;
	string local_3;
	string name = Object.StringProperty( param_0_, "name" );
	hship ship = iShip.Cast( iShip.LastAttacker( iShip.Cast( param_0_ ) ) );
	htask local_6;
	hisim local_7;
	hfaction faction_0;
	hfaction faction_1;
	hisim local_10 = iSim.Cast( param_0_ );
	hfaction faction_2 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	hfaction faction_3 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	
	faction_0 = iSim.Faction( local_10 );
	local_7 = iSim.LastAttacker( local_10 );
	
	if ( local_7 )
	{
		faction_1 = iSim.Faction( local_7 );
		
		if ( (faction_0 == faction_2) && (faction_1 == faction_3) )
		{
			Global.SetInt( "BTeamFrags", Global.Int( "BTeamFrags" ) + 1 );
			local_function_3( ship );
		}
		
		if ( (faction_0 == faction_3) && (faction_1 == faction_2) )
		{
			Global.SetInt( "ATeamFrags", Global.Int( "ATeamFrags" ) + 1 );
			local_function_3( ship );
		}
		
		if ( (faction_0 == faction_2) && (faction_1 == faction_2) )
		{
			Global.SetInt( "ATeamFrags", Global.Int( "ATeamFrags" ) - 1 );
			local_function_4( ship );
		}
		
		if ( (faction_0 == faction_3) && (faction_1 == faction_3) )
		{
			Global.SetInt( "BTeamFrags", Global.Int( "BTeamFrags" ) - 1 );
			local_function_4( ship );
		}
	}
	
	iMPUtils.SpawnKilledPlayerPowerUps( param_0_ );
	local_function_5( iShip.Cast( param_0_ ) );
	
	if ( (ship == false) || (ship == iShip.Cast( param_0_ )) )
	{
		random = Math.RandomInt( 1, 2 );
		local_0 = "mp_suicide_";
		local_0 = String.Join( local_0, String.FromInt( random ) );
		local_6 = start local_function_6( param_0_, local_0 );
		Task.Detach( local_6 );
	}
	else
	{
		local_2 = iMPUtils.MakeDeathMessage( ship, param_0_ );
		local_6 = start local_function_6( param_0_, local_2 );
		Task.Detach( local_6 );
	}
	
	Sim.Destroy( param_0_ );
}

task local_function_9( hsim param_0_, float param_1_, float param_2_ )
{
	hisim local_0;
	int ii;
	string local_2;
	int itemCount;
	int local_4;
	list localList;
	hisim local_6 = iSim.Cast( Sim.FindByName( Text.Field( "mp_flag_a_flag_gate_name", FT_Text ) ) );
	hisim local_7 = iSim.Cast( Sim.FindByName( Text.Field( "mp_flag_b_flag_gate_name", FT_Text ) ) );
	hfaction faction_0 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	hfaction faction_1 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	
	schedule
	{
		every 2.0:
		{
			localList = iMultiplay.ServerPlayerList();
			itemCount = List.ItemCount( localList );
			
			for ( ii = 0; ii < itemCount; ++ii )
			{
				local_0 = iSim.Cast( List.GetNth( localList, ii ) );
				
				if ( local_0 != false )
				{
					if ( Sim.DistanceBetween( param_0_, local_0 ) > param_2_ )
					{
						if ( !Object.PropertyExists( local_0, "mp_respawning" ) )
						{
							iMultiplay.ServerSendPlayerMessage( ii, "mp_flag_player_transported", BMT_Event );
							iMPUtils.SpawnPlayer( local_0, Group.Cast( Global.Handle( "mp_respawn_group" ) ) );
							Object.AddBoolProperty( local_0, "mp_respawning", true );
						}
					}
					else
					{
						Object.RemoveProperty( local_0, "mp_respawning" );
					}
				}
			}
		}
	}
}

task local_function_8()
{
	int local_0;
	bool local_1;
	int local_2;
	int local_3;
	hsim carlosFandangoResearchStation;
	hsim innerBeltUnderworldPirateBase;
	hmapentity mapEntity;
	int local_7;
	int local_8;
	int local_9;
	hisim local_10;
	hsim local_11;
	hsim local_12;
	hsim local_13;
	hsim local_14;
	string local_15;
	int itemCount;
	int local_17;
	int local_18;
	bool local_19 = false;
	string local_20;
	bool local_21;
	float constant_0 = 0.0;
	float constant_1 = 0.0;
	bool local_24 = true;
	bool local_25 = true;
	string local_26;
	string local_27;
	int local_28;
	float local_29 = 0.0;
	int local_30;
	bool local_31 = false;
	bool local_32 = false;
	bool local_33 = false;
	bool local_34 = false;
	bool local_35 = false;
	
	local_15 = Text.Field( "sn_police_21", FT_Text );
	local_1 = false;
	local_21 = false;
	mapEntity = iMapEntity.Cast( Set.FirstElement( iMapEntity.SystemBodies() ) );
	carlosFandangoResearchStation = Sim.FindByName( "Carlos Fandango Research Station" );
	innerBeltUnderworldPirateBase = Sim.FindByName( "Inner Belt Underworld Pirate Base" );
	local_12 = Sim.FindByName( Text.Field( "mp_station_name", FT_Text ) );
	local_13 = Sim.FindByName( Text.Field( "mp_flag_a_flag_gate_name", FT_Text ) );
	local_14 = Sim.FindByName( Text.Field( "mp_flag_b_flag_gate_name", FT_Text ) );
	
	schedule
	{
		every 1.0:
		{
			itemCount = List.ItemCount( iMultiplay.ServerPlayerList() );
			
			if ( itemCount > 0 )
			{
				if ( local_29 == 0.0 )
				{
					local_29 = ( iGame.SystemTime() * 0.0010 );
				}
				
				local_30 = iMultiplay.TimeLimit() - ((iGame.SystemTime() * 0.0010) - local_29);
				
				if ( (local_30 <= 120) && !local_31 )
				{
					local_31 = true;
					iMultiplay.ServerBroadcastMessage( none, "mp_time_limit_two_minutes", BMT_Event );
					iMultiplay.ServerBroadcastMessage( none, "sound:/audio/speech/mp_time_limit_two_minutes", BMT_Audio );
				}
				
				if ( (local_30 <= 60) && !local_32 )
				{
					local_32 = true;
					iMultiplay.ServerBroadcastMessage( none, "mp_time_limit_one_minute", BMT_Event );
					iMultiplay.ServerBroadcastMessage( none, "sound:/audio/speech/mp_time_limit_one_minute", BMT_Audio );
				}
				
				if ( (iGame.SystemTime() * 0.0010) > (local_29 + iMultiplay.TimeLimit()) )
				{
					if ( Global.Int( "ATeamFrags" ) < Global.Int( "BTeamFrags" ) )
					{
						iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_b", FT_Text ) );
					}
					else if ( Global.Int( "ATeamFrags" ) > Global.Int( "BTeamFrags" ) )
					{
						iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_a", FT_Text ) );
					}
					else
					{
						iMultiplay.ServerSetWinningTeam( "" );
					}
					
					iMultiplay.EndGame();
					break;
				}
			}
			
			if ( Global.Int( "ATeamFrags" ) >= iMultiplay.FragLimit() )
			{
				iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_a", FT_Text ) );
				iMultiplay.EndGame();
				break;
			}
			
			if ( Global.Int( "BTeamFrags" ) >= iMultiplay.FragLimit() )
			{
				iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_b", FT_Text ) );
				iMultiplay.EndGame();
				break;
			}
			
			if ( Global.Int( "BTeamFrags" ) >= (iMultiplay.FragLimit() - 3) )
			{
				if ( !local_35 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_3", BMT_Event );
					iMultiplay.ServerBroadcastMessage( none, "sound:/audio/speech/mp_frag_limit_3", BMT_Audio );
					local_35 = true;
				}
				
				if ( (Global.Int( "BTeamFrags" ) >= (iMultiplay.FragLimit() - 2)) && !local_34 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_2", BMT_Event );
					iMultiplay.ServerBroadcastMessage( none, "sound:/audio/speech/mp_frag_limit_2", BMT_Audio );
					local_34 = true;
				}
				
				if ( (Global.Int( "BTeamFrags" ) >= (iMultiplay.FragLimit() - 1)) && !local_33 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_1", BMT_Event );
					iMultiplay.ServerBroadcastMessage( none, "sound:/audio/speech/mp_frag_limit_1", BMT_Audio );
					local_33 = true;
				}
			}
			
			if ( Global.Int( "ATeamFrags" ) >= (iMultiplay.FragLimit() - 3) )
			{
				if ( !local_35 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_3", BMT_Event );
					local_35 = true;
				}
				
				if ( (Global.Int( "ATeamFrags" ) >= (iMultiplay.FragLimit() - 2)) && !local_34 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_2", BMT_Event );
					local_34 = true;
				}
				
				if ( (Global.Int( "ATeamFrags" ) >= (iMultiplay.FragLimit() - 1)) && !local_33 )
				{
					iMultiplay.ServerBroadcastMessage( none, "mp_frag_limit_1", BMT_Event );
					local_33 = true;
				}
			}
		}
		
		every 50.0:
		{
			atomic
			{
				if ( Math.RandomInt( 1, 2 ) == 1 )
				{
					local_11 = innerBeltUnderworldPirateBase;
				}
				else
				{
					local_11 = carlosFandangoResearchStation;
				}
				
				if ( local_11 )
				{
					switch ( Math.RandomInt( 1, 4 ) )
					{
						case 1:
							local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/speed_power_up_x2", "" ) );
							break;
						
						case 2:
							local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/speed_power_down_x2", "" ) );
							break;
						
						case 3:
							local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/health", "" ) );
							break;
						
						case 4:
							local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/bomb_power_up", "" ) );
							break;
					}
					
					if ( local_10 != false )
					{
						iSim.SetFaction( local_10, iFaction.Find( "PowerUp" ) );
						Sim.PlaceNear( local_10, local_11, 2000.0 + (Math.Random( 2.0, 5.0 ) * 20.0) );
						Sim.SetAngularVelocityEuler( local_10, 30.0, 30.0, 30.0 );
						iMultiplay.SetTransmitFlag( local_10, true );
					}
					
					local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/health", "" ) );
					iSim.SetFaction( local_10, iFaction.Find( "PowerUp" ) );
					Sim.PlaceNear( local_10, local_13, 2000.0 );
					Sim.SetAngularVelocityEuler( local_10, 30.0, 30.0, 30.0 );
					iMultiplay.SetTransmitFlag( local_10, true );
					local_10 = iSim.Cast( Sim.Create( "ini:/sims/power_ups/health", "" ) );
					iSim.SetFaction( local_10, iFaction.Find( "PowerUp" ) );
					Sim.PlaceNear( local_10, local_14, 2000.0 );
					Sim.SetAngularVelocityEuler( local_10, 30.0, 30.0, 30.0 );
					iMultiplay.SetTransmitFlag( local_10, true );
				}
			}
		}
	}
}

ServerOnUpdateScores()
{
	list localList;
	int ii;
	hisim local_2;
	int fragCount;
	int botDeaths;
	string local_5;
	int local_6;
	hgroup gBotsAHandle = Group.Cast( Global.Handle( "g_bots_a_handle" ) );
	
	for ( ii = 0; ii < Group.SimCount( gBotsAHandle ); ++ii )
	{
		List.AddTail( localList, Group.NthSim( gBotsAHandle, ii ) );
	}
	
	gBotsAHandle = Group.Cast( Global.Handle( "g_bots_b_handle" ) );
	
	for ( ii = 0; ii < Group.SimCount( gBotsAHandle ); ++ii )
	{
		List.AddTail( localList, Group.NthSim( gBotsAHandle, ii ) );
	}
	
	for ( ii = 0; ii < List.ItemCount( localList ); ++ii )
	{
		local_2 = iSim.Cast( List.GetNth( localList, ii ) );
		
		if ( local_2 )
		{
			fragCount = Object.IntProperty( local_2, "frag_count" );
			botDeaths = Object.IntProperty( local_2, "bot_deaths" );
			iMultiplay.AddBotEndGameInfo( Object.StringProperty( local_2, "name" ), iFaction.Name( iSim.Faction( local_2 ) ), fragCount, 0, botDeaths );
		}
	}
	
	if ( Global.Int( "ATeamFrags" ) < Global.Int( "BTeamFrags" ) )
	{
		iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_b", FT_Text ) );
		return;
	}
	
	if ( Global.Int( "ATeamFrags" ) > Global.Int( "BTeamFrags" ) )
	{
		iMultiplay.ServerSetWinningTeam( Text.Field( "mp_flag_team_a", FT_Text ) );
		return;
	}
	
	iMultiplay.ServerSetWinningTeam( "" );
}

ServerOnEndGame()
{
	ServerOnUpdateScores();
}

ServerExit()
{
	Text.Remove( "csv:/text/multiplayer/ideathmatch_addendum" );
	Text.Remove( "csv:/text/multiplayer/icapturetheflag" );
	Text.Remove( "csv:/text/multiplayer/iDeathMatch" );
	Text.Remove( "csv:/text/ship_names" );
	Text.Remove( "csv:/text/geog/carls_world" );
	Global.Destroy( "ATeamFrags" );
	Global.Destroy( "BTeamFrags" );
	Global.Destroy( "CurrentTeamSelector" );
	
	if ( Global.Exists( "g_arena_centre" ) )
	{
		Global.Destroy( "g_arena_centre" );
		Global.Destroy( "g_arena_radius" );
		Global.Destroy( "g_bots_a_handle" );
		Global.Destroy( "g_bots_b_handle" );
	}
}

ServerMain()
{
	int local_0;
	int local_1;
	int local_2;
	int local_3;
	int local_4;
	int local_5;
	int local_6;
	int local_7;
	int local_8;
	int local_9;
	string local_10;
	string local_11;
	int local_12;
	int local_13;
	hsim local_14;
	int local_15;
	int local_16;
	int local_17;
	int local_18;
	int local_19;
	int local_20;
	int local_21;
	int local_22;
	string local_23;
	string local_24;
	int local_25;
	int local_26;
	int local_27;
	int local_28;
	int local_29;
	htask local_30;
	htask local_31;
	hfaction player;
	hfaction powerUp;
	hfaction faction_0;
	hfaction faction_1;
	int ii;
	int local_37;
	int local_38;
	hgroup group_0;
	hgroup group_1;
	int local_41;
	hinifile inifile;
	hgroup group_2;
	hgroup group_3;
	int jj;
	hisim local_46;
	hgroup group_4;
	
	iMultiplay.SetGameType( "TDM" );
	iMultiplay.ServerSetSortMode( SSM_Frags );
	Global.CreateInt( "ATeamFrags", 2, 0 );
	Global.CreateInt( "BTeamFrags", 2, 0 );
	Global.CreateInt( "CurrentTeamSelector", 2, 0 );
	
	if ( Global.Exists( "g_arena_centre" ) )
	{
		Global.Destroy( "g_arena_centre" );
		Global.Destroy( "g_arena_radius" );
		Global.Destroy( "g_bots_a_handle" );
		Global.Destroy( "g_bots_a_handle" );
	}
	
	Text.Add( "csv:/text/multiplayer/icapturetheflag" );
	Text.Add( "csv:/text/multiplayer/iDeathMatch" );
	Text.Add( "csv:/text/ship_names" );
	Text.Add( "csv:/text/geog/carls_world" );
	iMultiplay.ServerResetTeams();
	iFactionScript.Initialise();
	
	if ( !iFaction.Find( "Player" ) )
	{
		player = iFaction.Create( "Player", "XXX", A_Player );
	}
	
	if ( !iFaction.Find( "PowerUp" ) )
	{
		powerUp = iFaction.Create( "PowerUp", Text.Field( "hud_type_power_up", FT_Text ), A_Angels );
	}
	
	if ( !iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
	{
		faction_0 = iFaction.Create( Text.Field( "mp_flag_team_a", FT_Text ), Text.Field( "mp_flag_team_a", FT_Text ), A_Underworld );
		faction_1 = iFaction.Create( Text.Field( "mp_flag_team_b", FT_Text ), Text.Field( "mp_flag_team_b", FT_Text ), A_Military );
	}
	
	player = iFaction.Find( "Player" );
	powerUp = iFaction.Find( "PowerUp" );
	iFaction.SetFeeling( player, powerUp, 1.0 );
	faction_0 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	faction_1 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	iFaction.SetFeeling( faction_0, faction_1, -1.0 );
	iFaction.SetFeeling( faction_0, faction_0, 1.0 );
	iFaction.SetFeeling( faction_1, faction_0, -1.0 );
	iFaction.SetFeeling( faction_1, faction_1, 1.0 );
	iFaction.SetFeeling( faction_0, powerUp, 1.0 );
	iFaction.SetFeeling( faction_1, powerUp, 1.0 );
	local_14 = iMPUtils.FindSystemCentre();
	inifile = INIFile.Create( "ini:/multiplayer/maps/generic" );
	group_2 = iMap.GetGeography( inifile, local_14 );
	group_3 = iMap.GetSpawnPoints( inifile, local_14 );
	INIFile.Destroy( inifile );
	Global.CreateHandle( "mp_respawn_group", 2, group_3 );
	
	for ( jj = 0; jj < 2; ++jj )
	{
		group_4 = Group.NthGroup( group_2, jj );
		
		for ( ii = 0; ii < Group.SimCount( group_4 ); ++ii )
		{
			local_46 = iSim.Cast( Group.NthSim( group_4, ii ) );
			
			if ( iSim.Type( local_46 ) == T_Gunstar )
			{
				iMultiplay.InstallAIPilot( iShip.Cast( local_46 ) );
				iAI.GiveGenericAttackOrder( local_46 );
				iMultiplay.SetTransmitFlag( local_46, true );
			}
		}
	}
	
	Global.CreateHandle( "g_arena_centre", 1, local_14 );
	Global.CreateHandle( "g_b_start", 1, Group.NthSim( Group.NthGroup( group_2, 1 ), 0 ) );
	Global.CreateHandle( "g_a_start", 1, Group.NthSim( Group.NthGroup( group_2, 0 ), 0 ) );
	
	if ( iMultiplay.AIBotsCount() > 1 )
	{
		local_41 = ( iMultiplay.AIBotsCount() / 2 );
		group_0 = Group.Cast( iBotPak.CreateBotShips( "ini:/multiplayer/packages/tdm", local_41, iMultiplay.AIBotsSkillLevel(), iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ), none, "BotNamesA" ) );
		Global.CreateHandle( "g_bots_a_handle", 2, group_0 );
		group_1 = Group.Cast( iBotPak.CreateBotShips( "ini:/multiplayer/packages/tdm", local_41, iMultiplay.AIBotsSkillLevel(), iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) ), none, "BotNamesB" ) );
		Global.CreateHandle( "g_bots_b_handle", 2, group_1 );
		Global.CreateString( "g_ini_name", 1, "ini:/multiplayer/packages/tdm" );
		local_function_7( group_0, none );
		local_function_7( group_1, none );
		iBotPak.AssignGameType( group_0, GT_DeathMatch );
		iBotPak.AssignGameType( group_1, GT_DeathMatch );
	}
	
	local_31 = start local_function_8();
	Task.Detach( local_31 );
	local_30 = start local_function_9( local_14, 55000.0, 60000.0 );
	Global.CreateFloat( "g_arena_radius", 1, 60000.0 );
	Task.Detach( local_30 );
	start iMPUtils.WeaponPowerUpGeneratorTask( Group.NthGroup( group_3, 2 ) );
}

task local_function_13( hsim param_0_, string param_1_ )
{
	iMultiplay.ClientSay( param_0_, param_1_ );
}

task local_function_17( hsim param_0_, float param_1_, float param_2_ )
{
	hsim playerShip;
	bool local_1 = false;
	
	schedule
	{
		every 2.0:
		{
			playerShip = Sim.Cast( iShip.FindPlayerShip() );
			
			if ( playerShip != false )
			{
				if ( Sim.DistanceBetween( param_0_, playerShip ) > param_1_ )
				{
					if ( !local_1 )
					{
						local_1 = true;
						iGame.CreateFog( 0.010 );
						iHUD.PlayAudioCue( AC_Klaxon );
						iMultiplay.ClientSay( playerShip, "mp_flag_player_falling" );
					}
					
					iHUD.Print( "mp_flag_player_falling" );
				}
				
				if ( Sim.DistanceBetween( param_0_, playerShip ) <= param_1_ )
				{
					if ( local_1 )
					{
						local_1 = false;
						iGame.DestroyFog( 0.010 );
					}
				}
			}
		}
	}
}

local_function_10()
{
	hship ship;
	int local_1;
	string local_2;
	string name;
	hship playerShip;
	hfaction faction;
	hgroup mpRespawnGroup = Group.Cast( Global.Handle( "mp_respawn_group" ) );
	
	atomic
	{
		playerShip = iShip.FindPlayerShip();
		
		if ( playerShip != false )
		{
			faction = iSim.Faction( playerShip );
		}
		else
		{
			faction = iFaction.Find( "" );
		}
		
		local_2 = iMultiplay.ClientOptionsShip();
		name = iMultiplay.ClientOptionsName();
		ship = iShip.Create( local_2, name );
		iShip.InstallPlayerPilot( ship );
		iMPUtils.SpawnPlayer( ship, mpRespawnGroup );
		iMultiplay.SetPlayerShip( ship, name, playerShip );
		iMultiplay.SetShipLimits( ship );
		iMultiplay.LinkShipWeapons( ship );
		iDirector.SetFocus( ship );
		iDirector.End();
		Input.ResumeBindings();
		Sim.Destroy( playerShip );
		
		if ( (faction == iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) )) || (faction == iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) )) )
		{
			iSim.SetFaction( ship, faction );
		}
		else
		{
			iSim.SetFaction( ship, iFaction.Find( "Player" ) );
		}
	}
	
	iMultiplay.ClientAddRespawnEffect( ship );
}

task local_function_15( float param_0_ )
{
	Task.Sleep( Task.Current(), param_0_ );
	local_function_10();
}

task local_function_12( hship ship_ )
{
	hgroup mpRespawnGroup = Group.Cast( Global.Handle( "mp_respawn_group" ) );
	float constant = 6.0;
	
	Task.Sleep( Task.Current(), constant );
	iBotPak.AssignGameType( ship_, GT_DeathMatch );
	iMPUtils.SpawnPlayer( ship_, mpRespawnGroup );
}

local_function_7( hgroup group_, hship ship_0_ )
{
	hgroup gBotsAHandle;
	hship ship_1;
	int simCount;
	int ii;
	hmapentity mapEntity;
	
	if ( ship_0_ != false )
	{
		if ( iSim.Faction( ship_0_ ) == iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
		{
			ship_1 = iShip.Cast( iBotPak.CreateBotShips( Global.String( "g_ini_name" ), 1, 0.0, none, ship_0_, "BotNamesA" ) );
		}
		else
		{
			ship_1 = iShip.Cast( iBotPak.CreateBotShips( Global.String( "g_ini_name" ), 1, 0.0, none, ship_0_, "BotNamesB" ) );
		}
		
		if ( iSim.Faction( ship_0_ ) == iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
		{
			mapEntity = iMapEntity.Cast( Global.Handle( "g_a_start" ) );
			gBotsAHandle = Group.Cast( Global.Handle( "g_bots_a_handle" ) );
			Group.AddSim( gBotsAHandle, ship_1 );
			Global.SetHandle( "g_bots_a_handle", gBotsAHandle );
		}
		else
		{
			mapEntity = iMapEntity.Cast( Global.Handle( "g_b_start" ) );
			gBotsAHandle = Group.Cast( Global.Handle( "g_bots_b_handle" ) );
			Group.AddSim( gBotsAHandle, ship_1 );
			Global.SetHandle( "g_bots_b_handle", gBotsAHandle );
		}
		
		local_function_11( ship_0_, ship_1 );
		iMultiplay.SetShipLimits( ship_1 );
		Task.Detach( start local_function_12( ship_1 ) );
		return;
	}
	
	gBotsAHandle = Group.Cast( group_ );
	
	if ( gBotsAHandle != false )
	{
		if ( iSim.Faction( iSim.Cast( Group.Leader( gBotsAHandle ) ) ) == iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
		{
			mapEntity = iMapEntity.Cast( Global.Handle( "g_a_start" ) );
		}
		else
		{
			mapEntity = iMapEntity.Cast( Global.Handle( "g_b_start" ) );
		}
		
		simCount = Group.SimCount( gBotsAHandle );
		
		for ( ii = 0; ii < simCount; ++ii )
		{
			ship_1 = iShip.Cast( Group.NthSim( gBotsAHandle, ii ) );
			Object.SetStringProperty( ship_1, "death_script", "iTeamDeathMatch.BotDeath" );
			iMultiplay.SetShipLimits( ship_1 );
			Task.Detach( start local_function_12( ship_1 ) );
		}
		
		return;
	}
	
	if ( iSim.Faction( iSim.Cast( group_ ) ) == iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
	{
		mapEntity = iMapEntity.Cast( Global.Handle( "g_a_start" ) );
	}
	else
	{
		mapEntity = iMapEntity.Cast( Global.Handle( "g_b_start" ) );
	}
	
	Object.SetStringProperty( group_, "death_script", "iTeamDeathMatch.BotDeath" );
	iMultiplay.SetShipLimits( ship_1 );
	Task.Detach( start local_function_12( iShip.Cast( group_ ) ) );
}

task BotDeath( hsim param_0_ )
{
	hship ship = iShip.Cast( iShip.LastAttacker( iShip.Cast( param_0_ ) ) );
	hfaction faction_0 = iSim.Faction( iSim.Cast( param_0_ ) );
	hfaction faction_1 = iSim.Faction( ship );
	hfaction faction_2 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	hfaction faction_3 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	int local_5;
	int random = Math.RandomInt( 1, 4 );
	string local_7;
	string local_8;
	string name = Object.StringProperty( param_0_, "name" );
	htask local_10;
	
	local_7 = iMPUtils.MakeDeathMessage( ship, param_0_ );
	local_10 = start local_function_6( param_0_, local_7 );
	Task.Detach( local_10 );
	
	if ( (faction_0 == faction_2) && (faction_1 == faction_3) )
	{
		Global.SetInt( "BTeamFrags", Global.Int( "BTeamFrags" ) + 1 );
		local_function_3( ship );
	}
	
	if ( (faction_0 == faction_3) && (faction_1 == faction_2) )
	{
		Global.SetInt( "ATeamFrags", Global.Int( "ATeamFrags" ) + 1 );
		local_function_3( ship );
	}
	
	if ( (faction_0 == faction_2) && (faction_1 == faction_2) )
	{
		Global.SetInt( "ATeamFrags", Global.Int( "ATeamFrags" ) - 1 );
		local_function_4( ship );
	}
	
	if ( (faction_0 == faction_3) && (faction_1 == faction_3) )
	{
		Global.SetInt( "BTeamFrags", Global.Int( "BTeamFrags" ) - 1 );
		local_function_4( ship );
	}
	
	local_function_5( iShip.Cast( param_0_ ) );
	
	debug
	{
		if ( Object.PropertyExists( ship, "is_bot" ) )
		{
			atomic
			{
				Debug.PrintString( "iTeamDeathMatch.ServerPlayerKilled: Vessel made a kill: " );
				Debug.PrintString( Object.StringProperty( ship, "name" ) );
				Debug.PrintString( " and now has " );
				Debug.PrintString( String.FromInt( Object.IntProperty( ship, "frag_count" ) ) );
				Debug.PrintString( " frags\n" );
			}
		}
	}
	
	iMPUtils.SpawnKilledPlayerPowerUps( param_0_ );
	local_function_7( none, iShip.Cast( param_0_ ) );
	iSim.Kill( iSim.Cast( param_0_ ) );
}

ClientDoUndock()
{
	iMultiplay.ClientSendUserMessage( iShip.FindPlayerShip(), 15, "" );
	iShip.UndockSelf( iShip.FindPlayerShip() );
}

ClientDoScores()
{
	iMultiplay.ClientSendUserMessage( iShip.FindPlayerShip(), 16, "" );
}

ClientScores()
{
	if ( !( GUI.CurrentScreenClassname() == "icMultiplayScreenInGame" ) )
	{
		GUI.PopScreensTo( "icSpaceFlightScreen" );
		GUI.OverlayScreen( "icPDAOverlayManager" );
		GUI.OverlayScreen( "icMultiplayScreenInGame" );
	}
}

ClientOnUserMessage( hsim param_0_, int param_1_, string param_2_ )
{
	hfaction faction_0;
	hfaction faction_1 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	string local_2;
	int local_3;
	string local_4;
	htask local_5;
	hship ship;
	
	switch ( param_1_ )
	{
		case 1:
			faction_0 = iFaction.Find( param_2_ );
			iSim.SetFaction( iSim.Cast( param_0_ ), faction_0 );
			
			if ( param_2_ == Text.Field( "mp_flag_team_b", FT_Text ) )
			{
				local_2 = Text.Field( "mp_flag_joined_team_b", FT_Text );
				Object.AddBoolProperty( param_0_, "mp_on_team_beta", true );
				Object.RemoveProperty( param_0_, "mp_on_team_alpha" );
			}
			else
			{
				local_2 = Text.Field( "mp_flag_joined_team_a", FT_Text );
				Object.AddBoolProperty( param_0_, "mp_on_team_alpha", true );
				Object.RemoveProperty( param_0_, "mp_on_team_beta" );
			}
			
			local_5 = start local_function_13( param_0_, local_2 );
			Task.Detach( local_5 );
			return;
		
		case 15:
			if ( ship != iShip.FindPlayerShip() )
			{
				ship = iShip.Cast( param_0_ );
				iShip.UndockSelf( ship );
			}
			
			return;
	}
}

ClientDefaultTaunt1()
{
	string local_0 = iMultiplay.ClientOptionsDefaultTaunt( 0 );
	
	iMultiplay.ClientBroadcastMessage( iShip.FindPlayerShip(), local_0, BMT_Conversation );
}

ClientDefaultTaunt2()
{
	string local_0 = iMultiplay.ClientOptionsDefaultTaunt( 1 );
	
	iMultiplay.ClientBroadcastMessage( iShip.FindPlayerShip(), local_0, BMT_Conversation );
}

ClientDefaultTaunt3()
{
	string local_0 = iMultiplay.ClientOptionsDefaultTaunt( 2 );
	
	iMultiplay.ClientBroadcastMessage( iShip.FindPlayerShip(), local_0, BMT_Conversation );
}

ClientDefaultTaunt4()
{
	string local_0 = iMultiplay.ClientOptionsDefaultTaunt( 3 );
	
	iMultiplay.ClientBroadcastMessage( iShip.FindPlayerShip(), local_0, BMT_Conversation );
}

ClientPlayerSay()
{
	if ( !Global.Exists( "mp_team_say_flag" ) )
	{
		Global.CreateBool( "mp_team_say_flag", 2, false );
	}
	else
	{
		Global.SetBool( "mp_team_say_flag", false );
	}
	
	iMultiplay.ClientOpenHUDTauntBox( "" );
}

ClientPlayerTeamSay()
{
	if ( !Global.Exists( "mp_team_say_flag" ) )
	{
		Global.CreateBool( "mp_team_say_flag", 2, true );
	}
	else
	{
		Global.SetBool( "mp_team_say_flag", true );
	}
	
	iMultiplay.ClientOpenHUDTauntBox( "" );
}

ClientTauntReturn( string param_0_ )
{
	if ( String.Left( param_0_, 1 ) == "!" )
	{
	}
	else if ( Global.Bool( "mp_team_say_flag" ) == 1 )
	{
		iMultiplay.ClientBroadcastTeamMessage( iShip.FindPlayerShip(), param_0_, BMT_Conversation );
	}
	else
	{
		iMultiplay.ClientBroadcastMessage( iShip.FindPlayerShip(), param_0_, BMT_Conversation );
	}
	
	iMPUtils.ClientTauntReturn( param_0_ );
}

task local_function_14( hisim param_0_, hship ship_ )
{
	if ( param_0_ != false )
	{
		iConversation.Begin();
		iConversation.Say( param_0_, "", "mp_frag_player_stuffed_you" );
		iConversation.End();
	}
}

ClientPlayerKilled()
{
	hship playerShip = iShip.FindPlayerShip();
	hisim local_1 = iShip.LastAttacker( playerShip );
	htask local_2 = start local_function_14( local_1, playerShip );
	
	Task.Detach( local_2 );
	iDirector.Begin();
	iDirector.SetFocus( iShip.FindPlayerShip() );
	iDirector.SetSecondaryFocus( local_1 );
	iDirector.SetCamera( CAM_InverseTwoShot );
	local_2 = start local_function_15( 6.0 );
	Task.Detach( local_2 );
}

ClientOpponentKilled()
{
}

ClientEndGame( string param_0_, bool param_1_ )
{
	iMultiplay.NetworkReset();
	iMultiplay.ClientSetRequestedToCycle( param_1_ );
	Global.CreateString( "WinningTeamName", 2, param_0_ );
	Global.SetInt( "GameState", 4 );
	GUI.PopScreensTo( "icSpaceFlightScreen" );
	GUI.OverlayScreen( "icPDAOverlayManager" );
	GUI.OverlayScreen( "icMultiplayScreen" );
}

ClientGUI()
{
	int gameState = Global.Int( "GameState" );
	int local_1;
	
	switch ( gameState )
	{
		case 1:
			CaptureTheFlagScreen();
			return;
		
		case 2:
		case 4:
			local_function_16();
			return;
	}
}

ClientRespawn( hship ship_ )
{
	iMultiplay.ClientAddRespawnEffect( ship_ );
}

ClientPlayerEnter( hobject param_0_ )
{
	iMultiplay.SetShipLimits( iShip.Cast( param_0_ ) );
	iMultiplay.LinkShipWeapons( iShip.Cast( param_0_ ) );
	iMultiplay.ClientAddRespawnEffect( iShip.Cast( param_0_ ) );
}

ClientPlayerLeave()
{
}

task local_function_19()
{
	GUI.PushScreen( "icMultiplayScreen" );
}

ClientExit()
{
	Text.Remove( "csv:/text/subtargets" );
	Text.Remove( "csv:/text/multiplayer/ideathmatch_addendum" );
	Text.Remove( "csv:/text/geog/carls_world" );
	Text.Remove( "csv:/text/ship_names" );
	Text.Remove( "csv:/text/multiplayer/ideathmatch" );
	Text.Remove( "csv:/text/multiplayer/icapturetheflag" );
	iFactionScript.Initialise();
	Input.PurgeBindings();
}

ClientMain()
{
	int local_0;
	int local_1;
	int local_2;
	int local_3;
	int local_4;
	int local_5;
	hsim local_6;
	int local_7;
	int local_8;
	int local_9;
	int local_10;
	int local_11;
	string local_12;
	string local_13;
	string local_14;
	int local_15;
	htask local_16;
	htask local_17;
	hfaction player;
	hfaction powerUp;
	hfaction faction_0;
	hfaction faction_1;
	hgroup group_0;
	hgroup group_1;
	hinifile inifile;
	int ii;
	hisim local_26;
	hgroup group_2;
	int jj;
	int local_29;
	
	iMultiplay.ClientSetTeamGame( true );
	iMultiplay.ClientOptionsLoad();
	iHUD.SetMenuNodeEnabled( "hud_menu_eng", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_comms", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_score", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_doc", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_map", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_objectives", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_cmd", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_remote_link", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_cancel_link", false );
	iHUD.SetMenuNodeEnabled( "hud_menu_toggle_aim_assist", false );
	Input.BindKey( "iTeamDeathMatch.ClientPlayerSay", "ScriptKeys.MultiplayerSay" );
	Input.BindKey( "iTeamDeathMatch.ClientPlayerTeamSay", "ScriptKeys.MultiplayerTeamSay" );
	Input.BindKey( "iTeamDeathMatch.ClientDefaultTaunt1", "ScriptKeys.MultiplayerAutoTaunt1" );
	Input.BindKey( "iTeamDeathMatch.ClientDefaultTaunt2", "ScriptKeys.MultiplayerAutoTaunt2" );
	Input.BindKey( "iTeamDeathMatch.ClientDefaultTaunt3", "ScriptKeys.MultiplayerAutoTaunt3" );
	Input.BindKey( "iTeamDeathMatch.ClientDefaultTaunt4", "ScriptKeys.MultiplayerAutoTaunt4" );
	Input.BindKey( "iMPUtils.ClientSendDebugInfo", "ScriptKeys.MultiplayerDebug" );
	Input.BindKey( "iTeamDeathMatch.ClientDoUndock", "icPlayerPilot.Undock" );
	Input.BindKey( "iTeamDeathMatch.ClientDoScores", "Multiplayer.Score" );
	Global.CreateInt( "GameState", 2, 1 );
	Text.Add( "csv:/text/multiplayer/icapturetheflag" );
	Text.Add( "csv:/text/multiplayer/ideathmatch" );
	Text.Add( "csv:/text/ship_names" );
	Text.Add( "csv:/text/geog/carls_world" );
	Text.Add( "csv:/text/multiplayer/ideathmatch_addendum" );
	Text.Add( "csv:/text/subtargets" );
	Global.SetInt( "GameState", 2 );
	iFactionScript.Initialise();
	
	if ( !iFaction.Find( "Player" ) )
	{
		player = iFaction.Create( "Player", "XXX", A_Player );
	}
	
	if ( !iFaction.Find( "PowerUp" ) )
	{
		powerUp = iFaction.Create( "PowerUp", Text.Field( "hud_type_power_up", FT_Text ), A_Angels );
	}
	
	if ( !iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) ) )
	{
		faction_1 = iFaction.Create( Text.Field( "mp_flag_team_a", FT_Text ), Text.Field( "mp_flag_team_a", FT_Text ), A_Underworld );
		faction_0 = iFaction.Create( Text.Field( "mp_flag_team_b", FT_Text ), Text.Field( "mp_flag_team_b", FT_Text ), A_Military );
	}
	
	player = iFaction.Find( "Player" );
	powerUp = iFaction.Find( "PowerUp" );
	iFaction.SetFeeling( player, powerUp, 1.0 );
	faction_1 = iFaction.Find( Text.Field( "mp_flag_team_a", FT_Text ) );
	faction_0 = iFaction.Find( Text.Field( "mp_flag_team_b", FT_Text ) );
	iFaction.SetFeeling( faction_1, faction_0, -1.0 );
	iFaction.SetFeeling( faction_1, faction_1, 1.0 );
	iFaction.SetFeeling( faction_0, faction_1, -1.0 );
	iFaction.SetFeeling( faction_0, faction_0, 1.0 );
	iFaction.SetFeeling( faction_1, powerUp, 1.0 );
	iFaction.SetFeeling( faction_0, powerUp, 1.0 );
	Sim.Preload( "ini:/sims/power_ups/speed_power_down_x2" );
	Sim.Preload( "ini:/sims/power_ups/bomb_power_up" );
	Sim.Preload( "ini:/sims/power_ups/speed_power_up_x2" );
	Sim.Preload( "ini:/sims/power_ups/health" );
	local_6 = iMPUtils.FindSystemCentre();
	inifile = INIFile.Create( "ini:/multiplayer/maps/generic" );
	group_0 = iMap.GetGeography( inifile, local_6 );
	group_1 = iMap.GetSpawnPoints( inifile, local_6 );
	INIFile.Destroy( inifile );
	Global.CreateHandle( "mp_respawn_group", 2, group_1 );
	
	for ( ii = 0; ii < 2; ++ii )
	{
		group_2 = Group.NthGroup( group_0, ii );
		
		for ( jj = 0; jj < Group.SimCount( group_2 ); ++jj )
		{
			local_26 = iSim.Cast( Group.NthSim( group_2, jj ) );
			
			if ( iSim.Type( local_26 ) == T_Gunstar )
			{
				Sim.Destroy( local_26 );
			}
		}
	}
	
	iDirector.Begin();
	local_16 = start local_function_15( 4.0 );
	Task.Detach( local_16 );
	local_17 = start local_function_17( local_6, 55000.0, 60000.0 );
	Task.Detach( local_17 );
}

