package iActTwo;

uses Debug,
     Set,
     List,
     String,
     Global,
     Sim,
     Group,
     Math,
     Object,
     State,
     Task,
     Text,
     iSim,
     MapEnumerations,
     iMapEntity,
     iLagrangePoint,
     iShip,
     Subsim,
     iDockport,
     iAI,
     iAct2Mission01,
     iAct2Mission02,
     iAct2Mission03,
     iAct2Mission04,
     iAct2Mission05,
     iAct2Mission07,
     iAct2Mission08,
     iAct2Mission09,
     iAct2Mission10,
     iAct2Mission11,
     iAct2Mission13,
     iAct2Mission18,
     iAct2Mission20,
     iAct2Mission22,
     iAct2Mission24,
     iAct2Mission25,
     iComms,
     iConversation,
     iCutsceneUtilities,
     iDirector,
     GUI,
     iEmail,
     iEscort,
     iFaction,
     iFormation,
     iGMTracker,
     iGame,
     iGangsterIncidentGen,
     iBody,
     iHabitat,
     CargoTypes,
     iInventory,
     iMissionGenerator,
     iObjectives,
     iPilotSetup,
     iRangeCheck,
     iScriptedOrders,
     INIFile,
     iUtilities,
     iCargo,
     iCargoScript,
     iShipCreation,
     iStartSystem,
     iStation,
     iSystemCutScene,
     iTrade,
     iWingmen;

provides MasterScript,
         AcceleratorCutSceneMonitor,
         RitzIntroMonitor,
         JacksonEncounterSetup,
         EurekaStoryScript,
         KompiraStoryScript,
         FirefrostConversations,
         FirefrostStoryScript,
         CoyoteStoryScript,
         DagdaStoryScript,
         SantaRomeraStoryScript,
         MwariBlockadeEvents,
         MwariStoryScript,
         MarauderHuntStoryScript,
         MwariWarsStoryScript,
         AlliedSearchEncounters,
         Main,
         BaseMain,
         HofferRevealMonitor,
         HofferCreationHandler,
         santa_waiter;

prototype local_function_39();
prototype local_function_11();
prototype task local_function_14();
prototype task local_function_13();
prototype task local_function_15();
prototype task local_function_16();
prototype task local_function_17();
prototype task local_function_18();
prototype task local_function_20();
prototype task local_function_19();
prototype task local_function_23();
prototype task local_function_25();
prototype task local_function_24();
prototype task local_function_36();
prototype task local_function_21();
prototype task local_function_22();
prototype task local_function_26();
prototype task local_function_27();
prototype task local_function_37();
prototype task local_function_28();
prototype task local_function_29();
prototype task local_function_30();
prototype task local_function_31();
prototype task local_function_32();
prototype task local_function_33();
prototype task local_function_34();
prototype task local_function_35();
prototype hgroup local_function_3( hship ship_ );
prototype hgroup local_function_9();
prototype hgroup local_function_6( hhabitat habitat_ );
prototype local_function_1( int param_0_ );
prototype task AcceleratorCutSceneMonitor();
prototype task RitzIntroMonitor();
prototype task local_function_5();
prototype task JacksonEncounterSetup();
prototype task local_function_2();
prototype task EurekaStoryScript();
prototype task local_function_4( int param_0_ );
prototype set local_function_40( set localSet_0_, int param_1_ );
prototype task KompiraStoryScript();
prototype task FirefrostConversations();
prototype task FirefrostStoryScript();
prototype task CoyoteStoryScript();
prototype task local_function_7( hship ship_0_, hship ship_1_, hsim param_2_, hstate state_ );
prototype task DagdaStoryScript();
prototype task santa_waiter();
prototype task SantaRomeraStoryScript();
prototype task MwariBlockadeEvents();
prototype task MwariStoryScript();
prototype task MarauderHuntStoryScript();
prototype hgroup local_function_8( hmapentity mapentity_ );
prototype task HofferCreationHandler();
prototype task HofferRevealMonitor();
prototype task MwariWarsStoryScript();
prototype task local_function_12();
prototype task AlliedSearchEncounters();
prototype task MasterScript();
prototype task local_function_38();
prototype BaseMain();
prototype Main();
prototype task local_function_10( int param_0_ );
prototype task local_function_0( hship ship_, hisim param_1_ );

local_function_39()
{
	debug Debug.PrintString( "iActTwo.ActTwoGlobals - initialising act two globals\n" );
	Global.CreateBool( "g_act2_survivors_rescued", 2, false );
	Global.CreateBool( "g_act2_league_plea", 2, false );
	Global.CreateBool( "g_act2_ritz_introduced", 2, false );
	Global.CreateBool( "g_act2_completed_blockade_run", 2, false );
	Global.CreateBool( "g_act2_referred_to_hoffer", 2, false );
	Global.CreateBool( "g_act2_spoken_to_hoffer", 2, false );
	Global.CreateBool( "g_act2_ambassador_rescued", 2, false );
	Global.CreateBool( "g_eureka_food_supplies", 2, false );
	Global.CreateBool( "g_act2_need_pilots", 2, false );
	Global.CreateBool( "g_act2_oman_test_offered", 2, false );
	Global.CreateBool( "g_act2_oman_initiation_complete", 2, false );
	Global.CreateBool( "g_act2_firefrost_sherrif_introduction", 2, false );
	Global.CreateBool( "g_act2_firefrost_high_noon_complete", 2, false );
	Global.CreateBool( "g_act2_hunter_or_hunted_complete", 2, false );
	Global.CreateBool( "g_act2_kong_fracture_complete", 2, false );
	Global.CreateBool( "g_act2_base_moving_message_read", 2, false );
	Global.CreateBool( "g_act2_mommma_wolf_destroyed", 2, false );
	Global.CreateBool( "g_act2_snooping_complete", 2, false );
	Global.CreateBool( "g_act2_got_hyperspace_tracker", 2, false );
	Global.CreateBool( "g_act2_wolfs_lair_complete", 2, false );
	Global.CreateBool( "g_act2_eureka_visited", 2, false );
	Global.CreateBool( "g_act2_badlands_food_sorted", 2, false );
	Global.CreateBool( "g_act2_badlands_reached_pilot_total", 2, false );
	Global.CreateBool( "g_act2_ready_for_battle_of_mwari", 2, false );
	Global.CreateBool( "g_act2_grassy_knoll_complete", 2, false );
	Global.CreateBool( "g_act2_marauder_base_mission_complete", 2, false );
	Global.CreateBool( "g_act2_mwari_siege_lifted", 2, false );
	Global.CreateBool( "g_act2_blockade_run_sucessful", 2, false );
	Global.CreateBool( "g_act2_mca_introduced", 2, false );
	Global.CreateBool( "g_received_selling_secrets_intro", 2, false );
	Global.CreateBool( "g_act2_recruiter_assasin_complete", 2, false );
	Global.CreateBool( "g_act2_corporate_holdings_complete", 2, false );
	Global.CreateBool( "g_act2_unification_complete", 2, false );
	Global.CreateBool( "g_act2_reached_pilot_total", 2, false );
	Global.CreateBool( "g_act2_received_selling_secrets_intro", 2, false );
	Global.CreateBool( "g_act2_base_has_moved", 2, false );
	Global.CreateBool( "g_act2_kong_death_mission_complete", 2, false );
	Global.CreateBool( "g_act2_wolf_hunt_complete", 2, false );
	Global.CreateBool( "g_act2_dante_system_scouted", 2, false );
	Global.CreateBool( "g_act2_marauders_defeated", 2, false );
	Global.CreateBool( "g_oman_provided_pilots", 2, false );
	Global.CreateBool( "g_firfrost_sherrif_referred", 2, false );
	Global.CreateBool( "g_act2_high_noon_offered", 2, false );
	Global.CreateBool( "g_act2_third_way_provided_pilots", 2, false );
	Global.CreateBool( "g_act2_kong_fracture_success", 2, false );
	Global.CreateBool( "g_act2_accelerator_cut_scene", 2, false );
	Global.CreateBool( "g_act2_marauder_message_detection", 2, false );
	Global.CreateBool( "g_got_hyperspace_tracker", 2, false );
	Global.CreateInt( "g_story_2.10", 2, 0 );
	Global.CreateInt( "g_story_2.10b", 2, 0 );
	Global.CreateInt( "g_story_2.20", 2, 0 );
	Global.CreateInt( "g_story_2.30", 2, 0 );
	Global.CreateInt( "g_story_2.40", 2, 0 );
	Global.CreateInt( "g_story_2.50", 2, 0 );
	Global.CreateInt( "g_story_2.60", 2, 0 );
	Global.CreateInt( "g_story_2.70", 2, 0 );
	Global.CreateInt( "g_story_2.80", 2, 0 );
	Global.CreateInt( "g_story_2.90", 2, 0 );
	Global.CreateInt( "g_story_2.110", 2, 0 );
	Global.CreateInt( "g_story_2.120", 2, 0 );
	Global.CreateInt( "g_story_2.130", 2, 0 );
	Global.CreateInt( "g_story_2.140", 2, 0 );
	Global.CreateInt( "g_story_2.140b", 2, 0 );
	Global.CreateInt( "g_story_2.150", 2, 0 );
	Global.CreateInt( "g_story_2.160", 2, 0 );
	Global.CreateInt( "g_story_2.170", 2, 0 );
	Global.CreateInt( "g_story_2.180", 2, 0 );
	Global.CreateInt( "g_story_2.190", 2, 0 );
	Global.CreateInt( "g_story_2.200", 2, 0 );
	Global.CreateInt( "g_story_2.210", 2, 0 );
	Global.CreateInt( "g_story_2.220", 2, 0 );
	Global.CreateInt( "g_story_2.230", 2, 0 );
	Global.CreateInt( "g_story_2.231", 2, 0 );
	Global.CreateInt( "g_story_2.240", 2, 0 );
	Global.CreateInt( "g_story_2.250", 2, 0 );
	Global.CreateInt( "g_story_2.260", 2, 0 );
	Global.CreateInt( "g_story_2.270", 2, 0 );
	Global.CreateInt( "g_story_2.280", 2, 0 );
	Global.CreateInt( "g_story_2.290", 2, 0 );
	Global.CreateInt( "g_story_2.300", 2, 0 );
	Global.CreateInt( "g_story_2.310", 2, 0 );
	Global.CreateInt( "g_story_2.320", 2, 0 );
	Global.CreateInt( "g_story_2.330", 2, 0 );
	Global.CreateInt( "g_act2_dagda_visits", 2, 0 );
	Global.CreateInt( "g_act2_mwari_conversations", 2, 0 );
	Global.CreateInt( "g_act2_mwari_pilots", 2, 0 );
	Global.CreateHandle( "g_current_active_system_script", 2, none );
	Global.CreateBool( "g_jackson_question_1", 2, false );
	Global.CreateBool( "g_jackson_question_2", 2, false );
	Global.CreateBool( "g_jackson_question_3", 2, false );
	Global.CreateBool( "g_jackson_question_4", 2, false );
	Global.CreateBool( "g_santaromera_script_complete", 2, false );
	Global.CreateBool( "g_coyote_script_complete", 2, false );
	Global.CreateBool( "g_dagda_script_complete", 2, false );
	Global.CreateBool( "g_eureka_script_complete", 2, false );
	Global.CreateBool( "g_mwari_script_complete", 2, false );
	Global.CreateBool( "g_firefrost_script_complete", 2, false );
	Global.CreateBool( "g_kompira_script_complete", 2, false );
	Global.CreateBool( "g_hofferswake_script_complete", 2, false );
	Global.CreateHandle( "g_hoffers_wake_state", 2, none );
	Global.CreateHandle( "g_coyote_state", 2, none );
	Global.CreateHandle( "g_kompira_state", 2, none );
	Global.CreateHandle( "g_eureka_state", 2, none );
	Global.CreateHandle( "g_firefrost_state", 2, none );
	Global.CreateHandle( "g_dagda_state", 2, none );
	Global.CreateHandle( "g_mwari_state", 2, none );
	Global.CreateHandle( "g_dante_state", 2, none );
	Global.CreateHandle( "g_santa_romera_state", 2, none );
	iGangsterIncidentGen.CreateGlobals();
	Text.Add( "csv:/text/act_2/act2_master" );
	Text.Add( "csv:/text/act_2/act2_master_addendum" );
	Text.Add( "csv:/text/act_2/act2_master_addendum2" );
	Text.Add( "csv:/text/act_2/act2_master_addendum3" );
	Text.Add( "csv:/text/act_2/act2_master_addendum4" );
}

local_function_11()
{
	debug Debug.PrintString( "iActTwo.DestryActTwoGlobals - Purging all act one globals. NONE SHALL SURVIVE !\n" );
	Global.Destroy( "g_act2_survivors_rescued" );
	Global.Destroy( "g_act2_league_plea" );
	Global.Destroy( "g_act2_ritz_introduced" );
	Global.Destroy( "g_act2_completed_blockade_run" );
	Global.Destroy( "g_act2_referred_to_hoffer" );
	Global.Destroy( "g_act2_spoken_to_hoffer" );
	Global.Destroy( "g_act2_ambassador_rescued" );
	Global.Destroy( "g_eureka_food_supplies" );
	Global.Destroy( "g_act2_need_pilots" );
	Global.Destroy( "g_act2_oman_test_offered" );
	Global.Destroy( "g_act2_oman_initiation_complete" );
	Global.Destroy( "g_act2_firefrost_sherrif_introduction" );
	Global.Destroy( "g_act2_firefrost_high_noon_complete" );
	Global.Destroy( "g_act2_hunter_or_hunted_complete" );
	Global.Destroy( "g_act2_kong_fracture_complete" );
	Global.Destroy( "g_act2_base_moving_message_read" );
	Global.Destroy( "g_act2_mommma_wolf_destroyed" );
	Global.Destroy( "g_act2_snooping_complete" );
	Global.Destroy( "g_act2_got_hyperspace_tracker" );
	Global.Destroy( "g_act2_wolfs_lair_complete" );
	Global.Destroy( "g_act2_eureka_visited" );
	Global.Destroy( "g_act2_badlands_food_sorted" );
	Global.Destroy( "g_act2_badlands_reached_pilot_total" );
	Global.Destroy( "g_act2_ready_for_battle_of_mwari" );
	Global.Destroy( "g_act2_grassy_knoll_complete" );
	Global.Destroy( "g_act2_marauder_base_mission_complete" );
	Global.Destroy( "g_act2_mwari_siege_lifted" );
	Global.Destroy( "g_act2_blockade_run_sucessful" );
	Global.Destroy( "g_act2_mca_introduced" );
	Global.Destroy( "g_received_selling_secrets_intro" );
	Global.Destroy( "g_act2_recruiter_assasin_complete" );
	Global.Destroy( "g_act2_corporate_holdings_complete" );
	Global.Destroy( "g_act2_unification_complete" );
	Global.Destroy( "g_act2_reached_pilot_total" );
	Global.Destroy( "g_act2_received_selling_secrets_intro" );
	Global.Destroy( "g_act2_base_has_moved" );
	Global.Destroy( "g_act2_kong_death_mission_complete" );
	Global.Destroy( "g_act2_wolf_hunt_complete" );
	Global.Destroy( "g_act2_marauders_defeated" );
	Global.Destroy( "g_oman_provided_pilots" );
	Global.Destroy( "g_firfrost_sherrif_referred" );
	Global.Destroy( "g_act2_high_noon_offered" );
	Global.Destroy( "g_act2_third_way_provided_pilots" );
	Global.Destroy( "g_act2_kong_fracture_success" );
	Global.Destroy( "g_act2_accelerator_cut_scene" );
	Global.Destroy( "g_act2_marauder_message_detection" );
	Global.Destroy( "g_got_hyperspace_tracker" );
	Global.Destroy( "g_story_2.10" );
	Global.Destroy( "g_story_2.20" );
	Global.Destroy( "g_story_2.30" );
	Global.Destroy( "g_story_2.40" );
	Global.Destroy( "g_story_2.50" );
	Global.Destroy( "g_story_2.60" );
	Global.Destroy( "g_story_2.70" );
	Global.Destroy( "g_story_2.80" );
	Global.Destroy( "g_story_2.90" );
	Global.Destroy( "g_story_2.110" );
	Global.Destroy( "g_story_2.120" );
	Global.Destroy( "g_story_2.130" );
	Global.Destroy( "g_story_2.140" );
	Global.Destroy( "g_story_2.140b" );
	Global.Destroy( "g_story_2.150" );
	Global.Destroy( "g_story_2.160" );
	Global.Destroy( "g_story_2.170" );
	Global.Destroy( "g_story_2.180" );
	Global.Destroy( "g_story_2.190" );
	Global.Destroy( "g_story_2.200" );
	Global.Destroy( "g_story_2.210" );
	Global.Destroy( "g_story_2.220" );
	Global.Destroy( "g_story_2.230" );
	Global.Destroy( "g_story_2.231" );
	Global.Destroy( "g_story_2.240" );
	Global.Destroy( "g_story_2.250" );
	Global.Destroy( "g_story_2.260" );
	Global.Destroy( "g_story_2.270" );
	Global.Destroy( "g_story_2.280" );
	Global.Destroy( "g_story_2.290" );
	Global.Destroy( "g_story_2.300" );
	Global.Destroy( "g_story_2.310" );
	Global.Destroy( "g_story_2.320" );
	Global.Destroy( "g_story_2.330" );
	Global.Destroy( "g_act2_dagda_visits" );
	Global.Destroy( "g_act2_mwari_conversations" );
	Global.Destroy( "g_act2_mwari_pilots" );
	Global.Destroy( "g_current_active_system_script" );
	Global.Destroy( "g_jackson_question_1" );
	Global.Destroy( "g_jackson_question_2" );
	Global.Destroy( "g_jackson_question_3" );
	Global.Destroy( "g_jackson_question_4" );
	Global.Destroy( "g_hoffers_wake_state" );
	Global.Destroy( "g_coyote_state" );
	Global.Destroy( "g_kompira_state" );
	Global.Destroy( "g_eureka_state" );
	Global.Destroy( "g_firefrost_state" );
	Global.Destroy( "g_dagda_state" );
	Global.Destroy( "g_mwari_state" );
	Global.Destroy( "g_dante_state" );
	Global.Destroy( "g_santa_romera_state" );
	Global.Destroy( "g_told_about_hoffer" );
	Global.Destroy( "g_revealed_hoffer" );
	iGangsterIncidentGen.DestroyGlobals();
}

task local_function_14()
{
	debug Debug.PrintString( "iActTwo.StoryElement2.10 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.10_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_1", true );
	Global.SetBool( "g_act2_league_plea", true );
}

task local_function_13()
{
	debug Debug.PrintString( "iActTwo.StoryElement 2.10b : Story element has begun\n" );
	iConversation.Begin();
	iConversation.Say( none, "name_jafs", "a2_master_dialogue_jafs_phew_things_seem_to_have_got_a_little_intense" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_yeah_so_what_you_gonna_say_we_just_walk_away" );
	iConversation.Say( none, "name_jafs", "a2_master_dialogue_jafs_hey_you_got_me_wrong" );
	iConversation.Say( none, "name_az", "a2_master_dialogue_ibuki_count_me_in" );
	iConversation.Say( none, "name_lori", "a2_master_dialogue_lori_me_too" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_so_its_decided_then" );
	iConversation.End();
}

task local_function_15()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_170 : Story element has begun\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.170_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_170", true );
}

task local_function_16()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_190 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.190_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_190", true );
}

task local_function_17()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_200 : Story element has begun.\n" );
	
	if ( Global.Bool( "g_act2_kong_fracture_success" ) == 0 )
	{
		iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.200b_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_200b", true );
		return;
	}
	
	iEmail.SendEmail( "a2_master_kong_mail_sender", "a2_master_story2.200_mail_subject", "html:/text/act_2/act2_master_kongmail_2_200", true );
}

task local_function_18()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_180 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.180_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_180", true );
	Global.SetBool( "g_act2_base_moving_message_read", true );
}

task local_function_20()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_220 : Story element has begun.\n" );
	iConversation.Begin();
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_ah_cal_got_something_here_you_might_be_interested_in" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_dont_tell_me_youve_re_wired_the_coffee_machine_again" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_better_than_that_ive_been_listening_to_sub_space_comms_channels" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_listening_to_ther_folks_private_conversations" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_yeah_but_this_is_sweet" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_so_what_do_these_messages_say" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_well_theres_the_problem" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_well_thats_better_than_nothing" );
	iConversation.End();
	Global.SetBool( "g_act2_marauder_message_detection", true );
}

task local_function_19()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_210 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.210_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_210", true );
}

task local_function_23()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_250 : Story element has begun.\n" );
	iUtilities.ReleaseError( "INSERT STORY SEQUENCE 2.250 HERE - hints pointing to the Marauder raider mothership." );
}

task local_function_25()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_260 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_anon_sender", "a2_master_story2.260_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_260", true );
}

task local_function_24()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_270 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.270_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_270", true );
}

task local_function_36()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_280 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.280_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_280", true );
}

task local_function_21()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_231 : Story element has begun.\n" );
	iConversation.Begin();
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_now_that_youve_retreived_that_marauder_encryption_device" );
	iConversation.End();
	iEmail.SendEmail( "a2_master_league_boffin_mail_sender", "a2_master_story2.231_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_231", true );
}

task local_function_22()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_230 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_boffin_mail_sender", "a2_master_story2.230_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_230", true );
	Global.SetBool( "g_act2_allies_crack_code", true );
}

task local_function_26()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_160 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.160_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_160", true );
}

task local_function_27()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_150 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.150_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_150", true );
	Global.SetBool( "g_act2_need_pilots", true );
}

task local_function_37()
{
	debug Debug.PrintString( "iActTwo.StoryElementClay_Remeber : Story element has begun.\n" );
	iConversation.Begin();
	iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_racking_brains" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_who_the" );
	iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_lets_visit" );
	iConversation.End();
}

task local_function_28()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_290 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.290_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_290", true );
	Global.SetBool( "g_act2_ready_for_battle_of_mwari", true );
}

task local_function_29()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_130 : Story element has begun.\n" );
	iUtilities.ReleaseError( "INSERT STORY SEQUENCE 2.130 HERE - E mail reinforcing the fact that their is a back door into Mwari" );
}

task local_function_30()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_140 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.140_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_14", true );
}

task local_function_31()
{
	debug Debug.PrintString( "iActTwo.StoryElement2_140 : Story element has begun.\n" );
	iEmail.SendEmail( "a2_master_mca_mail_sender", "a2_master_story2.140b_mail_subject", "html:/text/act_2/act2_master_mcamail_2_14", true );
	Global.SetBool( "g_act2_received_selling_secrets_intro", true );
	iInventory.AddFastAttackShip();
	iInventory.Add( CT_LDSClass3Drive, 1 );
	iInventory.Add( CT_GammaHeatSink, 1 );
	iInventory.Add( CT_AdvancedActiveSensors, 1 );
	iInventory.Add( CT_AdvancedPassiveSensors, 1 );
	iInventory.Add( CT_Level3Autorepairsystem, 1 );
	iInventory.Add( CT_DefenceShield, 1 );
	iInventory.Add( CT_CapsuleDrive, 1 );
	iInventory.Add( CT_ShipCPUGradeII, 1 );
	iInventory.Add( CT_ParticleBeamCannon, 1 );
	iInventory.Add( CT_TwinPackMissileLauncher, 1 );
	iInventory.Add( CT_HyperspaceTracker, 1 );
	Global.SetBool( "g_act2_got_hyperspace_tracker", true );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 588, 1, 13, 2, 4 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 604, 1, 20, 2, 2 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 605, 1, 33, 3, 2 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 505, 1, 43, 1, 0 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 567, 1, 28, 2, 4 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 597, 1, 37, 3, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 228, 1, 46, 1, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "M.C.A." ), 507, 1, 536, 2, 0 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 580, 1, 47, 4, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 221, 1, 15, 2, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 224, 1, 30, 4, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 231, 1, 44, 1, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 602, 1, 42, 1, 2 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 234, 1, 32, 3, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 609, 1, 35, 4, 1 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 507, 1, 25, 1, 0 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 507, 1, 38, 1, 0 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 170, 1, 21, 2, 2 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 603, 1, 25, 1, 5 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 601, 1, 46, 2, 3 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 576, 1, 55, 1, 3 ) );
	iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 248, 1, 5, 3, 1 ) );
	iConversation.Begin();
	iConversation.Say( none, "name_jafs", "a2_master_dialogue_jafs_ive_got_the_ship" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_i_dont_think_so" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_ship_prepped" );
	iConversation.Say( none, "name_jafs", "a2_master_dialogue_jafs_lets_do_piracy" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_you_can_calm" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_hang_on_thats_strange" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_whats_up_smith" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_strange_system" );
	iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_capsule_space" );
	iConversation.Say( none, "name_smith", "a2_master_dialogue_smith_ive_heard_of_those" );
	iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_no_time" );
	iConversation.End();
}

task local_function_32()
{
	debug Debug.PrintString( "iActTwo.Storyelement2_300 : story element has begun\n" );
	iEmail.SendEmail( "a2_master_hoffer_mail_sender", "a2_master_story2.300_mail_subject", "html:/text/act_2/act2_master_hoffermail_2_300", true );
}

task local_function_33()
{
	debug Debug.PrintString( "iActTwo.Storyelement2_310 : story element has begun\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.310_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_310", true );
}

task local_function_34()
{
	debug Debug.PrintString( "iActTwo.Storyelement2_320 : story element has begun\n" );
	iEmail.SendEmail( "a2_master_hoffer_mail_sender", "a2_master_story2.320_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_320_b", true );
}

task local_function_35()
{
	debug Debug.PrintString( "iActTwo.Storyelement2_330 : story element has begun\n" );
	iEmail.SendEmail( "a2_master_league_mail_sender", "a2_master_story2.330_mail_subject", "html:/text/act_2/act2_master_leaguemail_2_330", true );
}

hgroup local_function_3( hship ship_ )
{
	hgroup group = Group.Create();
	hship shipOmanCutter_0 = iShip.Create( "ini:/sims/ships/independent/oman_cutter", iShipCreation.ShipName( "TheOman", -1 ) );
	hship shipOmanCutter_1 = iShip.Create( "ini:/sims/ships/independent/oman_cutter", iShipCreation.ShipName( "TheOman", -1 ) );
	hship shipOmanCutter_2 = iShip.Create( "ini:/sims/ships/independent/oman_cutter", iShipCreation.ShipName( "TheOman", -1 ) );
	
	Group.AddSim( group, shipOmanCutter_0 );
	iPilotSetup.GenericCargoPod( shipOmanCutter_0 );
	iSim.SetFaction( shipOmanCutter_0, iFaction.Find( iUtilities.FromAllegianceEnum( A_TheOman ) ) );
	Sim.PlaceNear( shipOmanCutter_0, ship_, Global.Float( "g_player_sensor_range" ) );
	Sim.SetCullable( shipOmanCutter_0, false );
	Group.AddSim( group, shipOmanCutter_1 );
	iPilotSetup.GenericCargoPod( shipOmanCutter_1 );
	iSim.SetFaction( shipOmanCutter_1, iFaction.Find( iUtilities.FromAllegianceEnum( A_TheOman ) ) );
	Sim.PlaceRelativeTo( shipOmanCutter_1, shipOmanCutter_0, 100.0, 100.0, 100.0 );
	Sim.SetCullable( shipOmanCutter_1, false );
	Group.AddSim( group, shipOmanCutter_2 );
	iPilotSetup.GenericCargoPod( shipOmanCutter_2 );
	iSim.SetFaction( shipOmanCutter_2, iFaction.Find( iUtilities.FromAllegianceEnum( A_TheOman ) ) );
	Sim.PlaceRelativeTo( shipOmanCutter_2, shipOmanCutter_0, -100.0, -100.0, -100.0 );
	Sim.SetCullable( shipOmanCutter_1, false );
	return group;
}

hgroup local_function_9()
{
	hgroup group = Group.Create();
	hship ship;
	hship playerShip = iShip.FindPlayerShip();
	int random;
	float constant = 0.0;
	int ii;
	
	random = Math.RandomInt( 1, 6 );
	
	for ( ii = 0; ii < random; ++ii )
	{
		switch ( Math.RandomInt( 0, 5 ) )
		{
			case 0:
				ship = iShip.Create( "ini:/sims/ships/independent/armoured_tug", iShipCreation.ShipName( "Independent", -1 ) );
				break;
			
			case 1:
				ship = iShip.Create( "ini:/sims/ships/independent/cutter", iShipCreation.ShipName( "Independent", -1 ) );
				break;
			
			case 2:
				ship = iShip.Create( "ini:/sims/ships/independent/cutter_mercenary", iShipCreation.ShipName( "Independent", -1 ) );
				break;
			
			case 3:
				ship = iShip.Create( "ini:/sims/ships/independent/puffin_armed", iShipCreation.ShipName( "Independent", -1 ) );
				break;
			
			case 4:
				ship = iShip.Create( "ini:/sims/ships/independent/tug_armed", iShipCreation.ShipName( "Independent", -1 ) );
				break;
			
			case 5:
				ship = iShip.Create( "ini:/sims/ships/independent/tug_armed_weak", iShipCreation.ShipName( "Independent", -1 ) );
				break;
		}
		
		Group.AddSim( group, ship );
		iPilotSetup.GenericAggressive( ship );
		iSim.SetFaction( ship, iFaction.Find( iUtilities.FromAllegianceEnum( A_League ) ) );
		
		if ( ii == 0 )
		{
			Sim.PlaceNear( ship, playerShip, Global.Float( "g_player_senser_range" ) );
		}
		
		Sim.SetCullable( ship, false );
	}
	
	iFormation.Goose( group, 50.0, true );
	return group;
}

hgroup local_function_6( hhabitat habitat_ )
{
	//  slightly altered interceptor squad creation to make them always appear to approach from 'somewhere else'
	
	hgroup group = Group.Create();
	hship shipInterceptor_0 = iShip.Create( "ini:/sims/ships/corporate/interceptor", iShipCreation.ShipName( "MaasCorporation", -1 ) );
	hship shipInterceptor_1 = iShip.Create( "ini:/sims/ships/corporate/interceptor", iShipCreation.ShipName( "MaasCorporation", -1 ) );
	hship shipInterceptor_2 = iShip.Create( "ini:/sims/ships/corporate/interceptor", iShipCreation.ShipName( "MaasCorporation", -1 ) );
	hship shipInterceptor_3 = iShip.Create( "ini:/sims/ships/corporate/interceptor", iShipCreation.ShipName( "MaasCorporation", -1 ) );
	
	Group.AddSim( group, shipInterceptor_0 );
	iPilotSetup.GenericAggressive( shipInterceptor_0 );
	iSim.SetFaction( shipInterceptor_0, iFaction.Find( iUtilities.FromAllegianceEnum( A_MAASCorporation ) ) );
	Sim.PlaceNear( shipInterceptor_0, habitat_, 300000.0 );
	Sim.SetCullable( shipInterceptor_0, false );
	Group.AddSim( group, shipInterceptor_1 );
	iPilotSetup.GenericAggressive( shipInterceptor_1 );
	iSim.SetFaction( shipInterceptor_1, iFaction.Find( iUtilities.FromAllegianceEnum( A_MAASCorporation ) ) );
	Sim.PlaceNear( shipInterceptor_1, shipInterceptor_0, 300.0 );
	Sim.SetCullable( shipInterceptor_1, false );
	Group.AddSim( group, shipInterceptor_2 );
	iPilotSetup.GenericAggressive( shipInterceptor_2 );
	iSim.SetFaction( shipInterceptor_2, iFaction.Find( iUtilities.FromAllegianceEnum( A_MAASCorporation ) ) );
	Sim.PlaceNear( shipInterceptor_2, shipInterceptor_0, 300.0 );
	Sim.SetCullable( shipInterceptor_2, false );
	Group.AddSim( group, shipInterceptor_3 );
	iPilotSetup.GenericAggressive( shipInterceptor_3 );
	iSim.SetFaction( shipInterceptor_3, iFaction.Find( iUtilities.FromAllegianceEnum( A_MAASCorporation ) ) );
	Sim.PlaceNear( shipInterceptor_3, shipInterceptor_0, 300.0 );
	Sim.SetCullable( shipInterceptor_3, false );
	return group;
}

local_function_1( int param_0_ )
{
	int gAct2MwariPilots = Global.Int( "g_act2_mwari_pilots" );
	
	debug atomic
	{
		Debug.PrintString( "iActTwo.MwariPiloyTally : Updating Mwari Pilot Tally\n" );
		Debug.PrintString( "iActTwo.MwariPilotTally : Old Pilot Tally = " );
		Debug.PrintInt( gAct2MwariPilots );
		Debug.PrintString( " pilots\n" );
	}
	
	gAct2MwariPilots = ( gAct2MwariPilots + param_0_ );
	
	debug atomic
	{
		Debug.PrintString( "iActTwo.MwariPilotTally : New Pilot Tally = " );
		Debug.PrintInt( gAct2MwariPilots );
		Debug.PrintString( " pilots\n" );
	}
	
	if ( (gAct2MwariPilots >= 300) && Global.Exists( "g_revealed_hoffer" ) )
	{
		debug Debug.PrintString( "iActTwo.'MwariPilotsTally : player has reached reqwuired pilot level!\n" );
		Global.SetBool( "g_act2_reached_pilot_total", true );
		return;
	}
	
	Global.SetInt( "g_act2_mwari_pilots", gAct2MwariPilots );
}

task AcceleratorCutSceneMonitor()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	hship playerShip = iShip.FindPlayerShip();
	hisim jumpAccelerator = iSim.Cast( Sim.FindByName( "Jump Accelerator" ) );
	bool local_4 = false;
	bool local_5 = true;
	bool local_6 = false;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	bool local_10 = false;
	int convoResponse;
	int local_12;
	int local_13;
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	debug Debug.PrintString( "iActTwo.AcceleratorCutSceneMonitor -  Starting cut scene monitor task.\n" );
	
	do
	{
		if ( Global.Int( "g_current_act" ) != 2 )
		{
			debug Debug.PrintString( "iActTwo.AcceleratorCutSceneMonitor: Hang on - this is only supposed to happen in act 2!\n" );
			break;
		}
		
		if ( iSim.ActiveWorld() == "map:/geog/badlands/santa_romera" )
		{
			jumpAccelerator = iSim.Cast( Sim.FindByName( "Jump Accelerator" ) );
			
			if ( Sim.DistanceBetween( playerShip, jumpAccelerator ) > 20000.0 )
			{
				local_6 = false;
				debug Debug.PrintString( "iActTwo.AcceleratorCutSceneMonitor : Player is more than 20k from the jump accelerator, sleeping for ten seconds\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			else if ( Sim.DistanceBetween( playerShip, jumpAccelerator ) > 8000.0 )
			{
				debug Debug.PrintString( "iActTwo.AcceleratorcutSceneMonitor : player is more than 8k from the jump accelerator, sleeping for one second\n" );
				Task.Sleep( Task.Current(), 1.0 );
			}
			else if ( Global.Bool( "g_act2_accelerator_cut_scene" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.AcceleratorCutSceneMonitor : Starting cut scene 2.60 - Introduction to the Jump Accelrator\n" );
				Text.Add( "csv:/text/act_2/act2_mission09" );
				iCutsceneUtilities.HandleAbort( start local_function_0( playerShip, jumpAccelerator ) );
				
				atomic
				{
					Sim.PlaceRelativeTo( playerShip, jumpAccelerator, 1000.0, 500.0, -5000.0 );
					Sim.PointAt( playerShip, jumpAccelerator );
					Sim.SetVelocity( playerShip, 0.0, 0.0, 0.0 );
					iEscort.Goose( iWingmen.Group(), 0.0, 0.0, true );
				}
				
				Text.Remove( "csv:/text/act_2/act2_mission09" );
				Global.SetBool( "g_act2_accelerator_cut_scene", true );
			}
			else if ( !local_6 )
			{
				iConversation.Begin();
				iConversation.AddResponse( "a2_master_dialogue_cal_just_signtseeing", "a2_master_dialogue_cal_just_signtseeing" );
				iConversation.AddResponse( "a2_master_dialogue_cal_how_do_i_get_through_the_accelerator", "a2_master_dialogue_cal_how_do_i_get_through_the_accelerator" );
				iConversation.AddResponse( "a2_master_dialogue_cal_just_want_to_know_about_the_accelerator", "a2_master_dialogue_cal_just_want_to_know_about_the_accelerator" );
				iConversation.AddResponse( "a2_master_dialogue_cal_just_passing_through", "a2_master_dialogue_cal_just_passing_through" );
				convoResponse = iConversation.Ask( jumpAccelerator, "accelerator_control", "a2_master_dialogue_accelerator_control_unidentified_ship_this_area_is_restricted_to_corporate_traffic_please_state_your_business" );
				
				if ( convoResponse == 1 )
				{
					iConversation.Say( jumpAccelerator, "accelerator_control", "a2_master_dialogue_accelerator_control_as_i_said_this_is_restricted_coporate" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_these_folks_aint_too_freindly" );
				}
				else if ( convoResponse == 2 )
				{
					iConversation.Say( jumpAccelerator, "accelerator_control", "a2_master_dialogue_accelerator_control_in_a_word_buddy_you_dont" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_these_folks_aint_too_freindly" );
				}
				else if ( convoResponse == 3 )
				{
					iConversation.Say( jumpAccelerator, "accelerator_control", "a2_master_dialogue_accelerator_control_there_isnt_nothing_much_to_know_buddy" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_these_folks_aint_too_freindly" );
				}
				else if ( convoResponse == 4 )
				{
					iConversation.Say( jumpAccelerator, "accelerator_control", "a2_master_dialogue_accelerator_control_the_just_pass_through_somewhere_else" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_these_folks_aint_too_freindly" );
				}
				
				iConversation.End();
				local_6 = true;
				break;
			}
		}
		
		Task.Sleep( Task.Current(), 0.50 );
	}
	while ( local_5 );
	
	debug Debug.PrintString( "iActTwo.AcceleratorCutSceneMonitor: Terminating and destroying State.\n" );
	State.Destroy( Task.Current() );
}

task RitzIntroMonitor()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	hship playerShip = iShip.FindPlayerShip();
	hmapentity theRitz = iMapEntity.FindByNameInSystem( "The Ritz", "map:/geog/badlands/santa_romera" );
	bool local_4 = false;
	int convoResponse;
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	debug Debug.PrintString( "iActTwo.RitzIntroMonitor -  Starting Ritz intro monitor.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			while ( local_4 == 0 )
			{
				if ( Sim.DistanceBetween( playerShip, theRitz ) > 10000.0 )
				{
					debug Debug.PrintString( "iActTwo.RitzIntroMonitor : Player is more than 10k from the Ritz, sleeping for ten seconds\n" );
					Task.Sleep( Task.Current(), 5.0 );
				}
				else if ( Sim.DistanceBetween( playerShip, theRitz ) > 3000.0 )
				{
					debug Debug.PrintString( "iActTwo.RitzIntroMonitor : player is more than 3k from the ritz, sleeping for one second\n" );
					Task.Sleep( Task.Current(), 1.0 );
				}
				else
				{
					local_4 = true;
				}
			}
			
			iConversation.OneLiner( none, "name_clay", "a2_master_dialogue_clay_this_place_was_a_snake_pit" );
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				debug Debug.PrintString( "iActTwo.RitzIntroMonitor : Waiting for the player to have have redscued the MCA ambassador\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( Global.Bool( "g_act2_ambassador_rescued" ) == 0 );
			
			debug Debug.PrintString( "iActTwo.RitzIntroMonitor : Player has rescued MCA ambassador - conversations now avaliable at the ritz...\n" );
			State.SetProgress( taskState, 2 );
		
		case 2:
			do
			{
				debug Debug.PrintString( "iActTwo.RitzIntroMonitor : Waitnig for the player to dock to the Ritz, sleeping.\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( !iSim.IsDockedToStructure( iSim.Cast( playerShip ), iSim.Cast( theRitz ) ) );
			
			iConversation.Begin();
			iConversation.AddResponse( "a2_master_option_cal_problems_with_marauders", "a2_master_dialogue_cal_problems_with_marauders" );
			iConversation.AddResponse( "a2_master_dialogue_cal_just_curious", "a2_master_dialogue_cal_just_curious" );
			iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_mca", "a2_master_dialogue_cal_tell_me_about_mca" );
			convoResponse = iConversation.Ask( none, "a2_master_character_name_indigo", "a2_master_dialogue_indigo_word_has_passed_down" );
			
			if ( convoResponse == 1 )
			{
				iConversation.Say( none, "a2_master_character_name_indigo", "a2_master_dialogue_indigo_well_if_you_hadnt_noticed" );
			}
			else if ( convoResponse == 2 )
			{
				iConversation.Say( none, "a2_master_character_name_indigo", "a2_master_dialogue_indigo_this_fleapit" );
			}
			else if ( convoResponse == 3 )
			{
				iConversation.Say( none, "a2_master_character_name_indigo", "a2_master_dialogue_indigo_mca_stands_for" );
			}
			
			iConversation.End();
			
			do
			{
				debug Debug.PrintString( "iActTwo.RitzIntroMonitor : waiting for the player to undock from the Ritz station, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( iSim.IsDockedToStructure( playerShip, iSim.Cast( theRitz ) ) );
			
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_these_mca_folk_are_intense" );
			iConversation.End();
			Task.Sleep( Task.Current(), 5.0 );
			Global.SetBool( "g_act2_ritz_introduced", true );
			State.Destroy( Task.Current() );
	}
}

task local_function_5()
{
	hgroup group = Group.Create();
	hship shipPuffinArmed;
	hship shipArmouredTug_0;
	hship shipArmouredTug_1;
	hship shipArmouredTug_2;
	hship playerShip = iShip.FindPlayerShip();
	bool local_6 = false;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	int convoResponse;
	
	debug Debug.PrintString( "iAct2.CoyoteFreelancerEncounter : Starting freelncer encounter, this is Story sequence 2.120 \n" );
	
	schedule
	{
		every 3.0:
		{
			if ( !local_6 && !local_9 )
			{
				local_6 = true;
				debug Debug.PrintString( "iAct2.CoyoteFreelancerEncounter : Creating intercept group to meet player....\n" );
				shipPuffinArmed = iShip.Create( "ini:/sims/ships/independent/puffin_armed", iShipCreation.ShipName( "Independent", -1 ) );
				shipArmouredTug_0 = iShip.Create( "ini:/sims/ships/independent/armoured_tug", iShipCreation.ShipName( "Independent", -1 ) );
				shipArmouredTug_1 = iShip.Create( "ini:/sims/ships/independent/armoured_tug", iShipCreation.ShipName( "Independent", -1 ) );
				shipArmouredTug_2 = iShip.Create( "ini:/sims/ships/independent/armoured_tug", iShipCreation.ShipName( "Independent", -1 ) );
				Group.AddSim( group, shipPuffinArmed );
				iPilotSetup.GenericAggressive( shipPuffinArmed );
				iSim.SetFaction( shipPuffinArmed, iFaction.Find( iUtilities.FromAllegianceEnum( A_Independent ) ) );
				Sim.PlaceNear( shipPuffinArmed, playerShip, Global.Float( "g_player_sensor_range" ) );
				Sim.SetCullable( shipPuffinArmed, false );
				Group.AddSim( group, shipArmouredTug_0 );
				iPilotSetup.GenericAggressive( shipArmouredTug_0 );
				iSim.SetFaction( shipArmouredTug_0, iFaction.Find( iUtilities.FromAllegianceEnum( A_Independent ) ) );
				Sim.SetCullable( shipArmouredTug_0, false );
				Group.AddSim( group, shipArmouredTug_1 );
				iPilotSetup.GenericAggressive( shipArmouredTug_1 );
				iSim.SetFaction( shipArmouredTug_1, iFaction.Find( iUtilities.FromAllegianceEnum( A_Independent ) ) );
				Sim.SetCullable( shipArmouredTug_1, false );
				Group.AddSim( group, shipArmouredTug_2 );
				iPilotSetup.GenericAggressive( shipArmouredTug_2 );
				iSim.SetFaction( shipArmouredTug_2, iFaction.Find( iUtilities.FromAllegianceEnum( A_Independent ) ) );
				Sim.SetCullable( shipArmouredTug_2, false );
				iFormation.LineAbreast( group, 70.0, true );
				Task.Sleep( Task.Current(), 8.0 );
				iAI.GiveApproachOrder( Group.Leader( group ), playerShip );
				
				do
				{
					if ( Sim.DistanceBetween( iShip.Cast( Group.Leader( group ) ), playerShip ) > 500000.0 )
					{
						debug Debug.PrintString( "iAct2.CoyoteFreelancerEncounter : player has lost the freelancer intercept group.\n" );
						Group.Destroy( group, true );
						local_6 = false;
						local_7 = false;
					}
					else if ( (Sim.DistanceBetween( iShip.Cast( Group.Leader( group ) ), playerShip ) < 50000.0) && (local_7 == 0) )
					{
						iConversation.Begin();
						iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_looks_like_the_locals_have_spotted_us" );
						iConversation.End();
						local_7 = true;
					}
					else if ( (Sim.DistanceBetween( iShip.Cast( Group.Leader( group ) ), playerShip ) < 10000.0) && (local_8 == 0) )
					{
						debug Debug.PrintString( "iAct2.CoyoteFreelancerEncounter : freelancers are in hailing range of the player, starting comunication...\n" );
						local_8 = true;
						iConversation.Begin();
						iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_ho_there_stranger_heave_too" );
						iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_they_dont_look_like_marauders_perhaps_we_should_do_as_they_say" );
						iConversation.End();
					}
					else if ( iAI.IsOrderComplete( Group.Leader( group ) ) )
					{
						iConversation.Begin();
						iConversation.AddResponse( "a2_master_option_cal_im_looking_for_assistance", "a2_master_dialogue_cal_im_looking_for_assistance" );
						iConversation.AddResponse( "a2_master_dialogue_cal_i_wish_to_speak_to_your_commander", "a2_master_dialogue_cal_i_wish_to_speak_to_your_commander" );
						iConversation.AddResponse( "a2_master_dialogue_cal_dont_mind_me", "a2_master_dialogue_cal_dont_mind_me" );
						convoResponse = iConversation.Ask( Group.Leader( group ), "", "a2_master_dialogue_freelancer_what_is_your_business_here" );
						
						if ( convoResponse == 1 )
						{
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_join_the_club_pal" );
							iConversation.Say( Group.NthSim( group, 1 ), "", "a2_master_dialogue_freelancer_sright_we_aint_soliders" );
							iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_freddie_jackson" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_freddie_jackson_knows_more_about_the_goings_on_around_here" );
							iConversation.Say( Group.NthSim( group, 2 ), "", "a2_master_dialogue_freelancer_you_aint_just_gonna_let_him_go" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_shoot_elmo_if_we_search_everything" );
							iConversation.End();
							local_6 = false;
							local_9 = true;
							Global.SetBool( "g_act2_referred_to_hoffer", true );
						}
						else if ( convoResponse == 2 )
						{
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_shoot_listen_to_this_feller_cleitus" );
							iConversation.Say( Group.NthSim( group, 1 ), "", "a2_master_dialogue_freelancer_sure_think_he_does_elmo" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_well_stranger_i_think_your_mistaken" );
							iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_freddie_jackson" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_freddie_jackson_knows_more_about_the_goings_on_around_here" );
							iConversation.End();
							local_6 = false;
							local_9 = true;
							Global.SetBool( "g_act2_referred_to_hoffer", true );
						}
						else if ( convoResponse == 3 )
						{
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_just_you_wait_one_minute_boy" );
							iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_well_erm" );
							iConversation.Say( Group.NthSim( group, 1 ), "", "a2_master_dialogue_freelancer_ah_shoot_elmo_he_aint_not_marauder" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_guess_yer_lucky_boy" );
							iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_freddie_jackson" );
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_freelancer_freddie_jackson_knows_more_about_the_goings_on_around_here" );
							iConversation.End();
							local_6 = false;
							local_9 = true;
							Global.SetBool( "g_act2_referred_to_hoffer", true );
						}
						
						iAI.GiveApproachOrder( Group.Leader( group ), iHabitat.Nearest( iMapEntity.SystemHabitats(), Group.Leader( group ) ) );
						iObjectives.Add( "a2_master_objectives_talk_jackson" );
					}
				}
				while ( local_6 );
			}
			else
			{
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( Sim.DistanceBetween( iShip.Cast( Group.Leader( group ) ), playerShip ) < 350000.0 );
				
				Group.Destroy( group, true );
				return;
			}
		}
	}
}

task JacksonEncounterSetup()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	int local_2;
	hship playerShip = iShip.FindPlayerShip();
	hmapentity jacksonsYard = iMapEntity.FindByName( "Jackson's Yard" );
	int local_5;
	int convoResponse;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/coyote" ) )
	{
		debug Debug.PrintString( "iActTwo.JacksonEncounterSetup : task is trying to start outside of Coyote, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	debug Debug.PrintString( "iActTwo.JacksonEncounterSetup : Commencing task to encounter Frederick Jackson.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			do
			{
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Sim.DistanceBetween( playerShip, jacksonsYard ) > 7000.0 );
			
			iConversation.Begin();
			iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_your_reputation_proceeds_you_my_johnson" );
			iConversation.End();
			Global.CreateBool( "g_act2_at_jacksons", 1, true );
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				debug Debug.PrintString( " iAct2.JacksonEncounterSetup : waiting for the player to dock to Jackson's Yard, sleeping \n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( !iSim.IsDockedToStructure( playerShip, jacksonsYard ) );
			
			iSim.SetDockingLock( playerShip, jacksonsYard, true );
			
			do
			{
				iConversation.Begin();
				
				if ( Global.Bool( "g_jackson_question_1" ) == 0 )
				{
					iConversation.AddResponse( "a2_master_option_cal_how_come_you_know_so_much_about_me", "a2_master_dialogue_cal_how_come_you_know_so_much_about_me" );
				}
				else
				{
					iConversation.AddResponse( "a2_master_option_cal_how_do_my_current_actions_affect_the_badlands", "a2_master_dialogue_cal_how_do_my_current_actions_affect_the_badlands" );
				}
				
				if ( Global.Bool( "g_jackson_question_2" ) == 0 )
				{
					iConversation.AddResponse( "a2_master_option_cal_are_you_going_to_help_the_league", "a2_master_dialogue_cal_are_you_going_to_help_the_league" );
				}
				else
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_mca_org", "a2_master_dialogue_cal_tell_me_about_mca_org" );
				}
				
				if ( Global.Bool( "g_jackson_question_3" ) == 0 )
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_coyote", "a2_master_dialogue_cal_tell_me_about_coyote" );
				}
				else
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_coyote_again", "a2_master_dialogue_cal_tell_me_about_coyote_again" );
				}
				
				if ( Global.Bool( "g_jackson_question_4" ) == 0 )
				{
					iConversation.AddResponse( "a2_master_option_cal_how_come_you_speak_for_coyote", "a2_master_dialogue_cal_how_come_you_speak_for_coyote" );
				}
				
				iConversation.AddResponse( "a2_master_dialogue_cal_bye_fred", "a2_master_dialogue_cal_bye_fred" );
				
				if ( !local_8 )
				{
					convoResponse = iConversation.Ask( none, "frederick_jackson", "a2_master_dialogue_jackson_welcome_mr_johnston" );
				}
				else
				{
					convoResponse = iConversation.Ask( none, "frederick_jackson", "a2_master_dialogue_jackson_anything_else" );
				}
				
				if ( (convoResponse == 1) && (Global.Bool( "g_jackson_question_1" ) == 0) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_i_have_a_scholars_interest_in_the_badlands" );
					Global.SetBool( "g_jackson_question_1", true );
					local_8 = true;
				}
				else if ( (convoResponse == 1) && (Global.Bool( "g_jackson_question_1" ) == 1) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_because_times_are_changing" );
					local_8 = true;
				}
				else if ( (convoResponse == 2) && (Global.Bool( "g_jackson_question_2" ) == 0) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_yes_and_no" );
					Global.SetBool( "g_jackson_question_2", true );
					local_8 = true;
				}
				else if ( (convoResponse == 2) && (Global.Bool( "g_jackson_question_2" ) == 1) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_the_mca_are_the_mwari_colonial" );
					local_8 = true;
				}
				else if ( convoResponse == 3 )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_coyote_is_the_least_developed" );
					Global.SetBool( "g_jackson_question_3", true );
					local_8 = true;
				}
				else if ( (convoResponse == 4) && (Global.Bool( "g_jackson_question_4" ) == 0) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_not_through_any_design_on_my_part" );
					Global.SetBool( "g_jackson_question_4", true );
					local_8 = true;
				}
				else if ( ((convoResponse == 4) && (Global.Bool( "g_jackson_question_4" ) == 1)) || (convoResponse == 5) )
				{
					iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_jackson_ok_goodbye_cal_and_before_i_forget" );
					
					if ( Global.Bool( "g_jackson_question_2" ) == 0 )
					{
						iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_fred_by_the_way" );
					}
					
					local_7 = true;
				}
				
				iConversation.End();
			}
			while ( !local_7 );
			
			iObjectives.SetState( "a2_master_objectives_talk_jackson", OS_Succeeded );
			Global.SetBool( "g_act2_spoken_to_hoffer", true );
			iSim.SetDockingLock( playerShip, jacksonsYard, false );
			iShip.UndockSelf( playerShip );
			
			do
			{
				debug Debug.PrintString( " iAct2.JacksonEncounterSetup : waiting for the player to undock from Jackson's Yard, sleeping \n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( iSim.IsDockedToStructure( playerShip, jacksonsYard ) );
			
			Global.Destroy( "g_act2_at_jacksons" );
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_i_recognise_that_voice" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_what_voice" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_frederick_jackson_i_recognise_his_voice" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_where" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_dunno_but_it_must_have_been_a_long_long_time_ago" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_great_so_now_i_gotta_listen_to_the_ramblings_of_a_geriatric" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_i_aint_geriatric_and_i_aint_no_toaster" );
			iConversation.End();
			State.SetProgress( taskState, 2 );
		
		case 2:
			debug Debug.PrintString( "iActTwo.JacksonencounterSetup : Closing down Frederick Jackson encounter script\n" );
			State.Destroy( Task.Current() );
	}
}

task local_function_2()
{
	list localList_0;
	list localList_1;
	int ii;
	hmapentity mapEntity;
	hship playerShip = iShip.FindPlayerShip();
	hmapentity eurekaSystemAdministration = iMapEntity.FindByName( "Eureka System Administration" );
	bool local_6;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	bool local_10 = false;
	bool local_11 = false;
	int itemCount;
	int convoResponse;
	
	do
	{
		Task.Sleep( Task.Current(), 1.0 );
	}
	while ( iDirector.IsBusy() );
	
	schedule
	{
		every 2.0:
		{
			debug Debug.PrintString( "iActTwo.ThirdWayMessages : checking if there are any third way bases nearby.....\n" );
			localList_0 = List.FromSet( iSim.SimsInRadiusFromSet( Set.FromList( Global.List( "g_active_location_list" ) ), playerShip, 30000.0, 8192 ) );
			itemCount = List.ItemCount( localList_0 );
			
			for ( ii = 0; ii < itemCount; ++ii )
			{
				mapEntity = iMapEntity.Cast( List.GetNth( localList_0, ii ) );
				debug Debug.PrintString( "iActTwo.ThirdWayMessages : Checking a habitat for allegiance\n" );
				
				if ( iHabitat.Allegiance( iHabitat.Cast( mapEntity ) ) == A_TheThirdWay )
				{
					if ( (List.Contains( localList_1, mapEntity ) == 0) && !( iMapEntity.Name( mapEntity ) == "Belial L-Point STC HQ" ) )
					{
						debug Debug.PrintString( "iActTwo.ThirdWayMessages : found a thirdway habitat near the player that hasn't given a warning/info....\n" );
						iConversation.Begin();
						
						if ( Global.Bool( "g_act2_third_way_provided_pilots" ) == 1 )
						{
							iConversation.End();
						}
						else if ( Global.Bool( "g_act2_need_pilots" ) == 1 )
						{
							debug Debug.PrintString( "iActTwo.ThirdWayMessages : Pilots are still needed and we ain't provided any yet...\n" );
							
							if ( iMapEntity.Name( mapEntity ) == "Eureka System Administration" )
							{
								debug Debug.PrintString( "iActTwo.ThirdWayMessages : this is the system admin and were inviting the player to dock\n" );
								iConversation.Say( mapEntity, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_go_away" );
								iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_just_a_damn_minute" );
								iConversation.Say( mapEntity, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_i_find_you_tone_insulting_and_offensive" );
								iConversation.End();
								local_6 = true;
							}
							else
							{
								switch ( Math.RandomInt( 1, 3 ) )
								{
									case 1:
										iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_1" );
										break;
									
									case 2:
										iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_2" );
										break;
									
									case 3:
										iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_3" );
										break;
								}
								
								iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_now_you_just_listen_here" );
								iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_erm_got_to_the_headquarters" );
								iConversation.End();
							}
						}
						else if ( Global.Bool( "g_act2_badlands_food_sorted" ) == 1 )
						{
							switch ( Math.RandomInt( 1, 3 ) )
							{
								case 1:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_1" );
									iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_ungrateful_sons_of_bitches" );
									break;
								
								case 2:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_2" );
									break;
								
								case 3:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_please_go_away_3" );
									break;
							}
							
							iConversation.End();
						}
						else
						{
							switch ( Math.RandomInt( 1, 3 ) )
							{
								case 1:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_get_lost_1" );
									break;
								
								case 2:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_get_lost_2" );
									break;
								
								case 3:
									iConversation.Say( mapEntity, iMapEntity.Name( mapEntity ), "a2_master_dialogue_third_way_get_lost_3" );
									break;
							}
							
							iConversation.End();
						}
						
						List.RemoveNth( localList_0, ii );
						List.AddHead( localList_1, mapEntity );
					}
					else debug Debug.PrintString( "iActTwo.ThirdWayMessage : player is near a third way base, but they've already given a warning to stay clear\n" );
				}
				else
				{
					debug Debug.PrintString( "iActTwo.ThirdWayMessager: Local base does not belong to the Third Way!!\n" );
					
					debug atomic
					{
						Debug.PrintString( "This base is: " );
						Debug.PrintString( iMapEntity.Name( mapEntity ) );
						Debug.PrintString( "\n" );
						Debug.PrintString( "And Belong to: " );
						Debug.PrintString( String.FromInt( iHabitat.Allegiance( iHabitat.Cast( mapEntity ) ) ) );
						Debug.PrintString( "\n" );
					}
				}
			}
			
			if ( iSim.IsDockedToStructure( playerShip, eurekaSystemAdministration ) )
			{
				if ( Global.Bool( "g_act2_third_way_provided_pilots" ) == 1 )
				{
					iConversation.Begin();
					iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_we_have_provided_you_with_pilots_to_defeat_the_marauders" );
					iConversation.End();
					iShip.UndockSelf( playerShip );
				}
				else if ( local_6 )
				{
					debug Debug.PrintString( "iActTwo.ThirdWayMessages : player docked after invite... doint conversation\n" );
					
					do
					{
						iConversation.Begin();
						iConversation.AddResponse( "a2_master_dialogue_cal_mwari_needs_third_way_pilots", "a2_master_dialogue_cal_mwari_is_where_the_decisive_battle_agaisnt_the_marauders" );
						
						if ( (local_9 == 1) && (local_8 == 0) )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_i_apoligise_for_my_harsh_words", "a2_master_dialogue_cal_i_apoligise_for_the_harshenss_of_my_words" );
						}
						else if ( local_8 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_im_sorry_for_offending_you", "a2_master_dialogue_cal_im_sorry_for_offending_you" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_only_the_third_way_can_help", "a2_master_dialogue_cal_only_the_third_way_can_help_the_sitation" );
						}
						
						if ( local_9 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_your_arrogance_is_getting_us_nowhere_1", "a2_master_dialogue_cal_your_arrogance_is_getting_us_nowhere_2" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_third_way", "a2_master_dialogue_cal_tell_me_about_the_third_way" );
						}
						
						iConversation.AddResponse( "a2_master_dialogue_cal_goodbye", "a2_master_dialogue_cal_goodbye" );
						convoResponse = iConversation.Ask( none, "Third_way_elders", "a2_master_dialogue_third_way_elders_so_what_do_you_wish_to_discuss" );
						
						if ( convoResponse == 1 )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_is_that_so_a_little_respect" );
						}
						else if ( (convoResponse == 2) && ((local_9 == 1) && ((local_8 == 1) && !local_11)) )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_this_is_perhaps_appreciated" );
							local_11 = true;
						}
						else if ( (convoResponse == 2) && (local_8 == 0) )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_only_to_be_expected" );
							local_8 = true;
						}
						else if ( convoResponse == 2 )
						{
							iConversation.End();
							iConversation.OneLiner( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_you_are_an_niteresting_character_for_a_lower_caste" );
							local_10 = true;
							local_function_1( 100 );
							Global.SetBool( "g_act2_third_way_provided_pilots", true );
						}
						else if ( (convoResponse == 3) && (local_9 == 0) )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_im_listening_then_mr_johnstone_just_hope_its_worthwhile" );
							local_9 = true;
						}
						else if ( (convoResponse == 3) && (local_9 == 1) )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_none_of_your_business" );
						}
						else if ( convoResponse == 4 )
						{
							iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_good_riddance" );
							local_10 = true;
						}
						
						iConversation.End();
					}
					while ( !local_10 && iSim.IsDockedToStructure( playerShip, eurekaSystemAdministration ) );
					
					iShip.UndockSelf( playerShip );
				}
				else
				{
					iConversation.Begin();
					iConversation.Say( none, "Third_Way_Elders", "a2_master_dialogue_third_way_elders_how_dare_you_dock_to_this_station" );
					iConversation.End();
					iShip.UndockSelf( playerShip );
				}
			}
			else
			{
				local_7 = false;
				local_8 = false;
				local_9 = false;
				local_10 = false;
			}
		}
	}
}

task EurekaStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState;
	hship playerShip = iShip.FindPlayerShip();
	hmapentity belialLPointSTCHQ = iMapEntity.FindByName( "Belial L-Point STC HQ" );
	int convoResponse = 0;
	bool local_5 = false;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/eureka" ) )
	{
		debug Debug.PrintString( "iActTwo.EurekaStoryScript : task is trying to start outside of Eureka, quitting\n" );
		return;
	}
	
	taskState = State.Find( currentTask );
	
	if ( taskState == false )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_eureka_state", taskState );
		Global.CreateInt( "g_eureka_conversation_number", 2, 1 );
	}
	
	debug Debug.PrintString( "iActTwo.EurekaStoryScript : Commencing  Eureka story script\n" );
	start local_function_2();
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			Global.SetBool( "g_act2_eureka_visited", true );
			iSystemCutScene.Eureka();
			
			do
			{
				Task.Sleep( Task.Current(), 0.10 );
			}
			while ( !iDirector.IsBusy() );
			
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_eureka_hmm_eureka" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_c1_eureka_the" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_eureka_yeh" );
			iConversation.End();
			
			do
			{
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( iDirector.IsBusy() );
			
			do
			{
				debug Debug.PrintString( "iActTwo.EurekaStoryScript - players is not near Belial traffic control station, sleeping\n" );
				Task.Sleep( Task.Current(), 0.10 );
			}
			while ( Sim.DistanceBetween( playerShip, belialLPointSTCHQ ) > 30000.0 );
			
			iConversation.Begin();
			iConversation.AddResponse( "a2_master_dialogue_cal_looking_for_work", "a2_master_dialogue_cal_looking_for_work" );
			iConversation.AddResponse( "a2_master_option_cal_representative_from_hoffers_wake", "a2_master_dialogue_cal_representative_from_hoffers_wake" );
			iConversation.AddResponse( "a2_master_dialogue_cal_just_wandering", "a2_master_dialogue_cal_just_wandering" );
			convoResponse = iConversation.Ask( none, "a2_master_stc_control", "a2_master_dialogue_stc_hi_there_traffic_control" );
			
			if ( convoResponse == 1 )
			{
				iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_you_might_be_a_little_dissapointed" );
			}
			else if ( convoResponse == 2 )
			{
				iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_i_think_you_are_in_the_wrong_system" );
			}
			else if ( convoResponse == 3 )
			{
				iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_the_without_being_rude" );
			}
			
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_the_third_way" );
			iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_youve_never_heard" );
			iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_the_third_way_are" );
			iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_enjoy_your_stay_in_the_eureka_system" );
			iConversation.End();
			Global.CreateBool( "g_had_lucifuge_hint", 2, true );
			local_5 = true;
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				if ( iSim.ActiveWorld() == "map:/geog/badlands/eureka" )
				{
					if ( Sim.DistanceBetween( playerShip, belialLPointSTCHQ ) < 30000.0 )
					{
						if ( local_5 )
						{
							debug Debug.PrintString( "iActTwo.EurekaStoryScript : player is close to Belil L-point, but traffic control has spoken this visit, sleeping for five minutes...\n" );
							Task.Sleep( Task.Current(), 300.0 );
							local_5 = false;
						}
						else
						{
							debug Debug.PrintString( "iActTwo.EurekaStoryScript : player is close to Belil L-point, and he has not spoken this time.....\n" );
							
							switch ( Global.Int( "g_eureka_conversation_number" ) )
							{
								case 1:
									debug Debug.PrintString( "iActTwo.EurekaStoryScript - Giving player first return eureka conversation\n" );
									iConversation.Begin();
									iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_more_about_the_third_way", "a2_master_dialogue_cal_tell_me_more_about_the_third_way" );
									iConversation.AddResponse( "a2_master_dialogue_cal_why_are_you_so_chatty", "a2_master_dialogue_cal_why_are_you_so_chatty" );
									iConversation.AddResponse( "a2_master_dialogue_cal_no_im_fine", "a2_master_dialogue_cal_no_im_fine" );
									convoResponse = iConversation.Ask( none, "a2_master_stc_control", "a2_master_dialogue_stc_why_hello_again" );
									
									if ( convoResponse == 1 )
									{
										iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_a_strange_bunch" );
										iConversation.End();
										Global.SetInt( "g_eureka_conversation_number", Global.Int( "g_eureka_conversation_number" ) + 1 );
									}
									else if ( convoResponse == 2 )
									{
										iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_just_enjoy_the_company" );
										iConversation.End();
										Global.SetInt( "g_eureka_conversation_number", Global.Int( "g_eureka_conversation_number" ) + 1 );
									}
									else if ( convoResponse == 3 )
									{
										iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_be_seing_you2" );
										iConversation.End();
									}
									
									break;
								
								case 2:
									debug Debug.PrintString( "iActTwo.EurekaStoryScript - Giving player second return eureka conversation\n" );
									iConversation.Begin();
									iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_hello_there_again_back_for_another_visit" );
									Global.SetInt( "g_eureka_conversation_number", Global.Int( "g_eureka_conversation_number" ) + 1 );
									iConversation.End();
									break;
								
								case 3:
									debug Debug.PrintString( "iActTwo.EurekaStoryScript - Giving player third return eureka conversation\n" );
									iConversation.Begin();
									iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_hello_again" );
									iConversation.End();
									Global.SetInt( "g_eureka_conversation_number", Global.Int( "g_eureka_conversation_number" ) + 1 );
									break;
								
								case 4:
									debug Debug.PrintString( "iActTwo.EurekaStoryScript - Giving player fourth return eureka conversation\n" );
									iConversation.Begin();
									iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_my_captain_johnson_you_seem_to" );
									Global.SetInt( "g_eureka_conversation_number", Global.Int( "g_eureka_conversation_number" ) + 1 );
									iConversation.End();
									break;
								
								default:
									debug Debug.PrintString( "iActTwo.EurekaStoryScript - Giving player fifth return eureka conversation\n" );
									iConversation.Begin();
									iConversation.Say( none, "a2_master_stc_control", "a2_master_dialogue_stc_welcome_back_commander_johnston" );
									iConversation.End();
									break;
							}
						}
					}
					else
					{
						local_5 = false;
					}
				}
				
				Task.Sleep( Task.Current(), 13.0 );
			}
			while ( Global.Bool( "g_act2_need_pilots" ) == 0 );
			
			State.SetProgress( taskState, 2 );
		
		case 2:
			while ( Global.Bool( "g_eureka_food_supplies" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.EurekaStoryScript : waiting for the player to complete act2 mission 03 - trouble at the ranch, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			debug Debug.PrintString( "iActTwo.EurekaStoryScript : the player has compelted act02 mission 03 - progressing to next bit...\n" );
			State.SetProgress( taskState, 3 );
		
		case 3:
			while ( Global.Bool( "g_act2_third_way_provided_pilots" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.eureakStoryScript : Waiting for the third way to pleadge pilots to the player cause, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			State.Destroy( Task.Current() );
			Global.Destroy( "g_eureka_conversation_number" );
			Global.SetBool( "g_eureka_script_complete", true );
	}
	
	debug Debug.PrintString( "iAct2.Eurekascript: Exiting eureka task....\n" );
}

task local_function_4( int param_0_ )
{
	hship playerShip = iShip.FindPlayerShip();
	hhabitat daruelSalam = iHabitat.FindByName( "Daru el-Salam" );
	bool local_2 = true;
	int convoResponse;
	bool local_4 = false;
	bool local_5 = false;
	bool local_6 = false;
	bool local_7 = false;
	bool local_8 = false;
	
	while ( 1 )
	{
		if ( iSim.IsDockedToStructure( playerShip, daruelSalam ) )
		{
			switch ( param_0_ )
			{
				case 1:
					while ( local_7 == 0 )
					{
						iConversation.Begin();
						
						if ( local_4 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_oman", "a2_master_dialogue_cal_tell_me_about_the_oman" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_oman_again", "a2_master_dialogue_cal_tell_me_about_the_oman_again" );
						}
						
						if ( local_5 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_have_you_had_much_marauder_trouble_recently", "a2_master_dialogue_cal_have_you_had_much_marauder_trouble_recently" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_how_did_you_deal_with_the_marauders", "a2_master_dialogue_cal_how_did_you_deal_with_the_marauders" );
						}
						
						iConversation.AddResponse( "a2_master_dialogue_cal_any_problems_i_can_help_you_with", "a2_master_dialogue_cal_any_problems_i_can_help_you_with" );
						iConversation.AddResponse( "a2_master_dialogue_cal_bye", "a2_master_dialogue_cal_bye" );
						convoResponse = iConversation.Ask( none, "Abdul-Hadi", "a2_master_dialogue_abdul_welcome_back_Cal_johnston" );
						
						if ( (convoResponse == 1) && (local_4 == 0) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_are_descendents_of_the_bedoin" );
							iConversation.End();
							local_4 = true;
						}
						else if ( (convoResponse == 1) && (local_4 == 1) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_are_descendents_of_the_bedoin" );
							iConversation.End();
						}
						else if ( (convoResponse == 2) && (local_5 == 0) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_there_have_been_marauder_incidents_but_we_have_dealt_with_them" );
							iConversation.End();
							local_5 = true;
						}
						else if ( (convoResponse == 2) && (local_5 == 1) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_use_their_own_tactics_agaisnt_them" );
							iConversation.End();
						}
						else if ( convoResponse == 3 )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_we_have_nothing_requiring_your_skills_cal_johnston" );
							iConversation.End();
							
							if ( 0 == Global.Exists( "g_added_gm_batch_6" ) )
							{
								iGMTracker.AddGMEnum( 16 );
								iGMTracker.SetGMRange( 16, 16 );
								Global.CreateBool( "g_added_gm_batch_6", 1, true );
							}
						}
						else if ( convoResponse == 4 )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_then_farewell_cal_johnston_peace_be_with_you" );
							iConversation.End();
							local_7 = true;
						}
					}
					
					break;
				
				case 2:
					while ( local_7 == 0 )
					{
						iConversation.Begin();
						
						if ( local_4 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_oman", "a2_master_dialogue_cal_tell_me_about_the_oman" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_oman_again", "a2_master_dialogue_cal_tell_me_about_the_oman_again" );
						}
						
						if ( local_5 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_have_you_had_much_marauder_trouble_recently", "a2_master_dialogue_cal_have_you_had_much_marauder_trouble_recently" );
						}
						else
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_how_did_you_deal_with_the_marauders", "a2_master_dialogue_cal_how_did_you_deal_with_the_marauders" );
						}
						
						if ( local_6 == 0 )
						{
							iConversation.AddResponse( "a2_master_dialogue_cal_we_need_pilots_to_fight_the_Marauders", "a2_master_dialogue_cal_the_league_and_the_marauders" );
						}
						
						iConversation.AddResponse( "a2_master_dialogue_cal_bye", "a2_master_dialogue_cal_bye" );
						convoResponse = iConversation.Ask( none, "Abdul-Hadi", "a2_master_dialogue_abdul_welcome_back_Cal_johnston" );
						
						if ( (convoResponse == 1) && (local_4 == 0) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_are_descendents_of_the_bedoin" );
							iConversation.End();
							local_4 = true;
						}
						else if ( (convoResponse == 1) && (local_4 == 1) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_are_descendents_of_the_bedoin" );
							iConversation.End();
						}
						else if ( (convoResponse == 2) && (local_5 == 0) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_there_have_been_marauder_incidents_but_we_have_dealt_with_them" );
							iConversation.End();
							local_5 = true;
						}
						else if ( (convoResponse == 2) && (local_5 == 1) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_we_use_their_own_tactics_agaisnt_them" );
							iConversation.End();
						}
						else if ( (convoResponse == 3) && (local_6 == 0) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_abdul_i_already_have_heard_rumours_of_such_an_action" );
							
							if ( 0 == Global.Exists( "g_added_gm_batch_7" ) )
							{
								iGMTracker.AddGMEnum( 17 );
								iGMTracker.AddGMEnum( 19 );
								iGMTracker.SetGMRange( 17, 19 );
								Global.CreateBool( "g_added_gm_batch_7", 1, true );
							}
							
							local_function_1( 100 );
							local_6 = true;
							local_8 = true;
							iConversation.End();
						}
						else if ( (convoResponse == 4) || (convoResponse == 3) )
						{
							iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_then_farewell_cal_johnston_peace_be_with_you" );
							iConversation.End();
							local_7 = true;
						}
					}
					
					break;
			}
		}
		else
		{
			if ( local_8 == 1 )
			{
				Global.SetBool( "g_oman_provided_pilots", false );
			}
			
			Task.Sleep( Task.Current(), 10.0 );
		}
	}
}

set local_function_40( set localSet_0_, int param_1_ )
{
	set localSet_1;
	list localList = List.FromSet( localSet_0_ );
	int itemCount = List.ItemCount( localList );
	int ii;
	
	for ( ii = 0; ii < itemCount; ++ii )
	{
		if ( iHabitat.Allegiance( iHabitat.Cast( List.GetNth( localList, ii ) ) ) == param_1_ )
		{
			Set.Add( localSet_1, Sim.Cast( List.GetNth( localList, ii ) ) );
		}
	}
	
	return localSet_1;
}

task KompiraStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	int local_2;
	bool local_3 = false;
	hship playerShip = iShip.FindPlayerShip();
	set localSet;
	hgroup group;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	bool local_10 = false;
	bool local_11 = false;
	int convoResponse;
	hhabitat daruelSalam;
	bool local_14 = false;
	bool local_15 = false;
	htask local_16;
	
	if ( Global.Bool( "g_skip_to_specific" ) == 1 )
	{
		iAct2Mission02.Main();
	}
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/kompira" ) )
	{
		debug Debug.PrintString( "iActTwo.KompiraStoryScript : trying to start script outside of kompira system, quitting\n" );
		return;
	}
	
	localSet = iHabitat.FilterOnAllegiance( iMapEntity.SystemHabitats(), A_TheOman );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_kompira_state", taskState );
	}
	
	debug Debug.PrintString( "iActTwo.KompiraStoryScript : Commencing  Kompira story script\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			iSystemCutScene.Kompira();
			
			do
			{
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( !iDirector.IsBusy() );
			
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_me_and_your_grandma_didnt_spend_much_time_here" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_ever_thought_of_a_career_as_a_travel_guide" );
			iConversation.End();
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				while ( !local_3 )
				{
					if ( Sim.DistanceBetween( playerShip, iHabitat.Nearest( localSet, playerShip ) ) < 300000.0 )
					{
						if ( !local_7 && !local_15 )
						{
							debug Debug.PrintString( "iActTwo.KompiraStoryScript : Player hs approached an Oman station - intercepting....\n" );
							group = local_function_3( playerShip );
							local_7 = true;
							iAI.GiveApproachOrder( group, playerShip );
							
							while ( local_7 )
							{
								if ( (Sim.DistanceBetween( Group.Leader( group ), playerShip ) > 500000.0) && !iShip.IsInLDS( iShip.Cast( Group.Leader( group ) ) ) )
								{
									debug Debug.PrintString( "iAct2.KompiraStoryScript : player has lost the Oman intercept group.\n" );
									Group.Destroy( group, true );
									local_7 = false;
									local_8 = false;
									local_9 = false;
								}
								else if ( (Sim.DistanceBetween( Group.Leader( group ), playerShip ) < 50000.0) && (local_8 == 0) )
								{
									if ( local_11 )
									{
										iConversation.OneLiner( none, "name_clay", "" );
										local_8 = true;
									}
									else
									{
										iConversation.OneLiner( none, "name_clay", "a2_master_dialogue_clay_looks_like_we_got_company_again" );
										local_8 = true;
									}
								}
								else if ( (Sim.DistanceBetween( Group.Leader( group ), playerShip ) < 10000.0) && ((local_9 == 0) && !local_15) )
								{
									debug Debug.PrintString( "iActTwo.KompiraStoryScript : oman are in hailing range of the player, starting comunication...\n" );
									local_9 = true;
									iConversation.Begin();
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_oman_you_are_passing_through_oman_territory" );
									
									if ( local_11 )
									{
										iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_we_better_do_as_these_guys_say" );
									}
									
									iConversation.End();
								}
								else if ( iAI.IsOrderComplete( Group.Leader( group ) ) || ((Sim.DistanceBetween( Group.Leader( group ), playerShip ) < 1000.0) && !local_15) )
								{
									if ( local_11 )
									{
										iConversation.OneLiner( Group.Leader( group ), "", "a2_master_dialogue_oman_ah_we_have_heard" );
										local_7 = false;
										local_3 = true;
									}
									else
									{
										iConversation.Begin();
										iConversation.AddResponse( "a2_master_option_cal_im_looking_for_assistance", "a2_master_dialogue_cal_im_looking_for_assistance" );
										iConversation.AddResponse( "a2_master_dialogue_cal_i_wish_to_speak_to_your_commander", "a2_master_dialogue_cal_i_wish_to_speak_to_your_commander" );
										iConversation.AddResponse( "a2_master_dialogue_cal_dont_mind_me", "a2_master_dialogue_cal_dont_mind_me" );
										convoResponse = iConversation.Ask( Group.Leader( group ), "", "a2_master_dialogue_oman_what_is_your_business_here" );
										
										if ( convoResponse == 1 )
										{
											iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_oman_you_must_speak_with_our_leader" );
											iConversation.End();
											local_7 = false;
											local_3 = true;
										}
										else if ( convoResponse == 2 )
										{
											iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_oman_very_well_you_are_clearly_not_a_marauder" );
											iConversation.End();
											local_7 = false;
											local_3 = true;
										}
										else if ( convoResponse == 3 )
										{
											iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_oman_very_well_but_be_warned_that_the_oman_do_not_tolerate" );
											iConversation.End();
											iAI.GiveApproachOrder( group, iHabitat.Nearest( localSet, playerShip ) );
											Task.Sleep( Task.Current(), 10.0 );
											iConversation.Begin();
											iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_you_idiot" );
											iConversation.End();
											local_15 = true;
											local_7 = false;
										}
									}
								}
								else
								{
									debug Debug.PrintString( "iActTwo.KompiraStoryScript : Oman intercept group is active, but no events of interest have taken place, sleeping\n" );
									Task.Sleep( Task.Current(), 10.0 );
								}
							}
						}
						else debug Debug.PrintString( "iActTwo.KompiraStoryScripy : Player has approached an oman station, but an intercept is already active...\n" );
					}
					else
					{
						debug Debug.PrintString( "iActTwo.KompiraStoryScript : Player is nowhere near an oman station, sleeping....\n" );
						Task.Sleep( Task.Current(), 2.0 );
					}
				}
				
				do
				{
					if ( (Sim.Group( iShip.CurrentTarget( playerShip ) ) == group) && ((iAI.CurrentOrderType( playerShip ) == OT_Formate) || (iAI.CurrentOrderType( playerShip ) == OT_Approach)) )
					{
						local_14 = true;
					}
					else
					{
						debug Debug.PrintString( "iActTwo.KompiraStoryScript : waiting for player to give order to formate or approahc one of the oman ships\n" );
						Task.Sleep( Task.Current(), 2.0 );
					}
				}
				while ( local_14 == 0 );
				
				daruelSalam = iHabitat.FindByName( "Daru el-Salam" );
				iRangeCheck.AddTrafficException( daruelSalam );
				debug Debug.PrintString( "iAct2.kompirascript: Given approach to HQ........\n" );
				iAI.GiveApproachOrder( group, daruelSalam );
				
				do
				{
					debug Debug.PrintString( "iAct2.kompirascript: waiting to arrive at daru el salam......." );
					Task.Sleep( Task.Current(), 2.0 );
				}
				while ( !iAI.IsOrderComplete( group ) && (Sim.DistanceBetween( Group.Leader( group ), daruelSalam ) > 100000.0) );
				
				Task.Sleep( Task.Current(), 2.0 );
				local_7 = false;
				local_8 = false;
				local_9 = false;
				local_11 = true;
			}
			while ( Sim.DistanceBetween( playerShip, daruelSalam ) > 100000.0 );
			
			State.SetProgress( taskState, 2 );
		
		case 2:
			do
			{
				debug Debug.PrintString( "iActTwo.KompiraStoryScript : waiting for the player to approach Daru el-Salam\n" );
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( Sim.DistanceBetween( playerShip, daruelSalam ) > 8000.0 );
			
			iConversation.Begin();
			iConversation.Say( daruelSalam, "", "a2_master_dialogue_main_oman_welcome_to_daru_el_salam" );
			iConversation.End();
			State.SetProgress( taskState, 3 );
		
		case 3:
			while ( !local_10 )
			{
				if ( !iSim.IsDockedToStructure( playerShip, daruelSalam ) )
				{
					debug Debug.PrintString( "iActTwo.KompiraStoryScript : Waiting for the player to dock to Daru el-Salam\n" );
					Task.Sleep( Task.Current(), 1.0 );
				}
				else if ( Global.Bool( "g_act2_oman_test_offered" ) == 0 )
				{
					iConversation.Begin();
					iConversation.AddResponse( "a2_master_option_cal_hoffers_wake_needs_help", "a2_master_dialogue_cal_hoffers_wake_needs_help" );
					iConversation.AddResponse( "a2_master_option_cal_i_represent_the_league", "a2_master_dialogue_cal_i_represent_the_league" );
					convoResponse = iConversation.Ask( none, "Abdul-Hadi", "a2_master_dialogue_hadi_welcome_stranger_i_am_the_elder" );
					
					if ( convoResponse == 1 )
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_i_sympathise_but_we_all_have_troubles_with_the_marauders" );
					}
					else if ( convoResponse == 2 )
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_i_know_the_league_and_understand_your_plight_but_we_are_all_having_trouble" );
					}
					
					iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_we_do_not_have_the_stregnth" );
					iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_and_how_do_i_prove_myself_worthy" );
					iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_simple_my_friend_all_we_ask_of_you" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_i_was_afraid" );
					iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_the_oman_are_supposed_to_be_tough_cookies" );
					iConversation.AddResponse( "a2_master_dialogue_cal_yes_ill_take_the_test", "a2_master_dialogue_cal_yes_ill_take_the_test" );
					iConversation.AddResponse( "a2_master_dialogue_cal_not_just_yet", "a2_master_dialogue_cal_not_just_yet" );
					convoResponse = iConversation.Ask( none, "Abdul-Hadi", "a2_master_dialogue_hadi_do_you_wish_to_take_the_test" );
					
					if ( convoResponse == 1 )
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_very_good" );
						iConversation.End();
						local_10 = true;
					}
					else
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_as_you_wish" );
						iConversation.End();
						Global.SetBool( "g_act2_oman_test_offered", true );
						
						while ( iSim.IsDockedToStructure( playerShip, daruelSalam ) )
						{
							debug Debug.PrintString( "iActTwo.KompiraStoryScript : player has turned down oman initiation, waiting for player to unbdock from Daru el-salam\n" );
							Task.Sleep( Task.Current(), 5.0 );
						}
					}
				}
				else if ( Global.Bool( "g_act2_oman_test_offered" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.KompiraStoryScript : player has docked to the daru el salam, and has already been offered initiation test once, trying again\n" );
					iConversation.Begin();
					iConversation.AddResponse( "a2_master_dialogue_cal_yes_ill_take_the_test", "a2_master_dialogue_cal_yes_ill_take_the_test" );
					iConversation.AddResponse( "a2_master_dialogue_cal_not_just_yet", "a2_master_not_just_yet" );
					convoResponse = iConversation.Ask( none, "Abdul-Hadi", "a2_master_dialogue_hadi_welcome_back" );
					
					if ( convoResponse == 1 )
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_very_good" );
						iConversation.End();
						local_10 = true;
					}
					else
					{
						iConversation.Say( none, "Abdul-Hadi", "a2_master_dialogue_hadi_as_you_wish" );
						iConversation.End();
						Global.SetBool( "g_act2_oman_test_offered", true );
						
						while ( iSim.IsDockedToStructure( playerShip, daruelSalam ) )
						{
							debug Debug.PrintString( "iActTwo.KompiraStoryScript : player has turned down oman initiation, waiting for player to unbdock from Daru el-salam\n" );
							Task.Sleep( Task.Current(), 5.0 );
						}
					}
				}
			}
			
			iAct2Mission02.Main();
			State.SetProgress( taskState, 4 );
		
		case 4:
			while ( Global.Bool( "g_act2_oman_initiation_complete" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.KompiraStoryScript : waiting for the player to finish act 02 mission 02 -meet the oman, sleeping.\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			debug Debug.PrintString( "iActTwo.KompiraStoryScript : adding Oman trades to trade list...\n" );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 517, 1, 32, 1, 0 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 532, 1, 12, 1, 0 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 534, 1, 7, 1, 0 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 593, 1, 13, 1, 2 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "The Oman" ), 594, 1, 372, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 195, 1, 25, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "The Oman" ), 169, 1, 462, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 247, 1, 49, 2, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 571, 1, 19, 3, 3 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 555, 1, 38, 2, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 305, 1, 22, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 570, 1, 20, 1, 3 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 594, 1, 55, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 519, 1, 36, 1, 0 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 304, 1, 49, 3, 1 ) );
			iEmail.SendEmail( "a2_master_oman_sender", "a2_master_story2.12_mail_subject", "html:/text/act_2/act2_master_omanmail_2_2", true );
			
			if ( 0 == Global.Exists( "g_added_gm_batch_8" ) )
			{
				iGMTracker.AddGMEnum( 20 );
				iGMTracker.AddGMEnum( 21 );
				iGMTracker.AddGMEnum( 23 );
				iGMTracker.SetGMRange( 20, 23 );
				Global.CreateBool( "g_added_gm_batch_8", 1, true );
			}
			
			State.SetProgress( taskState, 5 );
		
		case 5:
			local_16 = start local_function_4( 1 );
			
			do
			{
				debug Debug.PrintString( "iActTwo.KompiraStoryScript : waiting for MCa needing pilots, sleeping.\n" );
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( Global.Bool( "g_act2_need_pilots" ) == 0 );
			
			State.SetProgress( taskState, 6 );
		
		case 6:
			if ( local_16 == false )
			{
				local_16 = start local_function_4( 2 );
			}
			else
			{
				Task.Halt( local_16 );
				local_16 = start local_function_4( 2 );
			}
			
			do
			{
				debug Debug.PrintString( "iActTwo.KompiraStoryScript : waiting for the Oman to provide pilots to the player\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			while ( Global.Bool( "g_oman_provided_pilots" ) == 0 );
			
			State.SetProgress( taskState, 7 );
		
		case 7:
			if ( local_16 == false )
			{
				local_16 = start local_function_4( 3 );
			}
			else
			{
				Task.Halt( local_16 );
				local_16 = start local_function_4( 3 );
			}
			
			do
			{
				debug Debug.PrintString( "iActTwo.KompiraStoryScript : just hanging around at end of script so player can talk to Abdul Hadi\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			while ( Global.Bool( "g_kompira_script_complete" ) == 0 );
	}
}

task FirefrostConversations()
{
	htask currentTask = Task.Current();
	int local_1;
	bool local_2 = false;
	hhabitat blueNoteSocial = iHabitat.Cast( iMapEntity.FindByNameInSystem( "Blue Note Social", "map:/geog/badlands/firefrost" ) );
	hhabitat firefrostSystemAdministration = iHabitat.Cast( iMapEntity.FindByNameInSystem( "Firefrost System Administration", "map:/geog/badlands/firefrost" ) );
	hship playerShip = iShip.FindPlayerShip();
	bool local_6 = true;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	bool local_10 = false;
	bool local_11 = false;
	bool local_12 = false;
	int convoResponse;
	
	do
	{
		if ( (Sim.DistanceBetween( playerShip, blueNoteSocial ) < 12000.0) && (local_2 == 0) )
		{
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_the_blue_note_social" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_save_it" );
			iConversation.End();
			local_2 = true;
		}
		else if ( iSim.IsDockedToStructure( iSim.Cast( playerShip ), iSim.Cast( blueNoteSocial ) ) )
		{
			iObjectives.SetState( "a2_master_objectives_firefrost1", OS_Succeeded );
			
			do
			{
				iConversation.Begin();
				
				if ( (Global.Bool( "g_act2_need_pilots" ) == 0) && (local_7 == 0) )
				{
					iConversation.AddResponse( "a2_master_option_cal_im_looking_for_help_in_fighting_the_marauders", "a2_master_dialogue_cal_im_looking_for_help_in_fighting_the_marauders" );
				}
				else if ( (Global.Bool( "g_act2_need_pilots" ) == 1) && (local_7 == 0) )
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_im_looking_to_recruit_pilots", "a2_master_dialogue_cal_im_looking_to_recruit_pilots" );
				}
				else
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_where_can_i_find_this_sherriff", "a2_master_dialogue_cal_where_can_i_find_this_sherriff" );
				}
				
				if ( !local_8 )
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_kind_of_quiet", "a2_master_dialogue_cal_a_freind_of_mine" );
				}
				else
				{
					iConversation.AddResponse( "a2_master_dialogue_cal_so_where_did_everyone_go", "a2_master_dialogue_cal_so_where_did_everyone_go" );
				}
				
				iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_firefrost", "a2_master_dialogue_cal_tell_me_about_firefrost" );
				iConversation.AddResponse( "a2_master_dialogue_cal_goodbye", "a2_master_dialogue_cal_goodbye" );
				
				if ( local_11 == 0 )
				{
					convoResponse = iConversation.Ask( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_welcome_to_the_blue_note_social_can_i_help_you" );
					local_11 = true;
				}
				else
				{
					convoResponse = iConversation.Ask( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_anything_else" );
				}
				
				if ( (convoResponse == 1) && (local_7 == 0) )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_wouldnt_know_about_that_speak_to_the_sherrif" );
					local_7 = true;
				}
				else if ( (convoResponse == 1) && (local_7 == 1) )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_the_sherriff_is_the_law" );
					Global.SetBool( "g_firfrost_sherrif_referred", true );
					iObjectives.Add( "a2_master_objectives_firefrost2" );
				}
				else if ( (convoResponse == 2) && (local_8 == 0) )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_well_your_freind_aint_been_here_for_some_time" );
					local_8 = true;
				}
				else if ( (convoResponse == 2) && (local_8 == 1) )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_guess_folks_have_more_important_things_on_their_mind" );
				}
				else if ( convoResponse == 3 )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_well_as_youve_seen_this_is_one_big_system" );
				}
				else if ( convoResponse == 4 )
				{
					iConversation.Say( none, "a2_master_name_mariana", "a2_master_dialogue_mariana_ok_be_seeing_you" );
					local_10 = true;
				}
				
				iConversation.End();
			}
			while ( local_10 == 0 );
			
			iShip.UndockSelf( playerShip );
		}
		else if ( (Sim.DistanceBetween( playerShip, firefrostSystemAdministration ) < 5000.0) && ((Global.Bool( "g_firfrost_sherrif_referred" ) == 1) && (local_12 == 0)) )
		{
			if ( Global.Bool( "g_act2_high_noon_offered" ) == 0 )
			{
				iConversation.Begin();
				iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_well_i_guess_this_is_the_sherrifs_place" );
				iConversation.End();
			}
			
			local_12 = true;
		}
		else if ( iSim.IsDockedToStructure( iSim.Cast( playerShip ), iSim.Cast( firefrostSystemAdministration ) ) )
		{
			iObjectives.SetState( "a2_master_objectives_firefrost2", OS_Succeeded );
			Global.SetBool( "g_act2_firefrost_sherrif_introduction", true );
			
			if ( Global.Bool( "g_act2_firefrost_high_noon_complete" ) == 0 )
			{
				do
				{
					iConversation.Begin();
					
					if ( Global.Bool( "g_act2_high_noon_offered" ) == 1 )
					{
						iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_this_mission", "a2_master_dialogue_cal_tell_me_about_this_mission" );
					}
					else if ( (Global.Bool( "g_act2_need_pilots" ) == 0) && (local_7 == 0) )
					{
						iConversation.AddResponse( "a2_master_option_cal_im_looking_for_help_in_fighting_the_marauders", "a2_master_dialogue_cal_im_looking_for_help_in_fighting_the_marauders" );
					}
					else if ( (Global.Bool( "g_act2_need_pilots" ) == 1) && (local_7 == 0) )
					{
						iConversation.AddResponse( "a2_master_dialogue_cal_im_looking_to_recruit_pilots", "a2_master_dialogue_cal_im_looking_to_recruit_pilots" );
					}
					else
					{
						iConversation.AddResponse( "a2_master_dialogue_cal_what_troubles", "a2_master_dialogue_cal_what_troubles" );
					}
					
					iConversation.AddResponse( "a2_master_dialogue_cal_people_around_here_seem_to_think_youre_in_charge_of_the_system", "a2_master_dialogue_cal_people_around_here_seem_to_think_youre_in_charge_of_the_system" );
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_firefrost", "a2_master_dialogue_cal_tell_me_about_firefrost" );
					iConversation.AddResponse( "a2_master_dialogue_cal_goodbye", "a2_master_dialogue_cal_goodbye" );
					
					if ( local_11 == 0 )
					{
						convoResponse = iConversation.Ask( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_what_can_i_do_for_you_boy" );
						local_11 = true;
					}
					else
					{
						convoResponse = iConversation.Ask( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_anything_else_boy" );
					}
					
					if ( (convoResponse == 1) && (Global.Bool( "g_act2_high_noon_offered" ) == 1) )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_were_getting_a_posse_together" );
					}
					else if ( (convoResponse == 1) && (local_7 == 0) )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_id_like_to_help_you_boy" );
						local_7 = true;
					}
					else if ( (convoResponse == 1) && (local_7 == 1) )
					{
						iConversation.AddResponse( "a2_master_dialogue_cal_sure", "a2_master_dialogue_cal_sure" );
						iConversation.AddResponse( "a2_master_dialogue_cal_im_busy", "a2_master_dialogue_cal_im_busy" );
						convoResponse = iConversation.Ask( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_well_boy_we_got_ourselves_hurt_real_bad" );
						
						if ( convoResponse == 1 )
						{
							iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_thats_ma_boy_you_scrath_our_back" );
							Global.SetBool( "g_act2_high_noon_offered", true );
						}
						else
						{
							iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_suit_yourself" );
						}
					}
					else if ( convoResponse == 2 )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_hell_no_boy" );
					}
					else if ( convoResponse == 3 )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_this_is_the_plum_biggest" );
					}
					else if ( convoResponse == 4 )
					{
						local_10 = true;
					}
					
					iConversation.End();
				}
				while ( local_10 == 0 );
				
				iShip.UndockSelf( playerShip );
			}
			else
			{
				do
				{
					iConversation.Begin();
					
					if ( Global.Bool( "g_act2_need_pilots" ) == 0 )
					{
						iConversation.AddResponse( "a2_master_option_cal_im_looking_for_help_in_fighting_the_marauders", "a2_master_dialogue_cal_im_looking_for_help_in_fighting_the_marauders" );
					}
					else
					{
						iConversation.AddResponse( "a2_master_dialogue_cal_im_looking_to_recruit_pilots", "a2_master_dialogue_cal_im_looking_to_recruit_pilots" );
					}
					
					iConversation.AddResponse( "a2_master_dialogue_cal_people_around_here_seem_to_think_youre_in_charge_of_the_system", "a2_master_dialogue_cal_people_around_here_seem_to_think_youre_in_charge_of_the_system" );
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_firefrost", "a2_master_dialogue_cal_tell_me_about_firefrost" );
					iConversation.AddResponse( "a2_master_dialogue_cal_goodbye", "a2_master_dialogue_cal_goodbye" );
					convoResponse = iConversation.Ask( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_what_can_i_do_for_you_boy" );
					
					if ( (convoResponse == 1) && (Global.Bool( "g_act2_firefrost_high_noon_complete" ) == 0) )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_well_were_all_fighting_the_marauders_boy_i_appreciate_you_helping_us" );
					}
					else if ( (convoResponse == 1) && (Global.Bool( "g_act2_need_pilots" ) == 1) )
					{
						iConversation.End();
						iConversation.OneLiner( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_ive_heard_on_the_grapeving_that_there_was_gonna_be_a_big_rukus" );
						local_function_1( 100 );
						Global.CreateBool( "g_got_firefrost_pilots", 2, true );
						local_10 = true;
					}
					else if ( convoResponse == 2 )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_hell_no_boy" );
					}
					else if ( convoResponse == 3 )
					{
						iConversation.Say( none, "a2_master_name_sheriff_kane", "a2_master_dialogue_kane_this_is_the_plum_biggest" );
					}
					else if ( convoResponse == 4 )
					{
						local_10 = true;
					}
					
					iConversation.End();
				}
				while ( local_10 == 0 );
				
				iShip.UndockSelf( playerShip );
			}
		}
		else
		{
			Task.Sleep( Task.Current(), 3.0 );
		}
		
		local_7 = false;
		local_8 = false;
		local_9 = false;
		local_10 = false;
		local_11 = false;
	}
	while ( local_6 );
}

task FirefrostStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	int local_2;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/firefrost" ) && (Global.Bool( "g_skip_to_specific" ) != 1) )
	{
		debug Debug.PrintString( "iActTwo.FirefrostStoryScript : trying to start task, but current world is not firefrost, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_firefrost_state", taskState );
	}
	
	debug Debug.PrintString( "iActTwo.FirefrostStoryScript : Commencing  Firefrost story script\n" );
	start FirefrostConversations();
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			debug Debug.PrintString( "iActTwo.FirefrostStoryScript : initialising firefrost intro cut scene\n" );
			
			if ( Global.Bool( "g_skip_to_specific" ) != 1 )
			{
				iSystemCutScene.Firefrost();
			}
			
			do
			{
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( !iDirector.IsBusy() );
			
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_firefrost_be_careful_in_this_system_cal" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_keep_your_eyes_peeled" );
			iConversation.End();
			iConversation.OneLiner( none, "name_clay", "a2_master_dialogue_clay_dont_worry_if_your_electronics" );
			iConversation.OneLiner( none, "name_cal", "a2_master_dialogue_cal_spare_the_lecture_clay" );
			iConversation.OneLiner( none, "name_clay", "a2_master_dialogue_clay_hey_kid_just_offering_a_little_advice" );
			iConversation.OneLiner( none, "name_cal", "a2_master_dialogue_cal_im_sorry_youre_right_youve_been_here_before" );
			iDirector.End();
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_ok_thats_more_like_it" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_sounds_as_good_a_place" );
			iConversation.End();
			iObjectives.Add( "a2_master_objectives_firefrost1" );
			State.SetProgress( taskState, 1 );
		
		case 1:
			State.SetProgress( taskState, 2 );
		
		case 2:
			while ( (Global.Bool( "g_act2_high_noon_offered" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) )
			{
				debug Debug.PrintString( "iActTwo.FirefrostStoryScript : waiting for player to accept ranch mission from firefrost sherrif, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			iAct2Mission04.Main();
			State.SetProgress( taskState, 3 );
		
		case 3:
			while ( Global.Bool( "g_act2_firefrost_high_noon_complete" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.FirefrostStoryScript : watinig for the player to finish act 02 mission 04 - high noon, sleeping \n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			iGangsterIncidentGen.SetActive( true );
			iGangsterIncidentGen.SetFaction( A_Marauders );
			iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 4 );
			iGangsterIncidentGen.SetNumberOfStationAttackersVar( 3 );
			iGangsterIncidentGen.SetDelayCheck( 40.0 );
			Task.Detach( start iGangsterIncidentGen.GangsterWarGenerator() );
			State.SetProgress( taskState, 4 );
		
		case 4:
			while ( Global.Bool( "g_act2_need_pilots" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.FirefrostStoryScript : waiting until the MCA need pilots, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			do
			{
				debug Debug.PrintString( "iActTwo.FirefrostStoryScript : waiting until the MCA need pilots, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Global.Exists( "g_got_firefrost_pilots" ) == 0 );
			
			Global.Destroy( "g_got_firefrost_pilots" );
			State.Destroy( Task.Current() );
			Global.SetBool( "g_firefrost_script_complete", true );
			return;
	}
}

task CoyoteStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	int local_2;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/coyote" ) )
	{
		debug Debug.PrintString( "iActTwo.CoyoteStoryScript : trying to start task, but current world is not coyote, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_coyote_state", taskState );
	}
	
	debug Debug.PrintString( "iActTwo.CoyoteStoryScript : Commencing  Coyote story script\n" );
	
	if ( Global.Bool( "g_skip_to_specific" ) == 1 )
	{
		Global.SetBool( "g_act2_referred_to_hoffer", true );
		Global.SetBool( "g_act2_spoken_to_hoffer", true );
	}
	
	if ( Global.Bool( "g_act2_referred_to_hoffer" ) == 0 )
	{
		Task.Detach( start local_function_5() );
	}
	
	if ( (Global.Bool( "g_act2_spoken_to_hoffer" ) == 0) && (Object.PropertyExists( taskState, "ran_jackson_encounter" ) == 0) )
	{
		Object.AddBoolProperty( taskState, "ran_jackson_encounter", true );
		Task.Detach( start JacksonEncounterSetup() );
	}
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			while ( Global.Bool( "g_act2_league_plea" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.CoyoteStoryScript : wating for the player to be sent to get help by league...Sleeping.\n" );
				Task.Sleep( Task.Current(), 3.0 );
			}
			
			debug Debug.PrintString( "iActTwo.CoyoteStoryScript : Starting Coyote cut scene\n" );
			
			if ( !( Global.Bool( "g_skip_to_specific" ) == 1 ) )
			{
				iSystemCutScene.Coyote();
				
				do
				{
					Task.Sleep( Task.Current(), 0.50 );
				}
				while ( !iDirector.IsBusy() );
				
				iConversation.Begin();
				iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_c1_coyote_wow" );
				iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_coyote_yeh" );
				iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_c1_coyote_hey" );
				iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_coyote_ahh" );
				iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_c1_coyote_you" );
				iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_coyote_sure" );
				iConversation.End();
				
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( iDirector.IsBusy() );
				
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( iDirector.IsBusy() );
			}
			
			State.SetProgress( taskState, 1 );
		
		case 1:
			if ( Global.Bool( "g_act2_referred_to_hoffer" ) == 1 )
			{
				iObjectives.Add( "a2_master_objectives_talk_jackson" );
			}
			
			do
			{
				if ( Global.Bool( "g_act2_referred_to_hoffer" ) == 1 )
				{
					local_2 = ( local_2 + 1 );
					
					if ( local_2 == 30 )
					{
						debug Debug.PrintString( "iActTwo.CoyoteStoryScript : prompting the player to visit first contacts in the system & sleeping.\n" );
						local_2 = 0;
						
						if ( Global.Exists( "g_act2_at_jacksons" ) == 0 )
						{
							iConversation.Begin();
							iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_remember_why_we_are_here" );
							iConversation.End();
						}
					}
					else debug Debug.PrintString( "iActTwo.CoyoteStoryScript : Waiting for the player to talk to Frederick Jackson, sleeping.\n" );
					
					Task.Sleep( Task.Current(), 5.0 );
				}
				else
				{
					debug Debug.PrintString( "iAct2,CoyoteStoryScript : waiting for the player to be reffered to Frederick Jackson, sleeping.\n" );
					Task.Sleep( Task.Current(), 5.0 );
				}
			}
			while ( Global.Bool( "g_act2_spoken_to_hoffer" ) == 0 );
			
			atomic
			{
				iAct2Mission07.Main();
			}
			
			Task.Sleep( Task.Current(), 1.0 );
			debug Debug.PrintString( "iAct2CoyoteStoryScript : adding trades fron Jacksons yard....\n" );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 302, 1, 8, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 302, 1, 10, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 303, 1, 12, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 303, 1, 11, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 568, 1, 32, 1, 3 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 581, 1, 14, 1, 2 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 264, 1, 15, 1, 2 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 309, 1, 16, 3, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 590, 1, 12, 2, 4 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 574, 1, 10, 2, 5 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 526, 1, 18, 1, 0 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 223, 1, 45, 3, 2 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 194, 1, 21, 2, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 196, 1, 48, 1, 1 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "Independent" ), 590, 1, 382, 1, 2 ) );
			iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 511, 1, 24, 2, 3 ) );
			
			if ( 0 == Global.Exists( "g_added_gm_batch_9" ) )
			{
				iGMTracker.AddGMEnum( 24 );
				iGMTracker.AddGMEnum( 25 );
				iGMTracker.AddGMEnum( 26 );
				iGMTracker.AddGMEnum( 27 );
				iGMTracker.AddGMEnum( 28 );
				iGMTracker.AddGMEnum( 29 );
				iGMTracker.SetGMRange( 24, 29 );
				Global.CreateBool( "g_added_gm_batch_9", 1, true );
			}
			
			State.Destroy( Task.Current() );
			Global.SetBool( "g_coyote_script_complete", true );
	}
}

task local_function_7( hship ship_0_, hship ship_1_, hsim param_2_, hstate state_ )
{
	hship playerShip = iShip.FindPlayerShip();
	bool local_1 = false;
	
	do
	{
		Task.Sleep( Task.Current(), 1.0 );
	}
	while ( State.Progress( state_ ) < 1 );
	
	Global.SetInt( "g_act2_dagda_visits", Global.Int( "g_act2_dagda_visits" ) + 1 );
	
	do
	{
		if ( local_1 )
		{
			debug Debug.PrintString( "iActTwo.DagdaConversation : Dagda character ships have spoken to the player, exiting\n" );
			return;
		}
		
		if ( Sim.DistanceBetween( playerShip, param_2_ ) < 3000.0 )
		{
			iConversation.Begin();
			iConversation.Say( ship_0_, "", "a2_master_dialogue_jarvis_howdy" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_yeah_whats_the_score_with_all_this_entry_permit_stuff" );
			iConversation.Say( ship_0_, "", "a2_master_dialogue_jarvis_this_whole_system_is_owned_by_the_maas_corporation" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_youre_not_maas_how_come_youre_here" );
			iConversation.Say( ship_0_, "", "a2_master_dialogue_jarvis_jarvis_fokker_at_your_service_freelance_vending_machine_engineer_at_your_service" );
			iConversation.Say( ship_1_, "", "a2_master_dialogue_trashman_would_you_please_stop_insulting_my_employer_over_an_open_channel" );
			iConversation.Say( ship_0_, "a2_master_name_jarvis", "a2_master_dialogue_jarvis_i_wondered_how_long_it_would_take" );
			iConversation.Say( ship_1_, "", "a2_master_dialogue_trashman_i_resent_that" );
			iConversation.Say( ship_0_, "a2_master_name_jarvis", "a2_master_dialogue_jarvis_convicted_of_poverty" );
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_talking_to_these_jokers" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_your_right_clay" );
			iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_thanks_for_your_help" );
			iConversation.End();
			local_1 = true;
		}
		else
		{
			debug Debug.PrintString( "iactTwo.DagdaConversations : player is not neat staging point 1, sleeping\n" );
			Task.Sleep( Task.Current(), 5.0 );
		}
	}
	while ( (ship_0_ != false) && (ship_1_ != false) );
}

task DagdaStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	bool playerNotHostile = true;
	bool playerJustArrived = true;
	bool playerOutofBounds = false;
	bool keepAttackingPlayer = true;
	hgroup group_0 = Group.Create();
	hlagrangepoint dagdaDelta2LPoint = iLagrangePoint.Cast( iMapEntity.FindByNameInSystem( "Dagda Delta 2 L-Point", "map:/geog/badlands/dagda" ) );
	hhabitat dagdaMaasSystemsSTC = iHabitat.Cast( iMapEntity.FindByNameInSystem( "Dagda Maas Systems STC", "map:/geog/badlands/dagda" ) );		// still no clue wtf Maas Systems STC is (doesn't exist as an object at least?)
	hship playerShip = iShip.FindPlayerShip();
	hship shipTruck;
	hship shipFueltransporterSmall;
	hgroup group_1; 
	hsim waypoint_0;
	hsim waypoint_1;
	hsim waypoint_2;
	hsim waypoint_3;
	hsim waypoint_4;
	hsim waypoint_5;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/dagda" ) )
	{
		debug Debug.PrintString( "iActTwo.DagdaStoryScript : trying to start task, but current world is not dagda, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_dagda_state", taskState );
	}
	
	debug Debug.PrintString( "iActTwo.DagdaStoryScript - Commencing Dagda Story Script.\n" );
	waypoint_0 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, -900.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_0, true, "a2_master_name_waypoint_stage_1" );
	waypoint_1 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, -500.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_1, true, "a2_master_name_waypoint_stage_2" );
	waypoint_2 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, -100.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_2, true, "a2_master_name_waypoint_stage_3" );
	waypoint_3 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, 300.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_3, true, "a2_master_name_waypoint_stage_4" );
	waypoint_4 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, 700.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_4, true, "a2_master_name_waypoint_stage_5" );
	waypoint_5 = iUtilities.CreateWaypointRelativeTo( dagdaDelta2LPoint, 1100.0, 500.0, -3000.0 );
	iUtilities.MakeWaypointVisible( waypoint_5, true, "a2_master_name_waypoint_stage_6" );
	Group.AddSim( group_0, waypoint_0 );
	Group.AddSim( group_0, waypoint_1 );
	Group.AddSim( group_0, waypoint_2 );
	Group.AddSim( group_0, waypoint_3 );
	Group.AddSim( group_0, waypoint_4 );
	Group.AddSim( group_0, waypoint_5 );
	Global.CreateHandle( "g_dagda_waypoints", 1, group_0 );
	
	if ( Global.Int( "g_act2_dagda_visits" ) == 0 )
	{
		shipTruck = iShip.Create( "ini:/sims/ships/utility/truck", "a2_master_kiwi" );
		iPilotSetup.GenericFreight( shipTruck );
		iSim.SetFaction( shipTruck, iFaction.Find( iUtilities.FromAllegianceEnum( A_Independent ) ) );
		Sim.PlaceAt( shipTruck, waypoint_1 );
		iSim.SetIndestructable( shipTruck, true );
		shipFueltransporterSmall = iShip.Create( "ini:/sims/ships/utility/fueltransporter_small", "a2_master_waste_not" );
		iPilotSetup.GenericFreight( shipFueltransporterSmall );
		iSim.SetFaction( shipFueltransporterSmall, iFaction.Find( iUtilities.FromAllegianceEnum( A_MAASCorporation ) ) );
		Sim.PlaceAt( shipFueltransporterSmall, waypoint_2 );
		iSim.SetIndestructable( shipFueltransporterSmall, true );
		start local_function_7( shipTruck, shipFueltransporterSmall, waypoint_0, taskState );
	}
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			if ( Global.Exists( "g_running_corporate_holdings" ) == 0 )
			{
				iSystemCutScene.Dagda();
				
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( !iDirector.IsBusy() );
				
				iConversation.Begin();
				iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_c1_dagda_wooa" );
				iConversation.End();
				State.SetProgress( taskState, 1 );
			}
		
		case 1:
			debug Debug.PrintString( "iActTwo.DagdaStoryScript : commencing the Dagda traffic control loop\n" );
			
			group_1 = local_function_6( iHabitat.Nearest( iMapEntity.SystemHabitats(), playerShip ) );		// moved inty group creation into traffic control loop from start of script and changed spawn to nearest base
			iAI.GiveApproachOrderAdvanced( group_1, dagdaDelta2LPoint, 8000.0, 10000.0, true );		// added approach order to have the first inty squad arrive at L-Point pre-emptively
			
			if ( Sim.DistanceBetween( playerShip, dagdaDelta2LPoint ) < 15000.0 )
			{
				while ( playerNotHostile )
				{
					if ( Sim.DistanceBetween( playerShip, dagdaDelta2LPoint ) < 5000.0 )
					{
						playerOutofBounds = false;
						
						if ( playerJustArrived )
						{
							iConversation.Begin();
							iConversation.Say( dagdaMaasSystemsSTC, "a2_master_dagda_stc", "a2_master_dialogue_dagda_stc_attention_arriving_vessel" );
							iConversation.End();
							playerJustArrived = false;
						}
						else
						{
							debug Debug.PrintString( "iActTwo.DagdaStoryScript : The player is inside the staging area of Dagda L -point, nothing else to do but sleep...\n" );		// fixed debug msg typo
							Task.Sleep( Task.Current(), 2.0 );
						}
					}
					else if ( playerOutofBounds )
					{
						debug Debug.PrintString( "iAct2.DagdaScript: called attack!!!!!!\n" );
						playerNotHostile = false;
						iConversation.Begin();
						iConversation.Say( dagdaMaasSystemsSTC, "a2_master_dagda_stc", "a2_master_dialogue_dagda_stc_attention_vessel_you_are_in_violation" );
						iConversation.End();
						iAI.GiveAttackOrder( group_1, playerShip );
					}
					else
					{
						iConversation.OneLiner( dagdaMaasSystemsSTC, "a2_master_dagda_stc", "a2_master_dialogue_dagda_stc_warning" );
						playerOutofBounds = true;
						debug Debug.PrintString( "iAct2.DagdaScript: warned player for going out of staging area waiting 10 secs\n" );
						Task.Sleep( Task.Current(), 10.0 );
						debug Debug.PrintString( "iAct2.DagdaScript: finished wait.........\n" );
					}
				}
			}
			
			// Expanded on this loop a bit. keepAttackingPlayer is always true, so this loop will continue running forever
			// Original intent is unknown, so keeping it as is
			
			while ( keepAttackingPlayer )
			{
				if ( Global.Exists( "g_running_corporate_holdings" ) == 0 )		// making sure we don't send any regular patrols after the player during corporate holdings
				{
				
					if ( Group.SimCount( group_1 ) == 0 )		// originally called Group.GroupCount, always evaluating true as the inty group has no subgroups. Main culprit of Dagda bug.
					{
						Group.Destroy( group_1, true );	//destroy the old (now empty) group entity
						group_1 = local_function_6( iHabitat.Nearest( iMapEntity.SystemHabitats(), playerShip ) );		// and immediately recreate a new interceptor squad to replace it
					}
					else
					{
						debug Debug.PrintString( "iActTwo.DagdaStoryScript : a maas patrol is already on the player tail, sleeping\n" );
						Task.Sleep( Task.Current(), 10.0 );
					}
					
					Task.Sleep( Task.Current(), 20.00000 );			// this also ensures a 20-30 second interval between attacks getting launched (plus whatever time the squad needs to reach player)
					iAI.GiveAttackOrder( group_1, playerShip );		// refresh the attack order every now and then, just in case the inty squad loses interest in player for some reason
					
				}
				else
				{
					debug Debug.PrintString( "iAct2.DagdaScript: Corporate Holdings mission is running, sleeping for 60 seconds before next Dagda patrol check\n" );
					Task.Sleep( Task.Current(), 60.0 );
				}
			}
			
			// These following two should never still get called though. I wonder what the original intent was?
			// Surely not to have "Dagda as a corporate fortress" immersion script run only once?
			
			State.Destroy( Task.Current() );
			Global.SetBool( "g_dagda_script_complete", true );
	}
}

task santa_waiter()
{
	hstate taskState = State.Find( Task.Current() );
	
	if ( !taskState )
	{
		taskState = State.Create( Task.Current(), 0 );
	}
	
	do
	{
		debug Debug.PrintString( "iAct2SantaRomeraStoryScript : wating for the player to complete a blocakde run to Mwari. sleeping for 30 seconds\n" );
		Task.Sleep( Task.Current(), 1.0 );
	}
	while ( Global.Bool( "g_act2_completed_blockade_run" ) == 0 );
	
	State.Destroy( Task.Current() );
	State.Destroy( Task.Current() );
	iUtilities.SendStoryElement( "g_story_2.140b", 2, 0 );
	return;
}

task SantaRomeraStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/santa_romera" ) && (Global.Bool( "g_skip_to_specific" ) != 1) )
	{
		debug Debug.PrintString( "iActTwo.SantaRomeraStoryScript : trying to start task, but current world is not Santa Romera, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_santa_romera_state", taskState );
	}
	
	debug Debug.PrintString( "iActTwo.SantaRomeraStoryScript - Commencing Santa Romera Story Script.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			start AcceleratorCutSceneMonitor();
			iConversation.Begin();
			iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_this_is_santa_romera" );
			iConversation.End();
			start RitzIntroMonitor();
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				debug Debug.PrintString( "iAct2SantaRomeraStoryScript : Waiting for the player to visit the Ritz, sleeping for 30 seconds. \n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( (Global.Bool( "g_act2_ritz_introduced" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) );
			
			if ( iEmail.Find( "html:/text/act_2/act2_mission05_email" ) == false )
			{
				debug Debug.PrintString( "iActTwo.SantaRomeraStoryscript : giving player blockade runner mission, yip\n" );
				iAct2Mission05.Main();
				Task.Detach( start santa_waiter() );
				
				if ( 0 == Global.Exists( "g_added_gm_batch_10" ) )
				{
					iGMTracker.AddGMEnum( 30 );
					iGMTracker.AddGMEnum( 32 );
					iGMTracker.AddGMEnum( 33 );
					iGMTracker.AddGMEnum( 34 );
					iGMTracker.AddGMEnum( 35 );
					iGMTracker.SetGMRange( 30, 35 );
					Global.CreateBool( "g_added_gm_batch_10", 1, true );
				}
			}
			else debug Debug.PrintString( "Not starting blockade runner twice\n" );
			
			State.SetProgress( taskState, 2 );
		
		case 2:
			do
			{
				debug Debug.PrintString( "iAct2SantaRomeraStoryScript : wating for the player to complete a blocakde run to Mwari. sleeping for 30 seconds\n" );
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( Global.Bool( "g_act2_completed_blockade_run" ) == 0 );
			
			State.SetProgress( taskState, 3 );
		
		case 3:
			State.Destroy( Task.Current() );
			Global.SetBool( "g_santaromera_script_complete", true );
			
			if ( iEmail.Find( "html:/text/act_2/act2_mission10_email" ) == false )
			{
				iAct2Mission10.Main();
			}
			else debug Debug.PrintString( "iActTwo.SantaRomeraStoryScript: Not starting grassy knoll twice\n" );
			
			Task.Sleep( Task.Current(), 3.0 );
	}
	
	return;
}

task MwariBlockadeEvents()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	debug Debug.PrintString( "iChapterOne.MwariBlockadeEvents - Commencing Mwari Story Sequence.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			while ( (Global.Bool( "g_act2_received_selling_secrets_intro" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) )
			{
				debug Debug.PrintString( "iActTwo.MwariBlockadeEvents : Waiting for player to receive mail on someone selling mca secrets, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			State.SetProgress( taskState, 2 );
		
		case 2:
			do
			{
				debug Debug.PrintString( "iActTwo.MwariBlockadeEvents : waititng for the player to complete act 02 mission 18 - momma wolf, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			while ( (Global.Bool( "g_act2_mommma_wolf_destroyed" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) );
			
			iAct2Mission08.Main();
			State.SetProgress( taskState, 3 );
		
		case 3:
			do
			{
				debug Debug.PrintString( "iActTwo.MwariBlockadeEvents : waiting for the player to finish act 2 mission 08 - corporate holdings. sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			while ( (Global.Bool( "g_act2_corporate_holdings_complete" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) );
			
			iUtilities.SendStoryElement( "g_story_2.130", 2, 9 );
			iAct2Mission09.Main();
			State.Destroy( Task.Current() );
	}
}

task MwariStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	hmapentity longshotMCADefenceHQ = iMapEntity.FindByNameInSystem( "Longshot MCA Defence HQ", "map:/geog/badlands/mwari" );
	hship playerShip = iShip.FindPlayerShip();
	bool local_4 = false;
	int convoResponse;
	htask local_6;
	
	if ( !( iSim.ActiveWorld() == "map:/geog/badlands/mwari" ) && (Global.Bool( "g_skip_to_specific" ) != 1) )
	{
		debug Debug.PrintString( "iActTwo.MwariStoryScript : trying to start task, but current world is not Mwari, quitting\n" );
		return;
	}
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Global.SetHandle( "g_mwari_state", taskState );
	}
	
	debug Debug.PrintString( "iChapterOne.MwariStorySequence - Commencing Mwari Story Sequence.\n" );
	iGangsterIncidentGen.SetActive( true );
	iGangsterIncidentGen.SetFaction( A_Marauders );
	iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 3 );
	iGangsterIncidentGen.SetNumberOfStationAttackersVar( 4 );
	iGangsterIncidentGen.SetDelayCheck( 40.0 );
	iStation.AddReactiveException( iHabitat.Cast( longshotMCADefenceHQ ) );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			State.SetProgress( taskState, 1 );
		
		case 1:
			if ( Global.Bool( "g_skip_to_specific" ) != 1 )
			{
				do
				{
					if ( Sim.DistanceBetween( playerShip, longshotMCADefenceHQ ) < 10000.0 )
					{
						if ( (Global.Bool( "g_act2_completed_blockade_run" ) == 1) || Global.Exists( "g_blockade_runner_running" ) )
						{
							Global.SetBool( "g_act2_mca_introduced", true );
						}
						else if ( local_4 )
						{
							debug Debug.PrintString( "iActTwo.MwariStoryScript : Player is near the MCA Headquarters, but it has already spoken, sleeping\n" );
							Task.Sleep( Task.Current(), 10.0 );
						}
						else
						{
							local_4 = true;
							
							switch ( Global.Int( "g_act2_mwari_conversations" ) )
							{
								case 0:
									iConversation.Begin();
									iConversation.AddResponse( "a2_master_option_cal_looking_for_allies", "a2_master_dialogue_cal_looking_for_allies" );
									iConversation.AddResponse( "a2_master_dialogue_cal_come_to_fight_marauders", "a2_master_dialogue_cal_come_to_fight_marauders" );
									iConversation.AddResponse( "a2_master_dialogue_cal_mca_just_passing", "a2_master_dialogue_cal_mca_just_passing" );
									convoResponse = iConversation.Ask( none, "a2_master_mca_control", "a2_master_dialogue_mca_you_have_entered_mca_space" );
									
									if ( convoResponse == 1 )
									{
										iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_maybe_you_hadnt_noticed" );
									}
									else if ( convoResponse == 2 )
									{
										iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_then_good_luck_to_you" );
									}
									else if ( convoResponse == 3 )
									{
										iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_then_i_recomend_you_turn_around" );
									}
									
									iConversation.End();
									Global.SetInt( "g_act2_mwari_conversations", Global.Int( "g_act2_mwari_conversations" ) + 1 );
									break;
								
								case 1:
									iConversation.Begin();
									iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_you_again" );
									iConversation.End();
									Global.SetInt( "g_act2_mwari_conversations", Global.Int( "g_act2_mwari_conversations" ) + 1 );
									break;
								
								case 2:
									iConversation.Begin();
									iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_your_prescence_here_is_unwelcome" );
									iConversation.End();
									break;
							}
						}
					}
					else
					{
						debug Debug.PrintString( "iActTwo.MwariStoryScript : player is not near MCA base, sleeping \n" );
						Task.Sleep( Task.Current(), 10.0 );
					}
				}
				while ( Global.Bool( "g_act2_mca_introduced" ) == 0 );
				
				do
				{
					Task.Sleep( Task.Current(), 2.0 );
					debug Debug.PrintString( "iActTwo.MwariStoryScript : Waiting for blockade runner to complete before doing Act script MCA station dialogue. \n" );
				}
				while ( Global.Exists( "g_blockade_runner_running" ) );
				
				if ( Global.Int( "g_act2_mwari_conversations" ) > 0 )
				{
					iConversation.Begin();
					iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_so_you_have_finally_made_yourself_useful" );
				}
				else
				{
					iConversation.Begin();
				}
				
				iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_thank_you" );
				iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_mca", "a2_master_dialogue_cal_tell_me_about_the_mca" );
				iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_marauders", "a2_master_dialogue_cal_tell_me_about_the_marauders" );
				convoResponse = iConversation.Ask( none, "a2_master_mca_control", "a2_master_dialogue_mca_unfortunately_the_situation_with_the_marauders" );
				
				if ( convoResponse == 1 )
				{
					iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_we_are_a_democracy" );
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_marauders", "a2_master_dialogue_cal_tell_me_about_the_marauders" );
					convoResponse = iConversation.Ask( none, "a2_master_mca_control", "a2_master_dialogue_mca_anything_else" );
					
					if ( convoResponse == 1 )
					{
						iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_the_marauders_have_been" );
					}
				}
				else if ( convoResponse == 2 )
				{
					iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_the_marauders_have_been" );
					iConversation.AddResponse( "a2_master_dialogue_cal_tell_me_about_the_marauders", "a2_master_dialogue_cal_tell_me_about_the_marauders" );
					convoResponse = iConversation.Ask( none, "a2_master_mca_control", "a2_master_dialogue_mca_anything_else" );
					
					if ( convoResponse == 1 )
					{
						iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_we_are_a_democracy" );
					}
				}
				
				iConversation.Say( none, "a2_master_mca_control", "a2_master_dialogue_mca_sorry_we_cannot_be_of_further_help" );
				iConversation.End();
				iUtilities.SendStoryElement( "g_story_2.140", 2, 0 );
			}
			
			local_6 = start MwariBlockadeEvents();
			Task.Detach( local_6 );
			State.Destroy( Task.Current() );
			Global.SetBool( "g_mwari_script_complete", true );
	}
}

task MarauderHuntStoryScript()
{
	htask currentTask = Task.Current();
	int local_1;
	hstate taskState = State.Find( currentTask );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Object.AddIntProperty( taskState, "delay", 0 );
	}
	
	debug Debug.PrintString( "iChapterOne.MarauderHuntStorySequence - Commencing Maruader Hunt Story Sequence.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			do
			{
				debug Debug.PrintString( "iActTwo.MarauderHuntStorySequence : Waiting for the player to capture a marauder encryption device, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( Global.Bool( "g_act2_captured_marauder_code_machine" ) == 0 );
			
			iUtilities.SendStoryElement( "g_story_2.231", 2, 0 );
			State.SetProgress( taskState, 1 );
		
		case 1:
			do
			{
				debug Debug.PrintString( "iActTwo.MarauderHuntStorySequence : waiting for boffins to recieve the stuff from smith...\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( !iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_231" ) ) );
			
			if ( Object.IntProperty( taskState, "delay" ) < 240 )
			{
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
					Object.SetIntProperty( taskState, "delay", Object.IntProperty( taskState, "delay" ) + 1 );
					debug Debug.PrintString( "iActTwo.MarauderHuntStorySequence : waiting for boffins to crack code...\n" );
				}
				while ( Object.IntProperty( taskState, "delay" ) < 120 );
			}
			
			iUtilities.SendStoryElement( "g_story_2.230", 2, 0 );
			State.SetProgress( taskState, 2 );
		
		case 2:
			while ( Global.Bool( "g_act2_allies_crack_code" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MarauderHuntStorySequence : Waiting for player to receive story sequence 2.230, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			debug Debug.PrintString( "iActTwo.MasterScript : Starting gangster gen for mini wolpack encounters\n" );
			iGangsterIncidentGen.SetActive( true );
			iGangsterIncidentGen.SetFaction( A_Marauders );
			iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 2 );
			iGangsterIncidentGen.SetNumberOfStationAttackersVar( 3 );
			iGangsterIncidentGen.SetDelayCheck( 30.0 );
			Task.Detach( start iGangsterIncidentGen.GangsterWarGenerator() );
			State.Destroy( Task.Current() );
	}
}

hgroup local_function_8( hmapentity mapentity_ )
{
	hgroup group = Group.Create();
	hship ship;
	hfaction league = iFaction.Find( "League" );
	
	ship = iShip.Create( "ini:/sims/ships/navy/old_destroyer", "a2_master_name_franklyn" );
	iSim.SetFaction( iSim.Cast( ship ), league );
	iSim.SetIndestructable( ship, true );
	iPilotSetup.GenericCargoPod( ship );
	Group.AddSim( group, ship );
	ship = iShip.Create( "ini:/sims/ships/navy/patcom", "a2_master_name_black" );
	iSim.SetFaction( iSim.Cast( ship ), league );
	iPilotSetup.GenericCargoPod( ship );
	Group.AddSim( group, ship );
	ship = iShip.Create( "ini:/sims/ships/navy/patcom", "a2_master_name_lion" );
	iSim.SetFaction( iSim.Cast( ship ), league );
	iPilotSetup.GenericCargoPod( ship );
	Group.AddSim( group, ship );
	Sim.PlaceRelativeTo( Group.Leader( group ), mapentity_, 5000.0, 0.0, 0.0 );
	iFormation.Goose( group, 40.0, true );
	Global.CreateHandle( "g_hoffers_vessels", 2, group );
	return group;
}

task HofferCreationHandler()
{
	hgroup group;
	string local_1 = Global.String( "g_player_base_system" );
	hmapentity lucreciasBase = iMapEntity.FindByNameInSystem( "Lucrecia's Base", local_1 );
	hmapentity mapentity = lucreciasBase;
	hship playerShip = iShip.FindPlayerShip();
	bool local_5 = true;
	
	if ( State.Find( Task.Current() ) == false )
	{
		State.Create( Task.Current(), 0 );
	}
	
	schedule
	{
		every 2.0:
		{
			playerShip = iShip.FindPlayerShip();
			local_1 = Global.String( "g_player_base_system" );
			lucreciasBase = iMapEntity.FindByNameInSystem( "Lucrecia's Base", local_1 );
			
			if ( iSim.ActiveWorld() == local_1 )
			{
				if ( (Global.Bool( "g_act3_ready_for_mission_ten" ) != 1) && (Global.Exists( "g_hoffer_disabled" ) == 0) )
				{
					if ( (Sim.DistanceBetween( playerShip, mapentity ) > 300000.0) && !local_5 )
					{
						local_5 = true;
						Group.Destroy( group, true );
						Global.Destroy( "g_hoffers_vessels" );
					}
					else if ( local_5 && (Sim.DistanceBetween( playerShip, mapentity ) < 300000.0) )
					{
						group = local_function_8( lucreciasBase );
						local_5 = false;
						mapentity = lucreciasBase;
					}
				}
			}
		}
	}
}

task HofferRevealMonitor()
{
	hship playerShip = iShip.FindPlayerShip();
	hmapentity jacksonsYard = iMapEntity.FindByNameInSystem( "Jackson's Yard", "map:/geog/badlands/coyote" );
	bool local_2 = false;
	
	if ( State.Find( Task.Current() ) == false )
	{
		State.Create( Task.Current(), 0 );
	}
	
	if ( (Global.Exists( "g_told_about_hoffer" ) == 1) && (Global.Exists( "g_revealed_hoffer" ) == 0) )
	{
		iObjectives.Add( "a2_master_objectives_leader" );
	}
	
	schedule
	{
		every 2.0:
		{
			if ( iSim.ActiveWorld() == "map:/geog/badlands/coyote" )
			{
				if ( (Global.Exists( "g_told_about_hoffer" ) == 1) && (Global.Exists( "g_revealed_hoffer" ) == 0) )
				{
					if ( (Sim.DistanceBetween( playerShip, jacksonsYard ) < 7000.0) && !local_2 )
					{
						local_2 = true;
						iConversation.OneLiner( none, "frederick_jackson", "a2_master_dialogue_hoffer_returned" );
					}
					else if ( (Sim.DistanceBetween( playerShip, jacksonsYard ) > 7000.0) && local_2 )
					{
						local_2 = false;
					}
					
					if ( local_2 && iSim.IsDockedToStructure( playerShip, jacksonsYard ) )
					{
						iSim.SetDockingLock( playerShip, jacksonsYard, true );
						iConversation.Begin();
						iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_hoffer_what_can_i" );
						iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_i_know_sounds" );
						iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_hoffer_jefferson" );
						iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_not_so_young" );
						iConversation.Say( none, "frederick_jackson", "a2_master_dialogue_hoffer_really_am" );
						Global.CreateBool( "g_revealed_hoffer", 2, true );
						iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_yes_sir" );
						iConversation.Say( none, "a2_master_name_franklyn", "a2_master_dialogue_hoffer_call_me_franklyn" );
						iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_with_all_youve" );
						iConversation.Say( none, "a2_master_name_franklyn", "a2_master_dialogue_hoffer_proud_to_stand" );
						iConversation.Say( none, "name_cal", "a2_master_dialogue_cal_fantastic" );
						iConversation.Say( none, "a2_master_name_franklyn", "a2_master_dialogue_hoffer_few_calls" );
						iConversation.End();
						local_function_1( 0 );
						debug Debug.PrintString( "iActTwo.hoffer_reveal_monitor: Player revealed hoffer\n" );
						iSim.SetDockingLock( playerShip, jacksonsYard, false );
						iObjectives.SetState( "a2_master_objectives_leader", OS_Succeeded );
						Task.Detach( start HofferCreationHandler() );
						return;
					}
				}
				else debug Debug.PrintString( "iActTwo.hoffer_reveal_monitor: Waiting for player to pursued hoffer\n" );
			}
		}
	}
}

task MwariWarsStoryScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	debug Debug.PrintString( "iChapterOne.MwariWarsStoryScript : script has started.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			iUtilities.SendStoryElement( "g_story_2.160", 2, 0 );
			State.SetProgress( taskState, 1 );
		
		case 1:
			while ( (Global.Bool( "g_act2_eureka_visited" ) == 0) && iDirector.IsBusy() )
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript :  waiting for the player to visit the eureka system for the first time, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			iAct2Mission03.Main();
			State.SetProgress( taskState, 2 );
		
		case 2:
			do
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript : watinig for the player to complete act 2 mission 03 - trouble at the ranch, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			while ( Global.Bool( "g_act2_badlands_food_sorted" ) == 0 );
			
			iUtilities.SendStoryElement( "g_story_2.150", 2, 0 );
			local_function_1( 0 );
			State.SetProgress( taskState, 3 );
		
		case 3:
			if ( Global.Bool( "g_act2_reached_pilot_total" ) == 0 )
			{
				iObjectives.Add( "a2_master_objectives_find_pilots" );
			}
			
			do
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript : waititng for the pilot total to reach required level, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( (Global.Bool( "g_act2_reached_pilot_total" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) );
			
			iObjectives.SetState( "a2_master_objectives_find_pilots", OS_Succeeded );
			iObjectives.SetState( "a2_master_objectives_look_help", OS_Succeeded );
			
			do
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript : waiting for player complete sct 2 mission 9 - grassy knoll\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( Global.Bool( "g_act2_grassy_knoll_complete" ) == 0 );
			
			do
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript : waiting for the player to complete act 02 mission 09 - marauder base, sleeping\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			while ( Global.Bool( "g_act2_marauder_base_mission_complete" ) == 0 );
			
			iUtilities.SendStoryElement( "g_story_2.290", 2, 0 );
			State.SetProgress( taskState, 4 );
		
		case 4:
			while ( (Global.Bool( "g_act2_ready_for_battle_of_mwari" ) == 0) && (Global.Bool( "g_skip_to_specific" ) != 1) )
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryscript : waititng for the player to recive batle of mwari call to arms\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			atomic
			{
				iAct2Mission20.Main();
			}
			
			State.SetProgress( taskState, 5 );
		
		case 5:
			while ( Global.Bool( "g_act2_mwari_siege_lifted" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MwariWarsStoryScript : Waititng for the player to complete the battle of Mwari, sleeping\n" );
				Task.Sleep( Task.Current(), 10.0 );
			}
			
			iUtilities.SendStoryElement( "g_story_2.300", 2, 0 );
			State.Destroy( Task.Current() );
	}
}

task local_function_12()
{
	hship playerShip = iShip.FindPlayerShip();
	string local_1 = iSim.ActiveWorld();
	string local_2;
	htask gCurrentActiveSystemScript;
	hstate state;
	
	debug Debug.PrintString( "iActTwo.Act2SystemMonitor: starting task up.\n" );
	
	schedule
	{
		every 0.50:
		{
			local_2 = iSim.ActiveWorld();
			
			debug atomic
			{
				Debug.PrintString( "iActTwo.Act2SystemMonitor : Start system is " );
				Debug.PrintString( local_1 );
				Debug.PrintString( "\n" );
				Debug.PrintString( "iActTwo.Act2SystemMonitor : Current system is " );
				Debug.PrintString( local_2 );
				Debug.PrintString( "\n" );
			}
			
			if ( Global.Exists( "g_dagda_waypoints" ) && !( local_2 == "map:/geog/badlands/dagda" ) )
			{
				Group.Destroy( Group.Cast( Global.Handle( "g_dagda_waypoints" ) ), true );
				Global.Destroy( "g_dagda_waypoints" );
			}
			
			if ( !( local_2 == local_1 ) )
			{
				do
				{
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( iSim.IsCapsuleJumping( playerShip ) );
				
				local_1 = local_2;
				
				if ( local_2 == "map:/geog/badlands/hoffers_wake" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Hoffers Wake system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					gCurrentActiveSystemScript = none;
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/coyote" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Coyote system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_coyote_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_coyote_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for coyote doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start CoyoteStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming coyote task from state\n" );
							state = State.Cast( Global.Handle( "g_coyote_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript = none;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/dagda" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Dagda system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_dagda_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_dagda_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for dagda doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start DagdaStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming dagda task from state\n" );
							state = State.Cast( Global.Handle( "g_dagda_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript == false;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/dante" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Dante system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					gCurrentActiveSystemScript = none;
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/eureka" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Eureka system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_eureka_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_eureka_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for eureka doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start EurekaStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming eureka task from state\n" );
							state = State.Cast( Global.Handle( "g_eureka_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript == false;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/firefrost" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Firefrost system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_firefrost_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_firefrost_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for firefrost doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start FirefrostStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming firefrost task from state\n" );
							state = State.Cast( Global.Handle( "g_firefrost_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript = none;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/kompira" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Kompira system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_kompira_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_kompira_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for kompira doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start KompiraStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming kompira task from state\n" );
							state = State.Cast( Global.Handle( "g_kompira_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript = none;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/mwari" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Mwari system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_mwari_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_mwari_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for mwari doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start MwariStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming mwari task from state\n" );
							state = State.Cast( Global.Handle( "g_mwari_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript = none;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else if ( local_2 == "map:/geog/badlands/santa_romera" )
				{
					debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has entered the Santa Romera system\n" );
					gCurrentActiveSystemScript = Task.Cast( Global.Handle( "g_current_active_system_script" ) );
					Task.Halt( gCurrentActiveSystemScript );
					
					if ( Global.Bool( "g_santaromera_script_complete" ) == 0 )
					{
						if ( Global.Handle( "g_santa_romera_state" ) == none )
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Task for santa romera doesn't exist starting a fresh\n" );
							gCurrentActiveSystemScript = start SantaRomeraStoryScript();
						}
						else
						{
							debug Debug.PrintString( "iActTwo.Act2SystemMonitor : Resuming santa romera task from state\n" );
							state = State.Cast( Global.Handle( "g_santa_romera_state" ) );
							State.Restore( state );
							gCurrentActiveSystemScript = State.Task( state );
						}
					}
					else
					{
						gCurrentActiveSystemScript = none;
					}
					
					Global.SetHandle( "g_current_active_system_script", gCurrentActiveSystemScript );
				}
				else debug Debug.PrintString( "iActTwo.Act2SystemMonitor : player has changed system, but it's not one I'm fussed about or know about\n" );
			}
			else
			{
				debug Debug.PrintString( "iActTwo.Act2systemMonitor : player has not changed system, sleeping\n" );
				Task.Sleep( Task.Current(), 1.0 );
			}
		}
	}
}

task AlliedSearchEncounters()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	hgroup group;
	bool local_3 = false;
	hship playerShip = iShip.FindPlayerShip();
	bool local_5 = false;
	bool local_6 = false;
	int convoResponse;
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			do
			{
				Task.Sleep( Task.Current(), 300 + Math.RandomInt( 300, 1000 ) );
				
				if ( !( iSim.ActiveWorld() == "map:/geog/badlands/firefrost" ) && (!( iSim.ActiveWorld() == "map:/geog/badlands/dante" ) && !( iSim.ActiveWorld() == "map:/geog/badlands/mwari" )) )
				{
					debug Debug.PrintString( "iAct2.AlliedSearchEncounters : generating an encounter with a league patrol searching for a Marauder Base\n" );
					group = local_function_9();
					iAI.GiveApproachOrder( group, playerShip );
					
					do
					{
						if ( Sim.DistanceBetween( Group.Leader( group ), playerShip ) > 2000000.0 )
						{
							debug Debug.PrintString( "iActTwo.AlliedSearchEncounters : player has left the allied encounter far behind, killing the ships\n" );
							local_3 = true;
							Group.Destroy( group, true );
							local_5 = false;
							local_6 = false;
						}
						else if ( (Sim.DistanceBetween( Group.Leader( group ), playerShip ) < 50000.0) && !local_5 )
						{
							iConversation.Begin();
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_wassup_cal" );
							iConversation.Say( none, "name_clay", "a2_master_dialogue_clay_looks_like_one_of_our_patrols" );
							iConversation.End();
							local_5 = true;
						}
						else if ( iAI.IsOrderComplete( Group.Leader( group ) ) && !local_6 )
						{
							iConversation.Begin();
							iConversation.AddResponse( "a2_master_option_cal_any_sign_of_the_marauders", "a2_master_option_cal_any_sign_of_the_marauders" );
							iConversation.AddResponse( "a2_master_dialogue_cal_hows_things", "a2_master_dialogue_cal_hows_things" );
							convoResponse = iConversation.Ask( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_didnt_expect_to_see_you_around_these_parts_cal" );
							
							if ( convoResponse == 1 )
							{
								switch ( Math.RandomInt( 1, 4 ) )
								{
									case 1:
										iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_not_a_sasuage_had_a_few_run_ins_with_their_patols" );
										break;
									
									case 2:
										iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_weve_turned_this_system_upside_down" );
										break;
									
									case 3:
										iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_ninety_nine_percent_sure_that_there_ait_no_marauder_base_here" );
										break;
									
									case 4:
										iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_reackon_theres_no_marauder_bases" );
										break;
								}
							}
							else switch ( Math.RandomInt( 1, 6 ) )
							{
								case 1:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_oh_yknow_could_be_better" );
									break;
								
								case 2:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_things_would_be_a_whole_lot_better" );
									break;
								
								case 3:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_pretty_good_we_whooped_a_marauder_patrol" );
									break;
								
								case 4:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_looking_up_now_we_got_the_marauders_on_the_run" );
									break;
								
								case 5:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_things_are_good_cal_and_would_be_better_of_we_could_find_that_damn_marauder_base" );
									break;
								
								case 6:
									iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_dont_ask" );
									break;
							}
							
							iConversation.Say( Group.Leader( group ), "", "a2_master_dialogue_league_patrol_gotta_fly_weve_got_a_few_more_places_to_search" );
							iConversation.End();
							local_6 = true;
							iEscort.Goose( group, 60.0, 8000.0, true );
							Task.Detach( start iScriptedOrders.LagrangeHandler( group, "Random" ) );
						}
						else
						{
							debug Debug.PrintString( "iActTwo.AlliedSearchEncounters : Allied patrol are attempting to approach the playr, but nothing interesting is happening, sleeping\n" );
							Task.Sleep( Task.Current(), 2.0 );
						}
					}
					while ( !local_3 );
				}
			}
			while ( Global.Bool( "g_act2_wolfs_lair_complete" ) == 0 );
			
			State.Destroy( Task.Current() );
	}
}

task MasterScript()
{
	htask currentTask = Task.Current();
	hstate taskState = State.Find( currentTask );
	int local_2;
	hship playerShip = iShip.FindPlayerShip();
	hmapentity alexanderSentryStation = iMapEntity.FindByNameInSystem( " Alexander Sentry Station ", "map:/geog/badlands/hoffers_wake" );
	hmapentity mapentity;
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	if ( iUtilities.SkipAct( "Act Two: The Badlands", 2 ) )
	{
		debug Debug.PrintString( "iActTwo.MasterScript: skipping act two, doing mission stubs.\n " );
		iAct2Mission01.Stub();
		iAct2Mission02.Stub();
		iAct2Mission03.Stub();
		iAct2Mission04.Stub();
		iAct2Mission05.Stub();
		Task.Detach( start HofferCreationHandler() );
		iAct2Mission07.Stub();
		iAct2Mission08.Stub();
		iAct2Mission10.Stub();
		iAct2Mission11.Stub();
		
		do
		{
			Task.Sleep( Task.Current(), 0.10 );
		}
		while ( iSim.IsCapsuleJumping( playerShip ) );
		
		iSim.SetIndestructable( playerShip, true );
		iCutsceneUtilities.HandleAbort( start local_function_10( local_2 ) );
		iSim.SetIndestructable( playerShip, false );
		Object.RemoveProperty( alexanderSentryStation, "reactive_exception" );
		mapentity = iStartSystem.MovePlayerBase( "map:/geog/badlands/hoffers_wake", "map:/geog/badlands/santa_romera" );
		
		atomic
		{
			Sim.PlaceRelativeTo( playerShip, mapentity, 5000.0, 500.0, 6000.0 );
			Sim.PointAt( playerShip, mapentity );
		}
		
		iAct2Mission13.Stub();
		iAct2Mission18.Stub();
		iAct2Mission20.Stub();
		iAct2Mission22.Stub();
		iAct2Mission24.Stub();
		local_function_11();
		State.Destroy( Task.Current() );
		iGame.NextAct( "iActThree" );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "League" ), 475, 1, 377, 7, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "League" ), 475, 1, 377, 7, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 517, 1, 32, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 532, 1, 12, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 534, 1, 7, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 593, 1, 13, 1, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "The Oman" ), 594, 1, 372, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 195, 1, 25, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "The Oman" ), 169, 1, 462, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 247, 1, 49, 2, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 571, 1, 19, 3, 3 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 555, 1, 38, 2, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 305, 1, 22, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 570, 1, 20, 1, 3 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "The Oman" ), 594, 1, 55, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 302, 1, 8, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 302, 1, 10, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 303, 1, 12, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 303, 1, 11, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 568, 1, 32, 1, 3 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 581, 1, 14, 1, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 264, 1, 15, 1, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 309, 1, 16, 3, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 590, 1, 12, 2, 4 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 574, 1, 10, 2, 5 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 526, 1, 18, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 223, 1, 45, 3, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 194, 1, 21, 2, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "Independent" ), 196, 1, 48, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "Independent" ), 590, 1, 382, 1, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 588, 1, 13, 2, 4 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 604, 1, 20, 2, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 605, 1, 33, 3, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 505, 1, 43, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 567, 1, 28, 2, 4 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 597, 1, 37, 3, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 228, 1, 46, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoType( iFaction.Find( "M.C.A." ), 507, 1, 536, 2, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 580, 1, 47, 4, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 221, 1, 15, 2, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 224, 1, 30, 4, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 231, 1, 44, 1, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 602, 1, 42, 1, 2 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 234, 1, 32, 3, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 609, 1, 35, 4, 1 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 507, 1, 25, 1, 0 ) );
		iTrade.OfferTrade( iTrade.CreateTradeForCargoCategory( iFaction.Find( "M.C.A." ), 507, 1, 38, 1, 0 ) );
		return;
	}
	
	if ( iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_1" ) ) )
	{
		start local_function_12();
	}
	else if ( (Global.Bool( "g_skip_to_specific" ) == 1) && !( Global.String( "g_skip_to_mission" ) == "The Great Escape?" ) )
	{
		start local_function_12();
	}
	
	local_function_1( 0 );
	debug Debug.PrintString( "iChapterOne.PiracyRatingTracker - Commencing Act Two Chapter Script.\n" );
	
	switch ( State.Progress( taskState ) )
	{
		case 0:
			iAct2Mission01.Main();
			State.SetProgress( taskState, 1 );
		
		case 1:
			schedule
			{
				every 2.0:
				{
					if ( Global.Bool( "g_act2_survivors_rescued" ) == 1 )
					{
						debug Debug.PrintString( "iActTwo.MasterScript - player has completed act 02 Mission 01 - Pickin up the pieces.\n" );
						break;
					}
					else debug Debug.PrintString( "iActTwo.MasterScript - Still waiting for player to complete act 02 Mission 01 - Picking up the pieces.\n" );
				}
			}
			
			debug Debug.PrintString( "iActTwo.MasterScript - initilising story element S2.10.\n" );
			iObjectives.Add( "a2_master_objectives_look_help" );
			Global.SetInt( "g_story_2.10", 1 );
			State.SetProgress( taskState, 3 );
		
		case 3:
			while ( Global.Bool( "g_act2_ambassador_rescued" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MasterScript - Waiting for the player to complete act 02 mission 07 - the ambassador, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			
			iEmail.SendEmail( "a2_master_ambassador_mail_sender", "a2_master_ambassador_mail_subject", "html:/text/act_2/act2_master_ambassador", true );
			iUtilities.SendStoryElement( "g_story_2.170", 2, 0 );
			start MwariWarsStoryScript();
			
			atomic
			{
				iAct2Mission11.Main();
			}
			
			iUtilities.SendStoryElement( "g_story_2.190", 2, 0 );
			State.SetProgress( taskState, 4 );
		
		case 4:
			while ( Global.Bool( "g_act2_unification_complete" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MasterScript : waiting for the player to complete act 2 mission 11 - unification, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			
			iAct2Mission13.Main();
			State.SetProgress( taskState, 5 );
		
		case 5:
			while ( Global.Bool( "g_act2_kong_fracture_complete" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for the player to complete act 2 mission 13 - The kong Fracture, Sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			
			debug Debug.PrintString( "iActTwo.MasterScript : sending story sequence 2.200\n" );
			iUtilities.SendStoryElement( "g_story_2.200", 2, 0 );
			debug Debug.PrintString( "iActTwo.MasterScript : Starting gangster gen for wolpack encounters\n" );
			iGangsterIncidentGen.SetActive( true );
			iGangsterIncidentGen.SetFaction( A_Marauders );
			iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 4 );
			iGangsterIncidentGen.SetNumberOfStationAttackersVar( 6 );
			iGangsterIncidentGen.SetDelayCheck( 37.0 );
			Task.Detach( start iGangsterIncidentGen.GangsterWarGenerator() );
			State.SetProgress( taskState, 6 );
		
		case 6:
			iUtilities.SendStoryElement( "g_story_2.210", 2, 0 );
			iUtilities.SendStoryElement( "g_story_2.180", 2, 0 );
			start HofferRevealMonitor();
			State.SetProgress( taskState, 7 );
		
		case 7:
			if ( Global.Bool( "g_skip_to_specific" ) != 1 )
			{
				do
				{
					debug Debug.PrintString( "iActTwo.MasterScript : waiting for the player to read the e-mail about plans to move the players base\n" );
					Task.Sleep( Task.Current(), 2.0 );
				}
				while ( !iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_180" ) ) );
			}
			
			if ( Global.Bool( "g_skip_to_specific" ) != 1 )
			{
				iSim.SetIndestructable( playerShip, true );
				iCutsceneUtilities.HandleAbort( start local_function_10( local_2 ) );
				Object.RemoveProperty( alexanderSentryStation, "reactive_exception" );
			}
			
			mapentity = iStartSystem.MovePlayerBase( "map:/geog/badlands/hoffers_wake", "map:/geog/badlands/santa_romera" );
			
			atomic
			{
				Sim.PlaceRelativeTo( playerShip, mapentity, 5000.0, 500.0, 6000.0 );
				Sim.PointAt( playerShip, mapentity );
				iSim.SetIndestructable( playerShip, false );
				iAI.ClearAutopilot();
			}
			
			Global.SetBool( "g_act2_base_has_moved", true );
			State.SetProgress( taskState, 8 );
		
		case 8:
			do
			{
				debug Debug.PrintString( "iActTwo.MasterScript : waiting for the player base to be moved to anta Romera, Sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Global.Bool( "g_act2_base_has_moved" ) == 0 );
			
			State.SetProgress( taskState, 11 );
		
		case 11:
			iAct2Mission18.Main();
			State.SetProgress( taskState, 12 );
		
		case 12:
			do
			{
				debug Debug.PrintString( "iActTwo.MasterScript : waiting for player to complete act 02 mission 18 - momma wolf, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Global.Bool( "g_act2_mommma_wolf_destroyed" ) == 0 );
			
			iUtilities.SendStoryElement( "g_story_2.270", 2, 0 );
			start AlliedSearchEncounters();
			iUtilities.SendStoryElement( "g_story_2.260", 2, 0 );
			iUtilities.SendStoryElement( "g_story_2.280", 2, 0 );
			State.SetProgress( taskState, 14 );
		
		case 14:
			while ( Global.Bool( "g_act2_got_hyperspace_tracker" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for the player to get his hands on the hyperspace tracker\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			
			iAct2Mission22.Main();
			State.SetProgress( taskState, 15 );
		
		case 15:
			iGangsterIncidentGen.SetActive( true );
			iGangsterIncidentGen.SetFaction( A_Marauders );
			iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 4 );
			iGangsterIncidentGen.SetNumberOfStationAttackersVar( 6 );
			iGangsterIncidentGen.SetDelayCheck( 25.0 );
			Task.Detach( start iGangsterIncidentGen.GangsterWarGenerator() );
			
			do
			{
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for the player to complete act 2 mission 22 - wolfs lair, sleeping\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Global.Bool( "g_act2_wolfs_lair_complete" ) == 0 );
			
			iGangsterIncidentGen.SetActive( true );
			iGangsterIncidentGen.SetFaction( A_Marauders );
			iGangsterIncidentGen.SetNumberOfVesselAttackersVar( 4 );
			iGangsterIncidentGen.SetNumberOfStationAttackersVar( 6 );
			iGangsterIncidentGen.SetDelayCheck( 45.0 );
			State.SetProgress( taskState, 16 );
		
		case 16:
			do
			{
				Task.Sleep( Task.Current(), 1.0 );
			}
			while ( !Global.Exists( "g_revealed_hoffer" ) );
			
			iUtilities.SendStoryElement( "g_story_2.320", 2, 0 );
			State.SetProgress( taskState, 17 );
		
		case 17:
			if ( Global.Bool( "g_skip_to_specific" ) == 1 )
			{
				start FirefrostStoryScript();
				start SantaRomeraStoryScript();
				start MwariStoryScript();
				start KompiraStoryScript();
			}
			
			if ( Global.Bool( "g_skip_to_specific" ) == 0 )
			{
				if ( !Object.PropertyExists( taskState, "a2_m24_waiter" ) )
				{
					Object.AddIntProperty( taskState, "a2_m24_waiter", 0 );
				}
				
				do
				{
					Object.SetIntProperty( taskState, "a2_m24_waiter", Object.IntProperty( taskState, "a2_m24_waiter" ) + 1 );
					Task.Sleep( Task.Current(), 1.0 );
				}
				while ( Object.IntProperty( taskState, "a2_m24_waiter" ) < 120 );
				
				Object.RemoveProperty( taskState, "a2_m24_waiter" );
			}
			
			iAct2Mission24.Main();
			State.SetProgress( taskState, 18 );
		
		case 18:
			do
			{
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for player to complete act 2 mission 24 - Hide And Seek.\n" );
				Task.Sleep( Task.Current(), 2.0 );
			}
			while ( Global.Bool( "g_act2_dante_system_scouted" ) == 0 );
			
			if ( (Global.Bool( "g_skip_to_specific" ) == 1) && (Global.Int( "g_skip_to_mission_number" ) != 25) )
			{
				do
				{
					Task.Sleep( Task.Current(), 500.0 );
				}
				while ( 1 );
			}
			
			State.SetProgress( taskState, 19 );
		
		case 19:
			if ( (Global.Bool( "g_act2_mwari_siege_lifted" ) == 0) && (iEmail.Find( "html:/text/act_2/act2_master_hoffermail_mwari" ) == false) )
			{
				iEmail.SendEmail( "a2_master_hoffer_mail_sender", "a2_m13_email_subject", "html:/text/act_2/act2_master_hoffermail_mwari", true );
			}
			
			while ( Global.Bool( "g_act2_mwari_siege_lifted" ) == 0 )
			{
				Task.Sleep( Task.Current(), 1.0 );
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for the player complete clear seige in Mwari\n" );
			}
			
			iAct2Mission25.Main();
			State.SetProgress( taskState, 20 );
		
		case 20:
			while ( Global.Bool( "g_skip_to_specific" ) == 1 )
			{
				Task.Sleep( Task.Current(), 1.0 );
			}
			
			while ( Global.Bool( "g_act2_marauders_defeated" ) == 0 )
			{
				debug Debug.PrintString( "iActTwo.MasterScript : Waiting for the player complete act 2 Mission 25 - Marauder War\n" );
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			debug Debug.PrintString( "iActTwo.MasterScript : player has finished act two, smartass, shutting down act\n" );
			local_function_11();
			State.Destroy( Task.Current() );
			debug Debug.PrintString( "iActTwo.MasterScript : Calling Act Three\n" );
			iGame.NextAct( "iActThree" );
	}
}

task local_function_38()
{
	htask local_0;
	
	schedule
	{
		every 1.0:
		{
			debug Debug.PrintString( "iActTwo.BaseMasterScript - Checking to see if any new story sequences are needed....\n" );
			
			if ( Task.IsRunning( local_0 ) )
			{
				debug Debug.PrintString( "iActTwo.BaseMasterScript - A story sequence is currently running.\n" );
			}
			else
			{
				debug Debug.PrintString( "iActTwo.BaseMasterScript - No story sequences are currnetly runing, checking to see if any are waiting to run\n" );
				
				if ( Global.Bool( "g_act2_badlands_food_sorted" ) == 0 )
				{
					if ( (iInventory.NumberOfCargoType( CT_SeekerMines ) > 0) && (Global.Exists( "g_flagged_first_mine_done" ) == 0) )
					{
						Global.CreateBool( "g_flagged_first_mine_done", 2, true );
						iConversation.OneLiner( none, "name_jafs", "a2_m03_dialogue_c10_jafs_mine_is_ready" );
					}
					
					if ( (iInventory.NumberOfCargoType( CT_SeekerMines ) >= 10) && (Global.Exists( "g_flagged_made_all_mines" ) == 0) )
					{
						Global.CreateBool( "g_flagged_made_all_mines", 2, true );
						iConversation.OneLiner( none, "name_jafs", "a2_m03_dialogue_c11_jafs_mines_are_ready" );
						iConversation.OneLiner( none, "name_jafs", "a2_m03_dialogue_c11_jafs_you_deliver_one" );
					}
				}
				
				if ( iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_1" ) ) && (Global.Int( "g_story_2.10b" ) != 2) )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.10b has been activated\n" );
					local_0 = start local_function_13();
					Global.SetInt( "g_story_2.10b", 2 );
				}
				else if ( Global.Int( "g_story_2.10" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.10 has been activated\n" );
					local_0 = start local_function_14();
					Global.SetInt( "g_story_2.10", 2 );
				}
				else if ( Global.Int( "g_story_2.170" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.170 has been activated\n" );
					Global.SetInt( "g_story_2.170", 2 );
					local_0 = start local_function_15();
				}
				else if ( Global.Int( "g_story_2.190" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.190 has been activated\n" );
					Global.SetInt( "g_story_2.190", 2 );
					local_0 = start local_function_16();
				}
				else if ( Global.Int( "g_story_2.200" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.200 has been activated\n" );
					Global.SetInt( "g_story_2.200", 2 );
					local_0 = start local_function_17();
				}
				else if ( Global.Int( "g_story_2.180" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.180 has been activated\n" );
					Global.SetInt( "g_story_2.180", 2 );
					local_0 = start local_function_18();
				}
				else if ( Global.Int( "g_story_2.210" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.210 has been activated\n" );
					Global.SetInt( "g_story_2.210", 2 );
					local_0 = start local_function_19();
				}
				else if ( Global.Int( "g_story_2.220" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.220 has been activated\n" );
					Global.SetInt( "g_story_2.220", 2 );
					local_0 = start local_function_20();
				}
				else if ( Global.Int( "g_story_2.231" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.231 has been activated\n" );
					Global.SetInt( "g_story_2.231", 2 );
					local_0 = start local_function_21();
				}
				else if ( Global.Int( "g_story_2.230" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.230 has been activated\n" );
					Global.SetInt( "g_story_2.230", 2 );
					local_0 = start local_function_22();
				}
				else if ( Global.Int( "g_story_2.250" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.250 has been activated\n" );
					Global.SetInt( "g_story_2.250", 2 );
					local_0 = start local_function_23();
				}
				else if ( Global.Int( "g_story_2.270" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.270 has been activated\n" );
					Global.SetInt( "g_story_2.270", 2 );
					local_0 = start local_function_24();
				}
				else if ( Global.Int( "g_story_2.260" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.260 has been activated\n" );
					Global.SetInt( "g_story_2.260", 2 );
					local_0 = start local_function_25();
				}
				else if ( Global.Int( "g_story_2.160" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.160 has been activated\n" );
					Global.SetInt( "g_story_2.160", 2 );
					local_0 = start local_function_26();
				}
				else if ( Global.Int( "g_story_2.150" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.150 has been activated\n" );
					Global.SetInt( "g_story_2.150", 2 );
					local_0 = start local_function_27();
				}
				else if ( Global.Int( "g_story_2.290" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.290 has been activated\n" );
					Global.SetInt( "g_story_2.290", 2 );
					local_0 = start local_function_28();
				}
				else if ( Global.Int( "g_story_2.130" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.130 has been activated\n" );
					Global.SetInt( "g_story_2.130", 2 );
					local_0 = start local_function_29();
				}
				else if ( Global.Int( "g_story_2.140" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.140 has been activated\n" );
					Global.SetInt( "g_story_2.140", 2 );
					local_0 = start local_function_30();
				}
				else if ( Global.Int( "g_story_2.140b" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.140 has been activated\n" );
					Global.SetInt( "g_story_2.140b", 2 );
					local_0 = start local_function_31();
				}
				else if ( Global.Int( "g_story_2.300" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.300 has been activated\n" );
					Global.SetInt( "g_story_2.300", 2 );
					local_0 = start local_function_32();
				}
				else if ( Global.Int( "g_story_2.310" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.310 has been activated\n" );
					Global.SetInt( "g_story_2.310", 2 );
					local_0 = start local_function_33();
				}
				else if ( Global.Int( "g_story_2.320" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.320 has been activated\n" );
					Global.SetInt( "g_story_2.320", 2 );
					local_0 = start local_function_34();
				}
				else if ( Global.Int( "g_story_2.330" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.330 has been activated\n" );
					Global.SetInt( "g_story_2.330", 2 );
					local_0 = start local_function_35();
				}
				else if ( Global.Int( "g_story_2.280" ) == 1 )
				{
					debug Debug.PrintString( "iActTwo.BaseMasterScript : Story sequence 2.280 has been activated\n" );
					Global.SetInt( "g_story_2.280", 2 );
					local_0 = start local_function_36();
				}
				else if ( iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_150" ) ) && (iEmail.Read( iEmail.Find( "html:/text/act_2/act2_master_leaguemail_2_180" ) ) && ((Global.Bool( "g_act2_base_has_moved" ) == 1) && (Global.Exists( "g_told_about_hoffer" ) == 0))) )
				{
					Global.CreateBool( "g_told_about_hoffer", 2, true );
					local_0 = start local_function_37();
				}
				else debug Debug.PrintString( " iActTwo.MasterBaseScript - No story sequences are wating to be executed, sleeping for a bit...\n" );
			}
		}
	}
}

BaseMain()
{
	debug Debug.PrintString( "iActTwo.BaseMasterScript : base master script executed - launching the base message checker task\n" );
	start local_function_38();
	start iMissionGenerator.BaseMain();
}

Main()
{
	bool local_0 = false;
	int local_1;
	htask local_2;
	
	if ( Global.Int( "g_current_act" ) <= 1 )
	{
		debug Debug.PrintString( "iActTwo.ActTwoStart : initialising act two\n" );
		local_function_39();
		local_2 = start MasterScript();
		Task.Detach( local_2 );
		Global.SetInt( "g_current_act", 2 );
		local_0 = true;
	}
	else
	{
		debug Debug.PrintString( "iActTwo.ActTwoStart : Act Two has already been initialised.\n" );
		
		if ( Global.Exists( "g_current_active_system_script" ) == 0 )
		{
			Global.CreateHandle( "g_current_active_system_script", 2, none );
			
			if ( !Global.Exists( "g_hoffers_wake_state" ) )
			{
				Global.CreateHandle( "g_hoffers_wake_state", 2, none );
			}
			
			if ( !Global.Exists( "g_coyote_state" ) )
			{
				Global.CreateHandle( "g_coyote_state", 2, none );
			}
			
			if ( !Global.Exists( "g_kompira_state" ) )
			{
				Global.CreateHandle( "g_kompira_state", 2, none );
			}
			
			if ( !Global.Exists( "g_eureka_state" ) )
			{
				Global.CreateHandle( "g_eureka_state", 2, none );
			}
			
			if ( !Global.Exists( "g_firefrost_state" ) )
			{
				Global.CreateHandle( "g_firefrost_state", 2, none );
			}
			
			if ( !Global.Exists( "g_dagda_state" ) )
			{
				Global.CreateHandle( "g_dagda_state", 2, none );
			}
			
			if ( !Global.Exists( "g_mwari_state" ) )
			{
				Global.CreateHandle( "g_mwari_state", 2, none );
			}
			
			if ( !Global.Exists( "g_dante_state" ) )
			{
				Global.CreateHandle( "g_dante_state", 2, none );
			}
			
			if ( !Global.Exists( "g_santa_romera_state" ) )
			{
				Global.CreateHandle( "g_santa_romera_state", 2, none );
			}
			
			Text.Add( "csv:/text/act_2/act2_master" );
			Text.Add( "csv:/text/act_2/act2_master_addendum" );
			Text.Add( "csv:/text/act_2/act2_master_addendum2" );
			Text.Add( "csv:/text/act_2/act2_master_addendum3" );
			Text.Add( "csv:/text/act_2/act2_master_addendum4" );
		}
	}
	
	if ( local_0 )
	{
		return;
	}
	
	iUtilities.CreatePlayer( "", iMapEntity.FindByNameInSystem( "Lucrecia's Base", Global.String( "g_player_base_system" ) ) );
}

task local_function_10( int param_0_ )
{
	hgroup group = iCutsceneUtilities.GetKillGroup();
	int local_1;
	hship shipMegatransporterMove_0;
	hship shipMegatransporterMove_1;
	hship playerShip = iShip.FindPlayerShip();
	hmapentity lucreciasBase_0 = iMapEntity.FindByNameInSystem( "Lucrecia's Base", "map:/geog/badlands/hoffers_wake" );
	hsim waypoint_0;
	hsim waypoint_1;
	hship shipPlayerBaseMove;
	hmapentity alexanderLPoint_0 = iMapEntity.FindByNameInSystem( "Alexander L-Point", "map:/geog/badlands/hoffers_wake" );
	hmapentity alexanderLPoint_1 = iMapEntity.FindByNameInSystem( "Alexander L-Point", "map:/geog/badlands/santa_romera" );
	hmapentity alexanderSentryStation = iMapEntity.FindByNameInSystem( "Alexander Sentry Station", "map:/geog/badlands/hoffers_wake" );
	hmapentity lucreciasBase_1 = iMapEntity.FindByNameInSystem( "Lucrecia's Base", "map:/geog/badlands/santa_romera" );
	hsim local_13;
	hsim simDebris;
	
	iDirector.FadeOut( 1.0, 0.0, 0.0, 0.0 );
	Sim.Preload( "ini:/sims/custom/player_base_move/megatransporter_move" );
	Sim.Preload( "ini:/sims/custom/player_base_move/player_base_move" );
	simDebris = Sim.Create( "ini:/sims/regions/debris", "" );
	Sim.SetCullable( simDebris, false );
	Sim.PlaceAt( simDebris, lucreciasBase_1 );
	
	if ( alexanderSentryStation == false )
	{
		debug Debug.Error( "ARGH! can't find Alexander Sentry Station" );
	}
	
	Object.AddIntProperty( alexanderSentryStation, "reactive_exception", 1 );
	iStation.DisableReactiveInArea( alexanderSentryStation, 100000.0 );
	shipMegatransporterMove_0 = iShip.Create( "ini:/sims/custom/player_base_move/megatransporter_move", "a2_master_ship_name_freighter_1" );
	iPilotSetup.Generic( iShip.Cast( shipMegatransporterMove_0 ) );
	Group.AddSim( group, shipMegatransporterMove_0 );
	Sim.SetCullable( shipMegatransporterMove_0, false );
	shipMegatransporterMove_1 = iShip.Create( "ini:/sims/custom/player_base_move/megatransporter_move", "a2_master_ship_name_freighter_2" );
	iPilotSetup.Generic( iShip.Cast( shipMegatransporterMove_1 ) );
	Group.AddSim( group, shipMegatransporterMove_1 );
	Sim.SetCullable( shipMegatransporterMove_1, false );
	iDirector.Begin();
	Sim.PlaceRelativeTo( playerShip, lucreciasBase_0, 0.0, 0.0, 10000.0 );
	waypoint_1 = iUtilities.CreateWaypointRelativeTo( lucreciasBase_0, 0.0, 0.0, 0.0 );
	waypoint_0 = iUtilities.CreateWaypointRelativeTo( lucreciasBase_0, 0.0, 0.0, 10000.0 );
	Group.AddSim( group, waypoint_1 );
	Sim.PlaceRelativeTo( shipMegatransporterMove_0, lucreciasBase_0, 0.0, 500.0, 0.0 );
	Sim.PointAt( shipMegatransporterMove_0, waypoint_0 );
	Sim.PlaceRelativeTo( shipMegatransporterMove_1, lucreciasBase_0, -1.0, 0.0, -1.0 );
	Sim.PointAt( shipMegatransporterMove_1, waypoint_0 );
	iDirector.SetFocus( shipMegatransporterMove_0 );
	iDirector.SetSecondaryFocus( lucreciasBase_0 );
	iDirector.SetCamera( CAM_TwoShot );
	iDirector.FadeIn( 1.0, 0.0, 0.0, 0.0 );
	iAI.GiveDockOrder( shipMegatransporterMove_0, lucreciasBase_0 );
	iConversation.OneLiner( none, "a2_master_ship_name_freighter_1", "a2_master_dialogue_moving_freighter_one_moving_into_position" );
	Task.Sleep( Task.Current(), 3.0 );
	iDirector.SetFocus( shipMegatransporterMove_1 );
	iDirector.SetSecondaryFocus( lucreciasBase_0 );
	iDirector.SetCamera( CAM_TwoShot );
	iConversation.OneLiner( none, "a2_master_ship_name_freighter_2", "a2_master_dialogue_moving_freighter_two_ready" );
	Task.Sleep( Task.Current(), 3.0 );
	shipPlayerBaseMove = iShip.Create( "ini:/sims/custom/player_base_move/player_base_move", "The Base" );
	iPilotSetup.Generic( iShip.Cast( shipPlayerBaseMove ) );
	Group.AddSim( group, shipPlayerBaseMove );
	Sim.SetCullable( shipPlayerBaseMove, false );
	Sim.PlaceRelativeTo( playerShip, alexanderLPoint_0, 0.0, 0.0, 135000.0 );
	Sim.PlaceRelativeTo( shipPlayerBaseMove, alexanderLPoint_0, 0.0, 0.0, 35000.0 );
	Sim.PointAt( shipPlayerBaseMove, alexanderLPoint_0 );
	iStation.DisableReactiveInArea( alexanderLPoint_0, 100000.0 );
	Sim.PlaceRelativeTo( playerShip, shipPlayerBaseMove, -7000.0, -9000.0, 8000.0 );
	Sim.Destroy( shipMegatransporterMove_0 );
	Sim.Destroy( shipMegatransporterMove_1 );
	local_13 = iDirector.CreateDolly();
	iDirector.SetDollyCamera( local_13 );
	Sim.PlaceRelativeTo( local_13, shipPlayerBaseMove, -6000.0, -8000.0, 8000.0 );
	iDirector.SetFocus( shipPlayerBaseMove );
	Sim.SetVelocityLocalToSim( shipPlayerBaseMove, 0.0, 0.0, 2000.0 );
	Task.Sleep( Task.Current(), 12.0 );
	iDirector.FadeOut( 1.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 3.0 );
	Sim.PlaceRelativeTo( playerShip, lucreciasBase_1, 0.0, 1000000.0, -25000.0 );
	Sim.PlaceRelativeTo( shipPlayerBaseMove, lucreciasBase_1, 9000.0, 1008000.0, 8000.0 );
	Sim.PlaceRelativeTo( local_13, lucreciasBase_1, 7000.0, 1007000.0, 1000.0 );
	Sim.PointAt( shipPlayerBaseMove, lucreciasBase_1 );
	iDirector.SetFocus( shipPlayerBaseMove );
	Sim.SetVelocityLocalToSim( shipPlayerBaseMove, 0.0, 0.0, 2500.0 );
	iDirector.FadeIn( 1.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 3.0 );
	iConversation.OneLiner( none, "a2_master_ship_name_freighter_2", "a2_master_dialogue_moving_freighter_one_setting_down" );
	iConversation.OneLiner( none, "a2_master_ship_name_freighter_2", "a2_master_dialogue_moving_freighter_two_here_you_are" );
	Object.RemoveProperty( alexanderSentryStation, "reactive_exception" );
	iDirector.End();
}

task local_function_0( hship ship_, hisim param_1_ )
{
	hmapentity libertyLPoint = iMapEntity.FindByNameInSystem( "Liberty L-Point", "map:/geog/badlands/santa_romera" );
	hisim formhaultJumpAccelerator = iSim.Cast( iMapEntity.FindByNameInSystem( "Formhault Jump Accelerator", "map:/geog/gagarin/formhault" ) );
	hship shipMegatransporter;
	hship shipMegapod;
	hsim local_4;
	hsim simWaypoint_0;
	hsim simWaypoint_1;
	hsim simWaypoint_2;
	hgroup group = iCutsceneUtilities.GetKillGroup();
	int ii;
	float local_10;
	
	iCutsceneUtilities.EnablePlayerAutopilot();
	Text.Add( "csv:/text/act_2/act2_mission09" );
	iDirector.Begin();
	iDirector.FadeOut( 0.0, 0.0, 0.0, 0.0 );
	shipMegatransporter = iShip.Create( "ini:/sims/ships/utility/megatransporter", "a2_m09_Freighter" );
	Group.AddSim( group, shipMegatransporter );
	Sim.SetCullable( shipMegatransporter, false );
	
	for ( ii = 0; ii < 30; ++ii )
	{
		shipMegapod = iShip.Create( "ini:/sims/ships/utility/megapod", "" );
		iShip.Dock( shipMegapod, shipMegatransporter );
		Sim.SetCullable( shipMegapod, false );
		Group.AddSim( group, shipMegapod );
	}
	
	atomic
	{
		Sim.PlaceRelativeTo( ship_, param_1_, 3000.0, 2000.0, 8000.0 );
		Sim.PointAt( ship_, param_1_ );
		Sim.SetVelocity( ship_, 0.0, 0.0, 0.0 );
		
		if ( iWingmen.Count() != 0 )
		{
			iEscort.Goose( iWingmen.Group(), 0.0, 1.0, true );
		}
	}
	
	Sim.PlaceRelativeToInside( shipMegatransporter, param_1_, 0.0, 0.0, -5000.0 );
	local_4 = iDirector.CreateDolly();
	simWaypoint_0 = Sim.Create( "ini:/sims/nav/waypoint", "Dolly Start" );
	simWaypoint_1 = Sim.Create( "ini:/sims/nav/waypoint", "Dolly Finish" );
	simWaypoint_2 = Sim.Create( "ini:/sims/nav/waypoint", "waypoint" );
	Group.AddSim( group, local_4 );
	Group.AddSim( group, simWaypoint_0 );
	Group.AddSim( group, simWaypoint_1 );
	Group.AddSim( group, simWaypoint_2 );
	iDirector.SetDollyCamera( local_4 );
	iDirector.SetFocus( param_1_ );
	Sim.PlaceRelativeTo( simWaypoint_0, param_1_, -3000.0, 4000.0, 6000.0 );
	Sim.PlaceRelativeTo( simWaypoint_1, param_1_, 2500.0, 400.0, 4000.0 );
	iDirector.FadeIn( 1.0, 0.0, 0.0, 0.0 );
	iDirector.SetDirection( local_4, simWaypoint_0, simWaypoint_1, 8.0, 4.0 );
	Task.Sleep( Task.Current(), 1.0 );
	iDirector.SetCaption( "a2_master_text_caption_santa", 4.0 );
	Task.Sleep( Task.Current(), 7.0 );
	iDirector.FadeOut( 0.0, 0.0, 0.0, 0.0 );
	iDirector.SetDollyCamera( local_4 );
	iDirector.SetFocus( param_1_ );
	Sim.PlaceRelativeTo( simWaypoint_0, param_1_, 2500.0, 600.0, 4000.0 );
	Sim.PlaceRelativeTo( simWaypoint_1, param_1_, 2500.0, 600.0, -5000.0 );
	Sim.PlaceRelativeToInside( local_4, param_1_, 4500.0, 600.0, 0.0 );
	Sim.PointAt( local_4, param_1_ );
	iDirector.DollyLookForward( local_4 );
	iDirector.SetDirection( local_4, simWaypoint_0, simWaypoint_1, 15.0, 4.0 );
	iDirector.FadeIn( 1.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 5.0 );
	iComms.Shout( param_1_, "", "a2_master_dialogue_stc_freighter" );
	Task.Sleep( Task.Current(), 10.0 );
	iDirector.FadeOut( 0.0, 0.0, 0.0, 0.0 );
	Sim.Destroy( local_4 );
	local_4 = iDirector.CreateDolly();
	Group.AddSim( group, local_4 );
	iDirector.SetDollyCamera( local_4 );
	iDirector.SetFocus( param_1_ );
	Sim.PlaceRelativeToInside( local_4, shipMegatransporter, 500.0, 100.0, 0.0 );
	Sim.PlaceRelativeTo( simWaypoint_0, local_4, 10.0, 10.0, 10.0 );
	Sim.PlaceRelativeTo( simWaypoint_2, param_1_, 0.0, 0.0, 20000.0 );
	iDirector.FadeIn( 0.0, 0.0, 0.0, 0.0 );
	iPilotSetup.Generic( shipMegatransporter );
	Task.Sleep( Task.Current(), 1.0 );
	iComms.Shout( shipMegatransporter, "", "a2_master_dialogue_freighter_roger" );
	iAI.GiveApproachOrder( shipMegatransporter, simWaypoint_2 );
	iStartSystem.JumpgateShieldOff( param_1_ );
	local_10 = 0.0;
	
	do
	{
		if ( local_10 < 1000.0 )
		{
			local_10 = ( local_10 + 3.0 );
			Sim.SetVelocityLocalToSim( shipMegatransporter, 0.0, 0.0, local_10 );
		}
		
		Task.Sleep( Task.Current(), 0.10 );
	}
	while ( Sim.DistanceBetweenCentres( shipMegatransporter, param_1_ ) > 200.0 );
	
	iSim.CapsuleJump( shipMegatransporter, formhaultJumpAccelerator );
	Task.Sleep( Task.Current(), 5.0 );
	iStartSystem.JumpgateShieldOn( param_1_, true );
	Task.Sleep( Task.Current(), 2.0 );
	iDirector.FadeOut( 1.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 1.0 );
	iDirector.FadeIn( 0.0, 0.0, 0.0, 0.0 );
	iDirector.End();
	iCutsceneUtilities.DisablePlayerAutopilot();
}

