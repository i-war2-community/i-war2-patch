package iAct1Mission08;

uses Debug,
     Set,
     List,
     String,
     Global,
     Sim,
     Group,
     Math,
     Object,
     State,
     Task,
     Text,
     iSim,
     iShip,
     Subsim,
     iDockport,
     iLagrangePoint,
     iAI,
     iComms,
     iConversation,
     iCutsceneUtilities,
     iDirector,
     GUI,
     iEmail,
     iEscort,
     MapEnumerations,
     iFaction,
     iFormation,
     iMapEntity,
     iBody,
     iHabitat,
     CargoTypes,
     iInventory,
     iMissionTracker,
     iObjectives,
     iPilotSetup,
     iRemotePilot,
     INIFile,
     iUtilities,
     iCargo,
     iCargoScript,
     iShipCreation,
     iStation,
     iTrafficCreation;

provides Main,
         MissionHandler,
         Stub,
         league_dialogue_monitor;

prototype Main();
prototype Stub();
prototype local_function_11( hstate state_ );
prototype local_function_14();
prototype task local_function_0();
prototype hship local_function_2( hship ship_ );
prototype hgroup local_function_3();
prototype task local_function_1( hship ship_, hstate state_ );
prototype task league_dialogue_monitor( hgroup group_, hstate state_ );
prototype task local_function_12( hsim param_0_, hstate state_ );
prototype hgroup local_function_7();
prototype task local_function_4( hgroup group_, hship ship_ );
prototype hgroup local_function_9( hmapentity mapentity_, int param_1_ );
prototype task local_function_6( hsim param_0_, hship ship_ );
prototype task local_function_5( hship ship_0_, hship ship_1_ );
prototype task local_function_10( hsim param_0_, hship ship_, hgroup group_, hmapentity mapentity_, hsim param_4_, hstate state_ );
prototype hgroup local_function_8( hsim param_0_ );
prototype task local_function_13( hstate state_ );
prototype task MissionHandler();

Main()
{
	start local_function_0();
}

Stub()
{
	hfaction player = iFaction.Find( "Player" );
	hfaction league = iFaction.Find( "League" );
	
	Global.SetBool( "g_act1_league_initiation", true );
	iFaction.SetFeeling( player, league, 4.0 );
	iFaction.SetFeeling( league, player, 4.0 );
}

local_function_11( hstate state_ )
{
	hsim waypointGreenbackAgriOrbital1;
	hship playerShip = iShip.FindPlayerShip();
	
	waypointGreenbackAgriOrbital1 = iUtilities.CreateWaypointRelativeTo( iMapEntity.FindByName( "Greenback Agri-Orbital 1" ), 0.0, 900000.0, 0.0 );
	Object.AddHandleProperty( playerShip, "restart_waypoint", waypointGreenbackAgriOrbital1 );
	Object.AddHandleProperty( playerShip, "current_mission_state", state_ );
}

local_function_14()
{
	iObjectives.Remove( "a1_m08_objectives_goto" );
	iObjectives.Remove( "a1_m08_objectives_spray" );
	iObjectives.Remove( "a1_m08_objectives_meet" );
}

task local_function_0()
{
	htask local_0;
	int local_1;
	
	while ( iComms.IsInConversation() )
	{
		Task.Sleep( Task.Current(), 0.50 );
	}
	
	if ( !iUtilities.SkipMission( "League Initiation?" ) )
	{
		Task.Detach( local_0 = start MissionHandler() );
		return;
	}
	
	Stub();
	return;
}

hship local_function_2( hship ship_ )
{
	list localList = List.FromSet( Sim.Children( ship_ ) );
	int itemCount = List.ItemCount( localList );
	int ii;
	
	for ( ii = 0; ii < itemCount; ++ii )
	{
		if ( Object.PropertyExists( List.GetNth( localList, ii ), "droid" ) )
		{
			return iShip.Cast( List.GetNth( localList, ii ) );
		}
	}
	
	return none;
}

hgroup local_function_3()
{
	hgroup group = Group.Create();
	hship shipOldCorvette;
	hfaction league = iFaction.Find( "League" );
	
	if ( league == false )
	{
		debug Debug.Error( "iAct1Mission08: Unable to find League faction" );
	}
	
	shipOldCorvette = iShip.Create( "ini:/sims/ships/navy/old_corvette", "a1_m08_name_wilbert" );
	iSim.SetFaction( shipOldCorvette, league );
	iPilotSetup.GenericCargoPod( shipOldCorvette );
	iSim.SetIndestructable( shipOldCorvette, true );
	Group.AddSim( group, shipOldCorvette );
	shipOldCorvette = iShip.Create( "ini:/sims/ships/navy/fighter", "a1_m08_name_little" );
	iSim.SetFaction( shipOldCorvette, league );
	iPilotSetup.GenericCargoPod( shipOldCorvette );
	Group.AddSim( group, shipOldCorvette );
	return group;
}

task local_function_1( hship ship_, hstate state_ )
{
	hship playerShip = iShip.FindPlayerShip();
	
	schedule
	{
		every 1.0:
		{
			if ( State.Progress( state_ ) < 3 )
			{
				if ( Sim.Cast( ship_ ) != false )
				{
					if ( Sim.DistanceBetween( ship_, playerShip ) > 400000.0 )
					{
						State.SetProgress( state_, 8 );
						Sim.Destroy( ship_ );
					}
				}
				else
				{
					State.SetProgress( state_, 8 );
				}
			}
			else
			{
				return;
			}
		}
	}
}

task league_dialogue_monitor( hgroup group_, hstate state_ )
{
	bool local_0 = false;
	int local_1;
	int local_2;
	string local_3;
	hsim simWaypoint;
	hship groupLeader = iShip.Cast( Group.Leader( group_ ) );
	hship playerShip;
	hship ship;
	hfaction player = iFaction.Find( "Player" );
	hfaction league = iFaction.Find( "League" );
	
	schedule
	{
		every 5.0:
		{
			playerShip = iShip.FindPlayerShip();
			
			if ( Sim.Cast( groupLeader ) && (local_0 == 0) )
			{
				if ( Sim.DistanceBetween( playerShip, groupLeader ) <= 700.0 )
				{
					switch ( State.Progress( state_ ) )
					{
						case 0:
							iObjectives.SetState( "a1_m08_objectives_meet", OS_Succeeded );
							local_0 = true;
							iConversation.Begin();
							iConversation.AddResponse( "a1_m08_text_player_c1_option_1_yes", "a1_m08_dialogue_player_c1_option_1_yes" );
							iConversation.AddResponse( "a1_m08_text_player_c1_option_2_no", "a1_m08_dialogue_player_c1_option_2_no" );
							
							switch ( iConversation.Ask( groupLeader, "", "a1_m08_dialogue_league_c1_cal_there_you" ) )
							{
								case 1:
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c1_response_1_good_we_want" );
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c1_response_1_we_have_been" );
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c1_response_1_heres_the_droid" );
									ship = iShip.Cast( Set.FirstElement( Sim.Children( Group.Leader( group_ ) ) ) );
									iShip.Undock( ship, groupLeader );
									iRemotePilot.EnableRemoteConnection( ship, true );
									Task.Detach( start local_function_1( ship, state_ ) );
									simWaypoint = Sim.Create( "ini:/sims/nav/waypoint", "" );
									Sim.PlaceInFrontOf( simWaypoint, groupLeader, 100.0 );
									iAI.GiveApproachOrder( groupLeader, simWaypoint );
									State.SetProgress( state_, 2 );
									iObjectives.Add( "a1_m08_objectives_goto" );
									Task.Sleep( Task.Current(), 2.0 );
									Sim.Destroy( simWaypoint );
									break;
								
								case 2:
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c1_response_2_well_be_waiting" );
									Task.Sleep( Task.Current(), 20.0 );
									break;
							}
							
							iConversation.End();
							local_0 = false;
							break;
						
						case 3:
							local_0 = true;
							iConversation.Begin();
							iConversation.AddResponse( "a1_m08_text_player_c2_option_1_yes", "a1_m08_dialogue_player_c2_option_1_yes" );
							iConversation.AddResponse( "a1_m08_text_player_c2_option_2_no", "a1_m08_dialogue_player_c2_option_2_no" );
							
							switch ( iConversation.Ask( groupLeader, "", "a1_m08_dialogue_league_c2_did_you_do" ) )
							{
								case 1:
									if ( local_function_2( playerShip ) != false )
									{
										iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c2_response_1_and_the_drone" );
										iInventory.Add( CT_StealthProgram, 1 );
									}
									else
									{
										iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c2_response_1_what_have_you_done" );
									}
									
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c2_response_1_welcome" );
									State.SetProgress( state_, 5 );
									break;
								
								case 2:
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c2_response_2_failed" );
									iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c2_response_1_welcome" );
									State.SetProgress( state_, 5 );
							}
							
							iConversation.End();
							local_0 = false;
							break;
						
						case 8:
							local_0 = true;
							ship = iShip.Cast( Set.FirstElement( Sim.Children( Group.Leader( group_ ) ) ) );
							
							if ( Sim.Cast( ship ) != false )
							{
								iConversation.Begin();
								iConversation.Say( groupLeader, "", "a1_m08_dialogue_league_c1_response_1_heres_the_droid" );
								iShip.Undock( ship, groupLeader );
								iRemotePilot.EnableRemoteConnection( ship, true );
								Task.Detach( start local_function_1( ship, state_ ) );
								simWaypoint = Sim.Create( "ini:/sims/nav/waypoint", "" );
								Sim.PlaceInFrontOf( simWaypoint, groupLeader, 100.0 );
								iAI.GiveApproachOrder( groupLeader, simWaypoint );
								State.SetProgress( state_, 2 );
								iConversation.End();
								Task.Sleep( Task.Current(), 2.0 );
								Sim.Destroy( simWaypoint );
							}
							
							local_0 = false;
							break;
					}
				}
			}
		}
	}
}

task local_function_12( hsim param_0_, hstate state_ )
{
	bool local_0 = false;
	htask local_1;
	hgroup group;
	hship playerShip = iShip.FindPlayerShip();
	hship groupLeader;
	hship shipDrone;
	
	Object.AddBoolProperty( shipDrone, "droid", true );
	Sim.SetCullable( shipDrone, false );
	
	schedule
	{
		every 2.0:
		{
			if ( iUtilities.PlayerInRange( param_0_ ) && (local_0 == 0) )
			{
				local_0 = true;
				
				if ( iShip.Cast( shipDrone ) == false )
				{
					shipDrone = iShip.Create( "ini:/sims/ships/utility/drone", "a1_m08_name_paint_droid" );
					Object.AddBoolProperty( shipDrone, "droid", true );
					Sim.SetCullable( shipDrone, false );
				}
				
				if ( State.Progress( state_ ) == 1 )
				{
					State.SetProgress( state_, 0 );
				}
				
				atomic
				{
					group = local_function_3();
					groupLeader = iShip.Cast( Group.Leader( group ) );
					Sim.PlaceRelativeTo( groupLeader, param_0_, 0.0, 0.0, -500.0 );
					Sim.PointAt( groupLeader, playerShip );
					
					if ( State.Progress( state_ ) == 2 )
					{
						Sim.PlaceRelativeTo( shipDrone, groupLeader, 200.0, 0.0, 0.0 );
					}
					else
					{
						iShip.Dock( shipDrone, groupLeader );
					}
					
					iEscort.LineAbreast( group, 70.0, 8000.0, true );
				}
				
				local_1 = start league_dialogue_monitor( group, state_ );
			}
			else if ( !iUtilities.PlayerInRange( param_0_ ) && (local_0 == 1) )
			{
				local_0 = false;
				Group.Destroy( group, true );
			}
		}
		
		every 10.0:
		{
			if ( iUtilities.PlayerInRange( param_0_ ) && ((local_0 == 1) && Task.IsHalted( local_1 )) )
			{
				local_1 = start league_dialogue_monitor( group, state_ );
			}
		}
	}
}

hgroup local_function_7()
{
	hgroup group = Group.Create();
	hship shipCorpCruiserLeague;
	hfaction military = iFaction.Find( "Military" );
	int ii;
	
	if ( military == false )
	{
		debug Debug.Error( "iAct1Mission08: Unable to find Military faction" );
	}
	
	shipCorpCruiserLeague = iShip.Create( "ini:/sims/ships/corporate/corp_cruiser_league", "a1_m08_name_flag_ship" );
	iSim.SetFaction( shipCorpCruiserLeague, military );
	Sim.AvatarAddChannel( shipCorpCruiserLeague, "league_off", 1.0 );
	iPilotSetup.GenericCargoPod( shipCorpCruiserLeague );
	Group.AddSim( group, shipCorpCruiserLeague );
	
	for ( ii = 0; ii < 9; ++ii )
	{
		shipCorpCruiserLeague = iShip.Create( "ini:/sims/ships/navy/fighter", iShipCreation.ShipName( "Military", -1 ) );
		iSim.SetFaction( shipCorpCruiserLeague, military );
		Group.AddSim( group, shipCorpCruiserLeague );
	}
	
	return group;
}

task local_function_4( hgroup group_, hship ship_ )
{
	int groupCount;
	int ii;
	
	iConversation.OneLiner( Group.Leader( group_ ), "", "a1_m08_security_alert" );
	groupCount = Group.GroupCount( group_ );
	
	for ( ii = 0; ii < groupCount; ++ii )
	{
		if ( Object.PropertyExists( Group.Leader( Group.NthGroup( group_, ii ) ), "behaviour_script_handle" ) )
		{
			Task.Halt( Task.Cast( Object.HandleProperty( Group.Leader( Group.NthGroup( group_, ii ) ), "behaviour_script_handle" ) ) );
		}
	}
	
	iAI.GiveAttackOrder( group_, ship_ );
}

hgroup local_function_9( hmapentity mapentity_, int param_1_ )
{
	int local_0;
	hgroup group = Group.Create();
	int local_2;
	
	group = iTrafficCreation.CustomLocalSecurityPatrol( mapentity_, ST_CombatFighter, param_1_, A_Military, true );
	return group;
}

task local_function_6( hsim param_0_, hship ship_ )
{
	hsim waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, 0.0, 0.0, 100000.0 );
	hmapentity memnon = iMapEntity.FindByName( "Memnon" );
	hgroup group = iCutsceneUtilities.GetKillGroup();
	
	Group.AddSim( group, waypoint );
	iAI.ClearAutopilot();
	Sim.SetVelocity( ship_, 0.0, 0.0, 0.0 );
	Sim.PointAt( param_0_, waypoint );
	iAI.GiveApproachOrder( param_0_, waypoint );
	iDirector.Begin();
	iDirector.SetFocus( param_0_ );
	iDirector.SetSecondaryFocus( memnon );
	iDirector.SetCamera( CAM_TwoShot );
	iConversation.OneLiner( param_0_, "a1_m08_name_flag_ship", "a1_m08_dialogue_flag_ship_speaking_unaware" );
	iCutsceneUtilities.BuzzCamera( param_0_, -800.0, 0.0, 1600.0 );
	Task.Sleep( Task.Current(), 10.0 );
	iDirector.End();
}

task local_function_5( hship ship_0_, hship ship_1_ )
{
	iDirector.Begin();
	Sim.PlaceRelativeTo( ship_0_, ship_1_, -500.0, 50.0, -100.0 );
	Sim.PointAt( ship_0_, ship_1_ );
	Sim.CopyOrientation( ship_0_, ship_1_ );
	iDirector.SetFocus( ship_0_ );
	iDirector.SetSecondaryFocus( ship_1_ );
	iDirector.SetCamera( CAM_TwoShot );
	Task.Sleep( Task.Current(), 1.0 );
	iDirector.FadeOut( 2.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 1.0 );
	iConversation.OneLiner( ship_0_, "", "a1_m08_dialogue_paint_droid_sfx" );
	Sim.AvatarRemoveChannel( ship_1_, "league_off" );
	Sim.AvatarAddChannel( ship_1_, "league_on", 1.0 );
	Task.Sleep( Task.Current(), 1.50 );
	iDirector.FadeIn( 2.0, 0.0, 0.0, 0.0 );
	Task.Sleep( Task.Current(), 4.0 );
	iDirector.End();
}

task local_function_10( hsim param_0_, hship ship_, hgroup group_, hmapentity mapentity_, hsim param_4_, hstate state_ )
{
	hship playerShip;
	hsim local_1;
	hsim groupIter;
	float local_3;
	int local_4;
	int simCount = Group.SimCount( group_ );
	int ii;
	bool local_7 = false;
	bool local_8 = false;
	bool local_9 = false;
	bool local_10 = false;
	
	if ( Global.Exists( "g_player_ship_handle" ) )
	{
		playerShip = iShip.Cast( Global.Handle( "g_player_ship_handle" ) );
	}
	else
	{
		playerShip = iShip.FindPlayerShip();
	}
	
	iShip.HasFired( playerShip );
	
	schedule
	{
		every 1.0:
		{
			for ( ii = 0; ii < simCount; ++ii )
			{
				groupIter = Group.NthSim( group_, ii );
				
				if ( Sim.DistanceBetween( groupIter, ship_ ) < Sim.DistanceBetween( local_1, ship_ ) )
				{
					local_1 = groupIter;
				}
			}
			
			local_3 = iShip.BrightnessOf( ship_, local_1, 8000.0, false );
		}
		
		every 1.0:
		{
			local_4 = State.Progress( state_ );
			
			if ( (Sim.DistanceBetween( playerShip, mapentity_ ) < 8000.0) && (local_4 != 4) )
			{
				if ( !local_7 )
				{
					local_7 = true;
					start local_function_4( group_, playerShip );
				}
			}
			
			if ( (Sim.DistanceBetween( playerShip, mapentity_ ) < 19000.0) && (iShip.HasFired( playerShip ) && (local_4 != 4)) )
			{
				if ( !local_7 )
				{
					local_7 = true;
					start local_function_4( group_, playerShip );
				}
			}
			
			if ( ((local_3 >= 0.060) && local_10) && (local_4 != 4) )
			{
				if ( !local_7 )
				{
					local_7 = true;
					start local_function_4( group_, playerShip );
				}
			}
			
			if ( (local_3 >= 0.050) && (!local_10 && (iRemotePilot.ReturnCurrentRemoteVessel() == ship_)) )
			{
				iConversation.OneLiner( none, "name_clay", "a1_m08_dialogue_clay_flying_droid_too_fast" );
				local_10 = true;
				Task.Sleep( Task.Current(), 5.0 );
			}
			
			if ( ship_ != false )
			{
				if ( (Sim.DistanceBetween( ship_, param_0_ ) < 300.0) && (local_4 < 3) )
				{
					iCutsceneUtilities.HandleAbort( start local_function_5( ship_, iShip.Cast( param_0_ ) ) );
					iConversation.OneLiner( none, "name_clay", "a1_m08_clay_well_done" );
					iObjectives.SetState( "a1_m08_objectives_spray", OS_Succeeded );
					State.SetProgress( state_, 3 );
				}
			}
			else debug Debug.Error( "Unable to find droid in area" );
			
			if ( (local_4 == 3) && !local_9 )
			{
				if ( Sim.DistanceBetween( playerShip, param_0_ ) > 15000.0 )
				{
					local_9 = true;
					iCutsceneUtilities.HandleAbort( start local_function_6( param_0_, playerShip ) );
				}
			}
		}
	}
}

hgroup local_function_8( hsim param_0_ )
{
	hgroup group = Group.Create();
	hsim simContainerpod;
	int ii;
	
	for ( ii = 0; ii < 6; ++ii )
	{
		simContainerpod = Sim.Create( "ini:/sims/ships/utility/containerpod", "name_cargo_pod" );
		Group.AddSim( group, simContainerpod );
		iSim.SetSensorVisibility( iSim.Cast( simContainerpod ), false );
	}
	
	Sim.PlaceRelativeTo( Group.Leader( group ), param_0_, 100.0, 100.0, 100.0 );
	iFormation.Parade( group, 40.0, true );
	iFormation.Jiggle( group, 10.0, 350.0 );
	return group;
}

task local_function_13( hstate state_ )
{
	bool local_0 = false;
	int local_1;
	hgroup group_0;
	hgroup group_1;
	hgroup group_2;
	hship playerShip = iShip.FindPlayerShip();
	hship groupLeader;
	hmapentity memnonMilitarySystemDefenceDock = iMapEntity.FindByName( "Memnon Military System Defence Dock" );
	hsim waypoint = iUtilities.CreateWaypointRelativeTo( memnonMilitarySystemDefenceDock, -10000.0, 10000.0, 9500.0 );
	hship ship;
	
	Object.SetStringProperty( waypoint, "name", "a1_m08_name_munitions" );
	iStation.AddReactiveException( iHabitat.Cast( memnonMilitarySystemDefenceDock ) );
	iSim.SetSensorVisibility( iSim.Cast( memnonMilitarySystemDefenceDock ), true );
	
	schedule
	{
		every 2.0:
		{
			if ( iUtilities.PlayerInRange( memnonMilitarySystemDefenceDock ) && (local_0 == 0) )
			{
				local_0 = true;
				
				atomic
				{
					group_0 = local_function_7();
					group_2 = local_function_8( waypoint );
					group_1 = local_function_9( memnonMilitarySystemDefenceDock, 6 );
					groupLeader = iShip.Cast( Group.Leader( group_0 ) );
					Sim.PlaceRelativeTo( groupLeader, memnonMilitarySystemDefenceDock, 0.0, 0.0, 3500.0 );
					iFormation.Box( group_0, 40.0, true );
				}
				
				iSim.SetSensorVisibility( iSim.Cast( waypoint ), true );
				iConversation.OneLiner( none, "name_clay", "a1_m08_clay_that_munitions_store" );
				iObjectives.SetState( "a1_m08_objectives_goto", OS_Succeeded );
				iObjectives.Add( "a1_m08_objectives_spray" );
				ship = local_function_2( playerShip );
				start local_function_10( Group.Leader( group_0 ), ship, group_1, memnonMilitarySystemDefenceDock, waypoint, state_ );
			}
			else if ( !iUtilities.PlayerInRange( memnonMilitarySystemDefenceDock ) && (local_0 == 1) )
			{
				local_0 = false;
				Group.Destroy( group_0, true );
				Group.Destroy( group_1, true );
				Group.Destroy( group_2, true );
			}
		}
	}
}

task MissionHandler()
{
	bool local_0 = false;
	hsim waypoint;
	hmapentity greenbackAgriOrbital1 = iMapEntity.FindByName( "Greenback Agri-Orbital 1" );
	hstate taskState;
	hemail email;
	htask currentTask = Task.Current();
	hfaction player = iFaction.Find( "Player" );
	hfaction league = iFaction.Find( "League" );
	
	iMissionTracker.AddMission( Task.Current(), 1, 8 );
	Text.Add( "csv:/text/act_1/act1_mission08" );
	Text.Add( "csv:/text/act_1/act1_mission08_addendum" );
	taskState = State.Find( currentTask );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
	}
	
	local_function_11( taskState );
	email = iEmail.Find( "html:/text/act_1/act1_mission08_email" );
	
	if ( !email )
	{
		iEmail.SendEmail( "a1_m08_email_sender", "a1_m08_email_subject", "html:/text/act_1/act1_mission08_email", true );
		iMissionTracker.RemoveMission( Task.Current() );
		return;
	}
	else if ( !iEmail.Read( email ) )
	{
		iMissionTracker.RemoveMission( Task.Current() );
		return;
	}
	
	waypoint = iUtilities.CreateWaypointRelativeTo( greenbackAgriOrbital1, Math.Random( 3000.0, 5000.0 ), Math.Random( 3000.0, 5000.0 ), Math.Random( 3000.0, 5000.0 ) );
	Object.SetStringProperty( waypoint, "name", "a1_m08_name_league_waypoint" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), true );
	
	if ( State.Progress( taskState ) == 0 )
	{
		iObjectives.Add( "a1_m08_objectives_meet" );
	}
	
	start local_function_12( waypoint, taskState );
	
	schedule
	{
		every 2.0:
		{
			if ( (State.Progress( taskState ) == 2) && !local_0 )
			{
				local_0 = true;
				start local_function_13( taskState );
			}
			
			if ( (State.Progress( taskState ) == 5) || (State.Progress( taskState ) == 100) )
			{
				if ( State.Progress( taskState ) == 5 )
				{
					Global.SetBool( "g_act1_league_initiation", true );
					iFaction.SetFeeling( player, league, 4.0 );
					iFaction.SetFeeling( league, player, 4.0 );
				}
				else
				{
					atomic
					{
						Global.SetBool( "g_skip_locked", false );
					}
					
					Task.Detach( start local_function_0() );
					local_function_14();
					Sim.Destroy( Sim.FindByName( "a1_m08_name_paint_droid" ) );
				}
				
				Sim.Destroy( waypoint );
				iSim.SetSensorVisibility( iMapEntity.FindByName( "Memnon Military System Defence Dock" ), false );
				State.Destroy( Task.Current() );
				iMissionTracker.RemoveMission( Task.Current() );
				return;
			}
		}
	}
}

