package iAct2Mission02;

uses Set,
     List,
     String,
     Global,
     Sim,
     Group,
     Math,
     Object,
     State,
     Task,
     Text,
     iSim,
     iShip,
     Subsim,
     iDockport,
     iLagrangePoint,
     iAI,
     iCargo,
     iComms,
     iConversation,
     MapEnumerations,
     iFaction,
     iFormation,
     iGame,
     iHUD,
     iMapEntity,
     iBody,
     iHabitat,
     iMissionTracker,
     iObjectives,
     iPilotSetup,
     iRangeCheck,
     iRemotePilot,
     iScore,
     INIFile,
     iUtilities,
     CargoTypes,
     iCargoScript,
     Debug,
     iShipCreation,
     iStation;

provides Main,
         MissionHandler,
         Stub;

prototype Main();
prototype Stub();
prototype local_function_21( hstate state_ );
prototype local_function_27();
prototype task local_function_0();
prototype task local_function_4( hship ship_ );
prototype hgroup local_function_2( hship ship_ );
prototype hgroup local_function_3( hship ship_ );
prototype hship local_function_1( hsim param_0_ );
prototype task local_function_6( hship ship_0_, hgroup group_, float param_2_ );
prototype task local_function_5( int param_0_, int param_1_ );
prototype task local_function_18( hsim param_0_, hship ship_0_, hstate state_ );
prototype hgroup local_function_9( hsim param_0_ );
prototype hgroup local_function_10( hgroup group_0_ );
prototype hgroup local_function_11( hgroup group_0_, hgroup group_1_ );
prototype bool local_function_7( hship ship_, hgroup group_ );
prototype hship local_function_8( hship ship_, hgroup group_ );
prototype task local_function_12( hship ship_, hgroup group_0_, hgroup group_1_, hstate state_ );
prototype task local_function_19( hsim param_0_, hship ship_, hstate state_ );
prototype task local_function_28();
prototype hgroup local_function_15( hsim param_0_ );
prototype local_function_14( hsim param_0_, bool param_1_ );
prototype local_function_13( hsim param_0_ );
prototype task local_function_16( hgroup group_, hship ship_, hstate state_ );
prototype task local_function_20( hsim param_0_, hship ship_, hstate state_ );
prototype hship local_function_23( hsim param_0_ );
prototype hship local_function_17( hship ship_0_ );
prototype task local_function_22( hship ship_0_, hsim param_1_, hship ship_1_, hship ship_2_, hstate state_ );
prototype hgroup local_function_24();
prototype bool local_function_25( hship ship_ );
prototype task local_function_26( hgroup group_, hship ship_0_, hstate state_ );
prototype task MissionHandler();

Main()
{
	Task.Detach( start local_function_0() );
}

Stub()
{
	Global.SetBool( "g_act2_oman_initiation_complete", true );
}

local_function_21( hstate state_ )
{
	hsim waypointDaruelSalam;
	hship playerShip = iShip.FindPlayerShip();
	
	waypointDaruelSalam = iUtilities.CreateWaypointRelativeTo( iMapEntity.FindByNameInSystem( "Daru el-Salam", "map:/geog/badlands/kompira" ), 0.0, 5000.0, 5000.0 );
	Object.AddHandleProperty( playerShip, "restart_waypoint", waypointDaruelSalam );
	Object.AddHandleProperty( playerShip, "current_mission_state", state_ );
	iScore.SetRestartPoint();
}

local_function_27()
{
	iObjectives.Remove( "a2_m02_objectives_return_courage" );
	iObjectives.Remove( "a2_m02_objectives_follow_cunning" );
	iObjectives.Remove( "a2_m02_objectives_complete_wisdom" );
	iObjectives.Remove( "a2_m02_objectives_fly_courage" );
	iObjectives.Remove( "a2_m02_objectives_fly_cunning" );
	iObjectives.Remove( "a2_m02_objectives_fly_wisdom" );
	iObjectives.Remove( "a2_m02_objectives_complete" );
	iObjectives.Remove( "a2_m02_objectives_wait" );
	iObjectives.Remove( "a2_m02_objectives_formate" );
}

task local_function_0()
{
	htask local_0;
	int local_1;
	
	while ( iComms.IsInConversation() )
	{
		Task.Sleep( Task.Current(), 0.50 );
	}
	
	if ( !iUtilities.SkipMission( "Oman Initiation??" ) )
	{
		Task.Detach( local_0 = start MissionHandler() );
		iMissionTracker.AddMission( local_0, 2, 2 );
		return;
	}
	
	Stub();
	return;
}

task local_function_4( hship ship_ )
{
	hsim waypoint = iUtilities.CreateWaypointAt( ship_ );
	
	schedule
	{
		every 1.0:
		{
			if ( (Sim.DistanceBetween( waypoint, ship_ ) > 1000.0) || (iRemotePilot.ReturnCurrentRemoteVessel() != ship_) )
			{
				Global.CreateBool( "g_player_cheating", 1, true );
				iConversation.End();
				Sim.Destroy( waypoint );
				return;
			}
		}
	}
}

hgroup local_function_2( hship ship_ )
{
	hgroup group = Group.Create();
	hsim simAsteroidL;
	int constant = 30;
	int ii;
	
	for ( ii = 0; ii < constant; ++ii )
	{
		if ( Math.RandomInt( 0, 1 ) == 1 )
		{
			simAsteroidL = Sim.Create( "ini:/sims/ships/utility/asteroid_l", "Ast" );
		}
		else
		{
			simAsteroidL = Sim.Create( "ini:/sims/ships/utility/asteroid_m", "Ast" );
		}
		
		Group.AddSim( group, simAsteroidL );
		Sim.PlaceNear( simAsteroidL, ship_, Math.Random( 300.0, 3000.0 ) );
		Sim.SetOrientationEuler( simAsteroidL, Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ) );
		iSim.SetSensorVisibility( iSim.Cast( simAsteroidL ), false );
	}
	
	return group;
}

hgroup local_function_3( hship ship_ )
{
	hfaction marauders = iFaction.Find( "Marauders" );
	hgroup group = Group.Create();
	hship shipFudgeMine;
	int constant = 40;
	int ii;
	
	for ( ii = 0; ii < constant; ++ii )
	{
		shipFudgeMine = iShip.Create( "ini:/sims/custom/act2_mission03/fudge_mine", "a2_m02_name_mine" );
		iSim.SetFaction( iSim.Cast( shipFudgeMine ), marauders );
		Group.AddSim( group, shipFudgeMine );
		Sim.PlaceNear( shipFudgeMine, ship_, Math.Random( 100.0, 2000.0 ) );
		Sim.SetOrientationEuler( shipFudgeMine, Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ) );
		Object.SetStringProperty( shipFudgeMine, "death_script", "iDeathScript.Explosives" );
		Object.AddFloatProperty( shipFudgeMine, "explosive_damage", 300.0 );
		Object.AddFloatProperty( shipFudgeMine, "explosive_radius", 200.0 );
	}
	
	return group;
}

hship local_function_1( hsim param_0_ )
{
	hship shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "a2_m02_name_gold" );
	
	iSim.SetFaction( shipFreightpod, iFaction.Find( "The Oman" ) );
	Sim.PlaceRelativeTo( shipFreightpod, param_0_, 10000.0, 0.0, 0.0 );
	iSim.SetIndestructable( shipFreightpod, true );
	return shipFreightpod;
}

task local_function_6( hship ship_0_, hgroup group_, float param_2_ )
{
	hship ship_1;
	hfaction marauders = iFaction.Find( "Marauders" );
	hfaction independent = iFaction.Find( "Independent" );
	bool local_3 = true;
	int simCount = Group.SimCount( group_ );
	float distance;
	int ii;
	
	do
	{
		if ( Object.FloatProperty( ship_0_, "hit_points" ) <= 0.0 )
		{
			iAI.PurgeOrders( group_ );
			return;
		}
		
		for ( ii = 0; ii < simCount; ++ii )
		{
			ship_1 = iShip.Cast( Group.NthSim( group_, ii ) );
			distance = Sim.DistanceBetween( ship_0_, ship_1 );
			
			if ( distance < 6000.0 )
			{
				if ( distance < 150.0 )
				{
					iSim.Kill( iSim.Cast( ship_1 ) );
				}
				else if ( !Object.PropertyExists( ship_1, "triggered" ) )
				{
					Object.AddIntProperty( ship_1, "triggered", 1 );
					iPilotSetup.GenericCargoPod( ship_1 );
					iSim.SetFaction( ship_1, marauders );
					iAI.GiveApproachOrderAdvanced( ship_1, ship_0_, 0.0, 0.0, false );
				}
			}
			else if ( distance > 6010.0 )
			{
				if ( Object.PropertyExists( ship_1, "triggered" ) )
				{
					Object.RemoveProperty( ship_1, "triggered" );
					iShip.RemovePilot( ship_1 );
					iSim.SetFaction( ship_1, independent );
				}
			}
		}
		
		Task.Sleep( Task.Current(), param_2_ );
	}
	while ( local_3 );
}

task local_function_5( int param_0_, int param_1_ )
{
	int local_0;
	
	schedule
	{
		every 1.0:
		{
			local_0 = param_1_ - (iGame.GameTime() - param_0_);
			
			if ( local_0 <= 0 )
			{
				Global.CreateBool( "g_times_up", 1, true );
				return;
			}
			
			iHUD.SetPrompt( String.Join( "a2_m02_name_elapsed_time+ +", iUtilities.ConvertSecondsToTime( local_0 ) ), "" );
		}
	}
}

task local_function_18( hsim param_0_, hship ship_0_, hstate state_ )
{
	bool local_0 = false;
	bool local_1 = false;
	bool local_2 = false;
	bool local_3 = false;
	int convoResponse;
	hgroup group_0;
	hgroup group_1;
	hship ship_1;
	htask local_8;
	
	schedule
	{
		every 0.50:
		{
			if ( (Sim.Cast( ship_0_ ) == false) || Global.Exists( "g_times_up" ) )
			{
				if ( Global.Exists( "g_times_up" ) )
				{
					Global.Destroy( "g_times_up" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_time_up" );
					iSim.Kill( ship_0_ );
				}
				else
				{
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_vessel_destroyed" );
				}
				
				iObjectives.SetState( "a2_m02_objectives_return_courage", OS_Failed );
				Task.Halt( local_8 );
				Task.Sleep( Task.Current(), 0.30 );
				iHUD.SetPrompt( "", "" );
				Group.Destroy( group_1, true );
				Group.Destroy( group_0, true );
				Sim.Destroy( ship_1 );
				Sim.Destroy( param_0_ );
				State.SetProgress( state_, 5 );
				return;
			}
			
			if ( iRemotePilot.ReturnCurrentRemoteVessel() == ship_0_ )
			{
				if ( (Sim.DistanceBetween( ship_0_, param_0_ ) < 10000.0) && !local_0 )
				{
					local_0 = true;
					ship_1 = local_function_1( param_0_ );
					group_0 = local_function_2( ship_1 );
					group_1 = local_function_3( ship_1 );
				}
				
				if ( (Sim.DistanceBetween( ship_0_, param_0_ ) < 800.0) && !local_3 )
				{
					local_3 = true;
					start local_function_4( ship_0_ );
					iObjectives.SetState( "a2_m02_objectives_fly_courage", OS_Succeeded );
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_here_lies" );
					}
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_at_the_centre" );
					}
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_this_must_be" );
					}
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						do
						{
							iConversation.Begin();
							iConversation.AddResponse( "a2_m02_text_yes", "" );
							iConversation.AddResponse( "a2_m02_text_repeat", "" );
							convoResponse = iConversation.Ask( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_c1_any_are_you_ready" );
							
							if ( convoResponse == 2 )
							{
								iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_here_lies" );
								iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_at_the_centre" );
								iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_this_must_be" );
								iConversation.End();
							}
						}
						while ( (convoResponse != 1) && !Global.Exists( "g_player_cheating" ) );
					}
					
					iConversation.End();
					Global.Destroy( "g_player_cheating" );
					iObjectives.Add( "a2_m02_objectives_return_courage" );
					
					do
					{
						Task.Sleep( Task.Current(), 0.10 );
					}
					while ( Sim.DistanceBetween( ship_0_, ship_1 ) > 5000.0 );
					
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_the_timer" );
					local_8 = start local_function_5( iGame.GameTime(), 90 );
					local_2 = true;
					Task.Detach( start local_function_6( ship_0_, group_1, 2.0 ) );
				}
				
				if ( local_3 )
				{
					if ( (Sim.DistanceBetween( ship_0_, param_0_ ) < 600.0) && iSim.IsDockedTo( ship_1, ship_0_ ) )
					{
						Task.Halt( local_8 );
						iHUD.SetPrompt( "", "" );
						iSim.Kill( ship_0_ );
						Sim.Destroy( param_0_ );
						Group.Destroy( group_1, true );
						Group.Destroy( group_0, true );
						Sim.Destroy( ship_1 );
						Object.SetIntProperty( state_, "courage", 1 );
						State.SetProgress( state_, 5 );
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_you_have_bested" );
						iObjectives.SetState( "a2_m02_objectives_return_courage", OS_Succeeded );
						return;
					}
				}
				
				if ( local_1 == 1 )
				{
					if ( local_0 )
					{
						iRemotePilot.DeactivateConnection();
						Task.Halt( local_8 );
						iHUD.SetPrompt( "", "" );
						iSim.Kill( ship_0_ );
						Sim.Destroy( param_0_ );
						Group.Destroy( group_1, true );
						Group.Destroy( group_0, true );
						Sim.Destroy( ship_1 );
						Object.SetIntProperty( state_, "courage", 1 );
						State.SetProgress( state_, 5 );
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_you_have_bested" );
						iObjectives.SetState( "a2_m02_objectives_return_courage", OS_Succeeded );
						return;
					}
				}
			}
			else if ( local_0 )
			{
				iRemotePilot.DeactivateConnection();
				iSim.Kill( ship_0_ );
				Sim.Destroy( param_0_ );
				Group.Destroy( group_1, true );
				Group.Destroy( group_0, true );
				Sim.Destroy( ship_1 );
				State.SetProgress( state_, 5 );
				iObjectives.SetState( "a2_m02_objectives_return_courage", OS_Failed );
				return;
			}
		}
	}
}

hgroup local_function_9( hsim param_0_ )
{
	hgroup group = Group.Create();
	hsim waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -1000.0, 0.0, 0.0 );
	
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_1" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), true );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -2000.0, 1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_2" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -3000.0, -1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_3" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -4000.0, 1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_4" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -5000.0, -1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_5" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -6000.0, 1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_6" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -7000.0, -1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_7" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	waypoint = iUtilities.CreateWaypointRelativeTo( param_0_, -8000.0, 1500.0, 0.0 );
	iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_waypoint_8" );
	iSim.SetSensorVisibility( iSim.Cast( waypoint ), false );
	Group.AddSim( group, waypoint );
	return group;
}

hgroup local_function_10( hgroup group_0_ )
{
	hgroup group_1 = Group.Create();
	hship shipGunstar;
	float local_2 = -2000.0;
	int constant = 4;
	int ii;
	
	for ( ii = 0; ii < constant; ++ii )
	{
		shipGunstar = iShip.Create( "ini:/sims/ships/navy/gunstar", String.Join( "a2_m02_name_gunstar+ +", String.FromInt( ii ) ) );
		iPilotSetup.GenericCargoPod( shipGunstar );
		Sim.PlaceRelativeTo( shipGunstar, Group.Leader( group_0_ ), local_2, 0.0, 0.0 );
		Group.AddSim( group_1, shipGunstar );
		local_2 = ( local_2 + -2000.0 );
	}
	
	return group_1;
}

hgroup local_function_11( hgroup group_0_, hgroup group_1_ )
{
	hgroup group_2 = Group.Create();
	hsim simAsteroidL;
	int simCount = Group.SimCount( group_0_ );
	int ii;
	
	for ( ii = 0; ii < simCount; ++ii )
	{
		simAsteroidL = Sim.Create( "ini:/sims/ships/utility/asteroid_l", "sn_generic_asteroid" );
		iSim.SetSensorVisibility( iSim.Cast( simAsteroidL ), false );
		iSim.SetIndestructable( iSim.Cast( simAsteroidL ), true );
		iUtilities.SimPlaceBetweenExact( simAsteroidL, Group.NthSim( group_0_, ii ), Group.NthSim( group_1_, 0 ), 300.0 );
		Sim.SetOrientationEuler( simAsteroidL, Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ), Math.Random( 10.0, 360.0 ) );
		Group.AddSim( group_2, simAsteroidL );
	}
	
	return group_2;
}

bool local_function_7( hship ship_, hgroup group_ )
{
	int simCount = Group.SimCount( group_ );
	int ii;
	
	for ( ii = 0; ii < simCount; ++ii )
	{
		if ( Sim.DistanceBetween( ship_, Group.NthSim( group_, ii ) ) < 500.0 )
		{
			return true;
		}
	}
	
	return false;
}

hship local_function_8( hship ship_, hgroup group_ )
{
	int local_0 = 0;
	float distance_0 = Sim.DistanceBetween( ship_, Group.Leader( group_ ) );
	float distance_1;
	int simCount = Group.SimCount( group_ );
	int ii;
	
	for ( ii = 0; ii < simCount; ++ii )
	{
		distance_1 = Sim.DistanceBetween( ship_, Group.NthSim( group_, ii ) );
		
		if ( distance_0 > distance_1 )
		{
			local_0 = ii;
			distance_0 = distance_1;
		}
	}
	
	return iShip.Cast( Group.NthSim( group_, local_0 ) );
}

task local_function_12( hship ship_, hgroup group_0_, hgroup group_1_, hstate state_ )
{
	bool local_0 = false;
	hsim groupLeader;
	hobject local_2;
	hobject local_3;
	hfaction marauders = iFaction.Find( "Marauders" );
	hfaction independent = iFaction.Find( "Independent" );
	hfaction theOman = iFaction.Find( "The Oman" );
	int simCount = Group.SimCount( group_0_ );
	int local_8;
	
	groupLeader = Group.Leader( group_0_ );
	iHUD.SetTarget( groupLeader );
	
	schedule
	{
		every 1.0:
		{
			if ( Sim.DistanceBetween( ship_, groupLeader ) < 300.0 )
			{
				iSim.SetSensorVisibility( iSim.Cast( groupLeader ), false );
				local_8 = ( local_8 + 1 );
				
				if ( local_8 == simCount )
				{
					State.SetProgress( state_, 6 );
					return;
				}
				
				groupLeader = Group.NthSim( group_0_, local_8 );
				iSim.SetSensorVisibility( iSim.Cast( groupLeader ), true );
				Task.Sleep( Task.Current(), 0.10 );
				iHUD.SetTarget( groupLeader );
			}
			
			if ( local_function_7( ship_, group_0_ ) && local_0 )
			{
				local_0 = false;
				iSim.SetHostile( iSim.Cast( local_3 ), false );
				iAI.PurgeOrders( local_3 );
			}
		}
		
		every 5.0:
		{
			if ( !local_function_7( ship_, group_0_ ) )
			{
				local_0 = true;
				local_2 = local_function_8( ship_, group_1_ );
				
				if ( local_2 != local_3 )
				{
					local_3 = local_2;
					iSim.SetHostile( iSim.Cast( local_3 ), true );
					iAI.GiveAttackOrder( local_3, ship_ );
				}
			}
		}
	}
}

task local_function_19( hsim param_0_, hship ship_, hstate state_ )
{
	bool local_0 = false;
	bool local_1 = false;
	hgroup group_0;
	hgroup group_1;
	hgroup group_2;
	int convoResponse;
	htask local_6;
	
	schedule
	{
		every 2.0:
		{
			if ( (Sim.Cast( ship_ ) == false) || Global.Exists( "g_times_up" ) )
			{
				Task.Halt( local_6 );
				iHUD.SetPrompt( "", "" );
				Group.Destroy( group_2, true );
				Group.Destroy( group_1, true );
				Group.Destroy( group_0, true );
				Sim.Destroy( param_0_ );
				
				if ( Global.Exists( "g_times_up" ) )
				{
					iSim.Kill( ship_ );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_timer_expired" );
				}
				else
				{
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_vessel_destroyed" );
				}
				
				iObjectives.SetState( "a2_m02_objectives_follow_cunning", OS_Failed );
				Global.Destroy( "g_times_up" );
				State.SetProgress( state_, 5 );
				return;
			}
			
			if ( iRemotePilot.ReturnCurrentRemoteVessel() == ship_ )
			{
				if ( (Sim.DistanceBetween( ship_, param_0_ ) < 5000.0) && !local_0 )
				{
					local_0 = true;
					group_0 = local_function_9( param_0_ );
					group_2 = local_function_10( group_0 );
					group_1 = local_function_11( group_0, group_2 );
					start local_function_4( ship_ );
					iObjectives.SetState( "a2_m02_objectives_fly_cunning", OS_Succeeded );
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_for_this" );
					}
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_you_have_x" );
					}
					
					if ( !Global.Exists( "g_player_cheating" ) )
					{
						do
						{
							iConversation.Begin();
							iConversation.AddResponse( "a2_m02_text_yes", "" );
							iConversation.AddResponse( "a2_m02_text_repeat", "" );
							convoResponse = iConversation.Ask( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_c1_any_are_you_ready" );
							
							if ( convoResponse == 2 )
							{
								iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_for_this" );
								iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_you_have_x" );
								iConversation.End();
							}
						}
						while ( (convoResponse != 1) && !Global.Exists( "g_player_cheating" ) );
					}
					
					iConversation.End();
					Global.Destroy( "g_player_cheating" );
					iObjectives.Add( "a2_m02_objectives_follow_cunning" );
					start local_function_12( ship_, group_0, group_2, state_ );
					local_6 = start local_function_5( iGame.GameTime(), 120 );
				}
				
				if ( State.Progress( state_ ) == 6 )
				{
					Task.Halt( local_6 );
					iHUD.SetPrompt( "", "" );
					iRemotePilot.DeactivateConnection();
					iSim.Kill( ship_ );
					Sim.Destroy( param_0_ );
					Group.Destroy( group_2, true );
					Group.Destroy( group_0, true );
					Group.Destroy( group_1, true );
					Object.SetIntProperty( state_, "cunning", 1 );
					State.SetProgress( state_, 5 );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_you_have" );
					iObjectives.SetState( "a2_m02_objectives_follow_cunning", OS_Succeeded );
					return;
				}
			}
			else if ( local_0 )
			{
				Task.Halt( local_6 );
				iHUD.SetPrompt( "", "" );
				iRemotePilot.DeactivateConnection();
				iSim.Kill( ship_ );
				Sim.Destroy( param_0_ );
				Group.Destroy( group_2, true );
				Group.Destroy( group_0, true );
				Group.Destroy( group_1, true );
				State.SetProgress( state_, 5 );
				iObjectives.SetState( "a2_m02_objectives_follow_cunning", OS_Failed );
				return;
			}
		}
	}
}

task local_function_28()
{
}

hgroup local_function_15( hsim param_0_ )
{
	hgroup group = Group.Create();
	hfaction theOman = iFaction.Find( "The Oman" );
	hship shipFreightpod;
	bool local_3 = false;
	int ii;
	int local_5;
	int local_6;
	int local_7;
	int local_8;
	int local_9;
	int random;
	
	for ( ii = 0; ii < 16; ++ii )
	{
		if ( (ii != 2) && ((ii != 5) && ((ii != 10) && (ii != 15))) )
		{
			while ( !local_3 )
			{
				random = Math.RandomInt( 0, 4 );
				
				if ( (random == 0) && (local_5 < 2) )
				{
					local_3 = true;
				}
				
				if ( (random == 1) && (local_6 < 2) )
				{
					local_3 = true;
				}
				
				if ( (random == 2) && (local_8 < 3) )
				{
					local_3 = true;
				}
				
				if ( (random == 3) && (local_7 < 2) )
				{
					local_3 = true;
				}
				
				if ( (random == 4) && (local_9 < 3) )
				{
					local_3 = true;
				}
			}
			
			local_3 = false;
			
			switch ( random )
			{
				case 0:
					shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
					Object.AddIntProperty( shipFreightpod, "cargo", 27 );
					Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
					Group.AddSim( group, shipFreightpod );
					iSim.SetIndestructable( shipFreightpod, true );
					local_5 = ( local_5 + 1 );
					break;
				
				case 1:
					shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
					Object.AddIntProperty( shipFreightpod, "cargo", 35 );
					Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
					Group.AddSim( group, shipFreightpod );
					iSim.SetIndestructable( shipFreightpod, true );
					local_6 = ( local_6 + 1 );
					break;
				
				case 2:
					shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
					Object.AddIntProperty( shipFreightpod, "cargo", 45 );
					Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
					Group.AddSim( group, shipFreightpod );
					iSim.SetIndestructable( shipFreightpod, true );
					local_8 = ( local_8 + 1 );
					break;
				
				case 3:
					shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
					Object.AddIntProperty( shipFreightpod, "cargo", 42 );
					Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
					Group.AddSim( group, shipFreightpod );
					iSim.SetIndestructable( shipFreightpod, true );
					local_7 = ( local_7 + 1 );
					break;
				
				case 4:
					shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
					Object.AddIntProperty( shipFreightpod, "cargo", 34 );
					Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
					Group.AddSim( group, shipFreightpod );
					iSim.SetIndestructable( shipFreightpod, true );
					local_9 = ( local_9 + 1 );
					break;
			}
		}
		else
		{
			if ( ii == 2 )
			{
				shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
				Object.AddIntProperty( shipFreightpod, "done", 1 );
				Object.AddIntProperty( shipFreightpod, "cargo", 34 );
				Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
				iSim.SetFaction( shipFreightpod, theOman );
				iSim.SetIndestructable( shipFreightpod, true );
				Group.AddSim( group, shipFreightpod );
			}
			
			if ( ii == 5 )
			{
				shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
				Object.AddIntProperty( shipFreightpod, "done", 1 );
				Object.AddIntProperty( shipFreightpod, "cargo", 42 );
				Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
				iSim.SetFaction( shipFreightpod, theOman );
				iSim.SetIndestructable( shipFreightpod, true );
				Group.AddSim( group, shipFreightpod );
			}
			
			if ( ii == 10 )
			{
				shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
				Object.AddIntProperty( shipFreightpod, "done", 1 );
				Object.AddIntProperty( shipFreightpod, "cargo", 35 );
				Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
				iSim.SetFaction( shipFreightpod, theOman );
				iSim.SetIndestructable( shipFreightpod, true );
				Group.AddSim( group, shipFreightpod );
			}
			
			if ( ii == 15 )
			{
				shipFreightpod = iShip.Create( "ini:/sims/ships/utility/freightpod", "" );
				Object.AddIntProperty( shipFreightpod, "done", 1 );
				Object.AddIntProperty( shipFreightpod, "cargo", 27 );
				Object.SetStringProperty( shipFreightpod, "name", iCargo.Name( iCargo.Find( Object.IntProperty( shipFreightpod, "cargo" ) ) ) );
				iSim.SetFaction( shipFreightpod, theOman );
				iSim.SetIndestructable( shipFreightpod, true );
				Group.AddSim( group, shipFreightpod );
			}
		}
	}
	
	Sim.PlaceRelativeTo( Group.Leader( group ), param_0_, 360.0, 0.0, -1000.0 );
	iFormation.Wall( group, 150.0, true );
	return group;
}

local_function_14( hsim param_0_, bool param_1_ )
{
	hfaction theOman = iFaction.Find( "The Oman" );
	hfaction independent = iFaction.Find( "Independent" );
	
	if ( param_1_ == 1 )
	{
		if ( !Object.PropertyExists( param_0_, "flagged" ) )
		{
			Object.AddIntProperty( param_0_, "flagged", 0 );
		}
		else if ( Object.IntProperty( param_0_, "flagged" ) == 0 )
		{
			Object.SetIntProperty( param_0_, "flagged", 1 );
			
			if ( Global.Exists( "g_asked_for_help" ) )
			{
				Object.SetStringProperty( param_0_, "name", "a2_m02_name_correct" );
				iSim.SetFaction( iSim.Cast( param_0_ ), theOman );
			}
		}
		
		return;
	}
	
	if ( !Object.PropertyExists( param_0_, "flagged" ) )
	{
		Object.AddIntProperty( param_0_, "flagged", 0 );
		return;
	}
	
	if ( Object.IntProperty( param_0_, "flagged" ) == 1 )
	{
		Object.SetIntProperty( param_0_, "flagged", 0 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		
		if ( Global.Exists( "g_asked_for_help" ) )
		{
			iSim.SetFaction( iSim.Cast( param_0_ ), independent );
		}
	}
}

local_function_13( hsim param_0_ )
{
	if ( Object.IntProperty( param_0_, "cargo" ) == 34 )
	{
		Object.SetIntProperty( param_0_, "cargo", 42 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		return;
	}
	
	if ( Object.IntProperty( param_0_, "cargo" ) == 42 )
	{
		Object.SetIntProperty( param_0_, "cargo", 45 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		return;
	}
	
	if ( Object.IntProperty( param_0_, "cargo" ) == 45 )
	{
		Object.SetIntProperty( param_0_, "cargo", 35 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		return;
	}
	
	if ( Object.IntProperty( param_0_, "cargo" ) == 35 )
	{
		Object.SetIntProperty( param_0_, "cargo", 27 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		return;
	}
	
	if ( Object.IntProperty( param_0_, "cargo" ) == 27 )
	{
		Object.SetIntProperty( param_0_, "cargo", 34 );
		Object.SetStringProperty( param_0_, "name", iCargo.Name( iCargo.Find( Object.IntProperty( param_0_, "cargo" ) ) ) );
		return;
	}
}

task local_function_16( hgroup group_, hship ship_, hstate state_ )
{
	hsim groupIter;
	int local_1;
	int ii;
	
	schedule
	{
		every 0.50:
		{
			local_1 = 0;
			
			for ( ii = 0; ii < 16; ++ii )
			{
				groupIter = Group.NthSim( group_, ii );
				
				if ( !Object.PropertyExists( groupIter, "done" ) )
				{
					if ( iShip.Attacked( iShip.Cast( groupIter ) ) )
					{
						if ( iShip.LastAttacker( iShip.Cast( groupIter ) ) == ship_ )
						{
							local_function_13( groupIter );
						}
					}
					
					switch ( ii )
					{
						case 0:
							if ( Object.IntProperty( groupIter, "cargo" ) != 45 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 1:
							if ( Object.IntProperty( groupIter, "cargo" ) != 35 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 2:
							if ( Object.IntProperty( groupIter, "cargo" ) != 34 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 3:
							if ( Object.IntProperty( groupIter, "cargo" ) != 42 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 4:
							if ( Object.IntProperty( groupIter, "cargo" ) != 34 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 5:
							if ( Object.IntProperty( groupIter, "cargo" ) != 42 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 6:
							if ( Object.IntProperty( groupIter, "cargo" ) != 27 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 7:
							if ( Object.IntProperty( groupIter, "cargo" ) != 45 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 8:
							if ( Object.IntProperty( groupIter, "cargo" ) != 27 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 9:
							if ( Object.IntProperty( groupIter, "cargo" ) != 45 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 10:
							if ( Object.IntProperty( groupIter, "cargo" ) != 35 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 11:
							if ( Object.IntProperty( groupIter, "cargo" ) != 34 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 12:
							if ( Object.IntProperty( groupIter, "cargo" ) != 35 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 13:
							if ( Object.IntProperty( groupIter, "cargo" ) != 34 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 14:
							if ( Object.IntProperty( groupIter, "cargo" ) != 42 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
						
						case 15:
							if ( Object.IntProperty( groupIter, "cargo" ) != 27 )
							{
								local_function_14( groupIter, false );
							}
							else
							{
								local_function_14( groupIter, true );
								local_1 = ( local_1 + 1 );
							}
							
							break;
					}
				}
				else
				{
					local_1 = ( local_1 + 1 );
				}
			}
			
			if ( local_1 == 16 )
			{
				Group.Destroy( group_, true );
				State.SetProgress( state_, 7 );
				return;
			}
		}
	}
}

task local_function_20( hsim param_0_, hship ship_, hstate state_ )
{
	bool local_0 = false;
	bool local_1 = false;
	bool local_2 = false;
	int convoResponse;
	hgroup group;
	
	schedule
	{
		every 2.0:
		{
			if ( iRemotePilot.ReturnCurrentRemoteVessel() == ship_ )
			{
				if ( (Sim.DistanceBetween( ship_, param_0_ ) < 800.0) && !local_0 )
				{
					local_0 = true;
					group = local_function_15( param_0_ );
					iObjectives.SetState( "a2_m02_objectives_fly_wisdom", OS_Succeeded );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_before_you" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_to_complete" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule1" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule2" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule3" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule4" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule5" );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule6" );
					
					do
					{
						iConversation.Begin();
						iConversation.AddResponse( "a2_m02_text_yes", "" );
						iConversation.AddResponse( "a2_m02_text_repeat", "" );
						convoResponse = iConversation.Ask( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_c1_any_are_you_ready" );
						
						if ( convoResponse == 2 )
						{
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_before_you" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_to_complete" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule1" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule2" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule3" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule4" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule5" );
							iConversation.Say( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_rule6" );
							iConversation.End();
						}
					}
					while ( (convoResponse != 1) && (iComms.IsInConversation() && iRemotePilot.RemoteActive()) );
					
					iConversation.End();
					iObjectives.Add( "a2_m02_objectives_complete_wisdom" );
				}
				
				if ( local_0 && !local_2 )
				{
					local_2 = true;
					start local_function_16( group, ship_, state_ );
				}
				
				if ( State.Progress( state_ ) == 7 )
				{
					iRemotePilot.DeactivateConnection();
					iSim.Kill( ship_ );
					Group.Destroy( group, true );
					Sim.Destroy( param_0_ );
					Object.SetIntProperty( state_, "wisdom", 1 );
					State.SetProgress( state_, 5 );
					iConversation.OneLiner( Group.Leader( Group.Cast( Global.Handle( "g_oman_escort" ) ) ), "", "a2_m02_dialogue_any_well_done" );
					iObjectives.SetState( "a2_m02_objectives_complete_wisdom", OS_Succeeded );
					return;
				}
			}
			else if ( local_0 )
			{
				iRemotePilot.DeactivateConnection();
				iSim.Kill( ship_ );
				Sim.Destroy( param_0_ );
				Group.Destroy( group, true );
				State.SetProgress( state_, 5 );
				iObjectives.SetState( "a2_m02_objectives_complete_wisdom", OS_Failed );
				return;
			}
		}
	}
}

hship local_function_23( hsim param_0_ )
{
	hship shipJumpTransporter = iShip.Create( "ini:/sims/ships/utility/jump_transporter", iShipCreation.ShipName( "TheOman", -1 ) );
	hship shipPuffin;
	hfaction theOman = iFaction.Find( "The Oman" );
	int ii;
	
	iSim.SetFaction( shipJumpTransporter, theOman );
	Sim.PlaceRelativeTo( shipJumpTransporter, param_0_, 2500.0, 0.0, 0.0 );
	
	for ( ii = 0; ii < 5; ++ii )
	{
		shipPuffin = iShip.Create( "ini:/sims/ships/utility/puffin", "a2_m02_name_training" );
		iSim.SetSensorVisibility( iShip.Cast( shipPuffin ), false );
		iSim.SetFaction( shipPuffin, theOman );
		iShip.Dock( shipPuffin, shipJumpTransporter );
	}
	
	return shipJumpTransporter;
}

hship local_function_17( hship ship_0_ )
{
	set localSet = Sim.Children( ship_0_ );
	hship ship_1;
	
	if ( Set.ItemCount( localSet ) != 0 )
	{
		ship_1 = iShip.Cast( Set.FirstElement( localSet ) );
		iSim.SetSensorVisibility( iShip.Cast( ship_1 ), true );
		iRemotePilot.EnableRemoteConnection( ship_1, true );
		iShip.Undock( ship_1, ship_0_ );
		Sim.SetVelocityLocalToSim( ship_1, 0.0, -300.0, 0.0 );
		return ship_1;
	}
	
	return none;
}

task local_function_22( hship ship_0_, hsim param_1_, hship ship_1_, hship ship_2_, hstate state_ )
{
	hship ship_3;
	hsim waypoint;
	int convoResponse;
	
	do
	{
		Task.Sleep( Task.Current(), 1.0 );
		
		if ( Sim.DistanceBetween( ship_0_, param_1_ ) > 400000.0 )
		{
			return;
		}
	}
	while ( Sim.DistanceBetween( ship_0_, param_1_ ) > 8000.0 );
	
	iConversation.Begin();
	
	if ( Object.IntProperty( state_, "courage" ) == 0 )
	{
		iComms.AddResponseWithCode( "a2_m02_text_player_c1_option_1_courage", "a2_m02_dialogue_player_c1_option_1_courage", 1 );
	}
	
	if ( Object.IntProperty( state_, "cunning" ) == 0 )
	{
		iComms.AddResponseWithCode( "a2_m02_text_player_c1_option_2_cunning", "a2_m02_dialogue_player_c1_option_2_cunning", 2 );
	}
	
	if ( Object.IntProperty( state_, "wisdom" ) == 0 )
	{
		iComms.AddResponseWithCode( "a2_m02_text_player_c1_option_4_wisdom", "a2_m02_dialogue_player_c1_option_4_wisdom", 3 );
	}
	
	convoResponse = iConversation.Ask( ship_1_, "", "a2_m02_dialogue_escort_c1_which_would" );
	
	switch ( convoResponse )
	{
		case 1:
			if ( Object.IntProperty( state_, "courage" ) == 1 )
			{
				State.SetProgress( state_, 5 );
				break;
			}
			
			ship_3 = local_function_17( ship_2_ );
			
			if ( ship_3 == false )
			{
				State.SetProgress( state_, 5 );
				iConversation.End();
				break;
			}
			else
			{
				waypoint = iUtilities.CreateWaypointRelativeTo( param_1_, 7000.0, 0.0, 0.0 );
				iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_courage_grn" );
				State.SetProgress( state_, 4 );
				iObjectives.Add( "a2_m02_objectives_fly_courage" );
				Task.Detach( start local_function_18( waypoint, ship_3, state_ ) );
				iConversation.Say( ship_1_, "", "a2_m02_dialogue_escort_remote_pilot_courage" );
				iConversation.End();
			}
			
			break;
		
		case 2:
			if ( Object.IntProperty( state_, "cunning" ) == 1 )
			{
				State.SetProgress( state_, 5 );
				break;
			}
			
			ship_3 = local_function_17( ship_2_ );
			
			if ( ship_3 == false )
			{
				State.SetProgress( state_, 5 );
				iConversation.End();
				break;
			}
			else
			{
				waypoint = iUtilities.CreateWaypointRelativeTo( param_1_, -7000.0, 0.0, 0.0 );
				iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_cunning_grn" );
				State.SetProgress( state_, 4 );
				iObjectives.Add( "a2_m02_objectives_fly_cunning" );
				Task.Detach( start local_function_19( waypoint, ship_3, state_ ) );
				iConversation.Say( ship_1_, "", "a2_m02_dialogue_escort_remote_pilot_cunning" );
				iConversation.End();
			}
			
			break;
		
		case 3:
			if ( Object.IntProperty( state_, "wisdom" ) == 1 )
			{
				State.SetProgress( state_, 5 );
				break;
			}
			
			ship_3 = local_function_17( ship_2_ );
			
			if ( ship_3 == false )
			{
				State.SetProgress( state_, 5 );
				iConversation.End();
				break;
			}
			else
			{
				waypoint = iUtilities.CreateWaypointRelativeTo( param_1_, 0.0, 0.0, -7000.0 );
				iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_wisdom_grn" );
				State.SetProgress( state_, 4 );
				iObjectives.Add( "a2_m02_objectives_fly_wisdom" );
				Task.Detach( start local_function_20( waypoint, ship_3, state_ ) );
				iConversation.Say( ship_1_, "", "a2_m02_dialogue_escort_remote_pilot_wisdom" );
				iConversation.End();
			}
			
			break;
	}
	
	iConversation.End();
}

hgroup local_function_24()
{
	hgroup group = Group.Create();
	hship shipOmanCutter = iShip.Create( "ini:/sims/ships/independent/oman_cutter", iShipCreation.ShipName( "TheOman", -1 ) );
	hfaction theOman = iFaction.Find( "The Oman" );
	
	iSim.SetFaction( shipOmanCutter, theOman );
	iPilotSetup.GenericCargoPod( shipOmanCutter );
	Object.SetBoolProperty( shipOmanCutter, "ignore_speed_limit", true );
	Group.AddSim( group, shipOmanCutter );
	return group;
}

bool local_function_25( hship ship_ )
{
	list localList = List.FromSet( Sim.Children( ship_ ) );
	int itemCount = List.ItemCount( localList );
	int ii;
	
	for ( ii = 0; ii < itemCount; ++ii )
	{
		if ( Object.StringProperty( List.GetNth( localList, ii ), "name" ) == "a2_m02_name_training" )
		{
			return true;
		}
	}
	
	return false;
}

task local_function_26( hgroup group_, hship ship_0_, hstate state_ )
{
	bool local_0;
	bool local_1 = true;
	bool local_2 = true;
	hmapentity daruelSalam = iMapEntity.FindByNameInSystem( "Daru el-Salam", "map:/geog/badlands/kompira" );
	hsim waypoint = iUtilities.CreateWaypointRelativeTo( daruelSalam, 0.0, 0.0, -30000.0 );
	int local_5;
	hship groupLeader = iShip.Cast( Group.Leader( group_ ) );
	hship ship_1;
	int local_8;
	htask local_9;
	int local_10;
	int local_11;
	
	if ( State.Progress( state_ ) == 0 )
	{
		iAI.PurgeOrders( groupLeader );
		
		do
		{
			Task.Sleep( Task.Current(), 2.0 );
		}
		while ( (iShip.CurrentTarget( ship_0_ ) != iSim.Cast( groupLeader )) || (iAI.CurrentOrderType( ship_0_ ) != OT_Formate) );
		
		iUtilities.MakeWaypointVisible( waypoint, true, "a2_m02_name_training_grn" );
		iAI.GiveApproachOrder( groupLeader, waypoint );
		local_2 = false;
	}
	
	schedule
	{
		every 1.0:
		{
			if ( iAI.IsOrderComplete( groupLeader ) && !local_2 )
			{
				iObjectives.SetState( "a2_m02_objectives_formate", OS_Succeeded );
				iConversation.OneLiner( groupLeader, "", "a2_m02_dialogue_escort_welcome_to" );
				iConversation.OneLiner( groupLeader, "", "a2_m02_dialogue_escort_to_prove" );
				iObjectives.Add( "a2_m02_objectives_complete" );
				State.SetProgress( state_, 1 );
				local_function_21( state_ );
				local_9 = start local_function_22( ship_0_, waypoint, groupLeader, ship_1, state_ );
				local_2 = true;
			}
			
			if ( iUtilities.PlayerInRange( waypoint ) && !local_0 )
			{
				local_function_21( state_ );
				local_0 = true;
				ship_1 = local_function_23( waypoint );
				local_1 = false;
				
				if ( local_2 )
				{
					if ( Sim.Cast( groupLeader ) == false )
					{
						groupLeader = iShip.Cast( Group.Leader( local_function_24() ) );
						Global.SetHandle( "g_oman_escort", groupLeader );
						Sim.PlaceRelativeTo( groupLeader, waypoint, 0.0, 0.0, -500.0 );
					}
					
					State.SetProgress( state_, 3 );
					local_9 = start local_function_22( ship_0_, waypoint, groupLeader, ship_1, state_ );
				}
			}
			else if ( !iUtilities.PlayerInRange( waypoint ) && local_0 )
			{
				local_0 = false;
				Task.Halt( local_9 );
				iConversation.End();
				Sim.Destroy( ship_1 );
			}
			
			if ( local_2 )
			{
				if ( !local_1 )
				{
					if ( (Object.IntProperty( state_, "courage" ) != 1) || ((Object.IntProperty( state_, "cunning" ) != 1) || (Object.IntProperty( state_, "wisdom" ) != 1)) )
					{
						if ( State.Progress( state_ ) == 5 )
						{
							local_function_21( state_ );
							
							if ( local_function_25( ship_1 ) == 0 )
							{
								local_1 = true;
								iConversation.OneLiner( groupLeader, "", "a2_m02_dialogue_escort_you_have_used" );
							}
							else
							{
								State.SetProgress( state_, 3 );
								iHUD.SetPrompt( "", "" );
								start local_function_22( ship_0_, waypoint, groupLeader, ship_1, state_ );
							}
						}
					}
					else
					{
						iConversation.OneLiner( groupLeader, "", "a2_m02_dialogue_escort_youve_done" );
						iObjectives.SetState( "a2_m02_objectives_complete", OS_Succeeded );
						State.SetProgress( state_, 8 );
						Sim.Destroy( waypoint );
						return;
					}
				}
			}
		}
	}
}

task MissionHandler()
{
	hship playerShip = iShip.FindPlayerShip();
	hmapentity daruelSalam = iMapEntity.FindByNameInSystem( "Daru el-Salam", "map:/geog/badlands/kompira" );
	hgroup group;
	hstate taskState;
	htask currentTask = Task.Current();
	
	Text.Add( "csv:/text/act_2/act2_mission02" );
	Text.Add( "csv:/text/act_2/act2_mission02_addendum" );
	taskState = State.Find( currentTask );
	iStation.AddReactiveException( iHabitat.Cast( daruelSalam ) );
	
	if ( !taskState )
	{
		taskState = State.Create( currentTask, 0 );
		Object.AddIntProperty( taskState, "courage", 0 );
		Object.AddIntProperty( taskState, "cunning", 0 );
		Object.AddIntProperty( taskState, "wisdom", 0 );
		
		if ( !( iSim.ActiveWorld() == "map:/geog/badlands/kompira" ) )
		{
			debug iUtilities.ReleaseError( "Act2 Mission02 - Mission being tested in isolation. Jumping you to the correct mission location" );
			Sim.PlaceNear( iSim.Cast( playerShip ), iSim.Cast( daruelSalam ), 4000.0 );
		}
	}
	
	local_function_21( taskState );
	iRangeCheck.AddTrafficException( iMapEntity.Cast( daruelSalam ) );
	
	if ( State.Progress( taskState ) == 0 )
	{
		iConversation.OneLiner( daruelSalam, "Abdul-Hadi", "a2_m02_dialogue_abdul_an_escort" );
		iObjectives.Add( "a2_m02_objectives_wait" );
		group = local_function_24();
		Global.CreateHandle( "g_oman_escort", 2, group );
		Sim.PlaceNear( Group.Leader( group ), playerShip, 10000.0 );
		iAI.GiveFormateOrder( group, playerShip, 150.0, 0.0, 0.0 );
		
		do
		{
			Task.Sleep( Task.Current(), 2.0 );
		}
		while ( Sim.DistanceBetween( Group.Leader( group ), playerShip ) > 1000.0 );
		
		iObjectives.SetState( "a2_m02_objectives_wait", OS_Succeeded );
		iConversation.OneLiner( Group.Leader( group ), "", "a2_m02_dialogue_escort_ok_my_friend" );
		iObjectives.Add( "a2_m02_objectives_formate" );
	}
	
	start local_function_26( group, playerShip, taskState );
	
	schedule
	{
		every 3.0:
		{
			if ( (State.Progress( taskState ) == 8) || (State.Progress( taskState ) == 100) )
			{
				if ( State.Progress( taskState ) == 8 )
				{
					Global.SetBool( "g_act2_oman_initiation_complete", true );
				}
				else
				{
					atomic
					{
						Global.SetBool( "g_skip_locked", false );
					}
					
					Task.Detach( start local_function_0() );
					Group.Destroy( group, true );
					local_function_27();
					iScore.GotoRestartPoint();
				}
				
				Sim.Destroy( Sim.FindByName( "a2_m02_name_training_grn" ) );
				State.Destroy( Task.Current() );
				Global.Destroy( "g_oman_escort" );
				Text.Remove( "csv:/text/act_2/act2_mission02" );
				Text.Remove( "csv:/text/act_2/act2_mission02_addendum" );
				iMissionTracker.RemoveMission( Task.Current() );
				iUtilities.RemoveMissionRestart();
				return;
			}
		}
	}
}

